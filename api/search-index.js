var searchIndex={};
searchIndex["lightbeam"] = {"doc":"","i":[[3,"CodeGenSession","lightbeam","",null,null],[12,"module_context","","",0,null],[12,"op_offset_map","","",0,null],[3,"ExecutableModule","","",null,null],[3,"TranslatedModule","","",null,null],[4,"ExecutionError","","",null,null],[13,"FuncIndexOutOfBounds","","",1,null],[13,"TypeMismatch","","",1,null],[5,"translate_function","","",null,[[["u32"],["functionbody"],["relocsink"],["codegensession"]],[["error"],["result",["error"]]]]],[5,"translate","","",null,[[],[["error"],["result",["executablemodule","error"]],["executablemodule"]]]],[11,"new","","",0,[[["m"],["u32"]],["self"]]],[11,"new_context","","",0,[[["relocsink"],["self"],["u32"]],["context"]]],[11,"into_translated_code_section","","",0,[[],[["result",["translatedcodesection","error"]],["error"],["translatedcodesection"]]]],[11,"instantiate","","",2,[[],["executablemodule"]]],[11,"disassemble","","",2,[[["self"]]]],[11,"execute_func_unchecked","","Executes the function identified by `func_idx`.",3,[[["functionargs"],["u32"],["self"]],["t"]]],[11,"execute_func","","",3,[[["functionargs"],["u32"],["typelist"],["self"]],[["result",["executionerror"]],["typelist"],["executionerror"]]]],[11,"disassemble","","",3,[[["self"]]]],[8,"ModuleContext","","",null,null],[16,"Signature","","",4,null],[16,"GlobalType","","",4,null],[10,"vmctx_vmglobal_definition","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmglobal_import_from","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmmemory_import_from","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmmemory_definition","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmmemory_definition_base","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmmemory_definition_current_length","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmmemory_definition_base","","",4,[[["self"]],["u8"]]],[10,"vmmemory_definition_current_length","","",4,[[["self"]],["u8"]]],[10,"vmctx_vmtable_import_from","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmtable_definition","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmtable_definition_base","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmtable_definition_current_elements","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmfunction_import_body","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmctx_vmfunction_import_vmctx","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmtable_definition_base","","",4,[[["self"]],["u8"]]],[10,"vmtable_definition_current_elements","","",4,[[["self"]],["u8"]]],[10,"vmctx_vmshared_signature_id","","",4,[[["u32"],["self"]],["u32"]]],[10,"vmcaller_checked_anyfunc_type_index","","",4,[[["self"]],["u8"]]],[10,"vmcaller_checked_anyfunc_func_ptr","","",4,[[["self"]],["u8"]]],[10,"vmcaller_checked_anyfunc_vmctx","","",4,[[["self"]],["u8"]]],[10,"size_of_vmcaller_checked_anyfunc","","",4,[[["self"]],["u8"]]],[10,"defined_table_index","","",4,[[["u32"],["self"]],[["option",["u32"]],["u32"]]]],[10,"defined_memory_index","","",4,[[["u32"],["self"]],[["option",["u32"]],["u32"]]]],[10,"defined_global_index","","",4,[[["u32"],["self"]],[["option",["u32"]],["u32"]]]],[10,"global_type","","",4,[[["u32"],["self"]]]],[10,"func_type_index","","",4,[[["u32"],["self"]],["u32"]]],[10,"signature","","",4,[[["u32"],["self"]]]],[10,"func_index","","",4,[[["u32"],["self"]],["u32"]]],[10,"defined_func_index","","",4,[[["u32"],["self"]],[["option",["u32"]],["u32"]]]],[11,"defined_func_type","","",4,[[["u32"],["self"]]]],[11,"func_type","","",4,[[["u32"],["self"]]]],[11,"emit_memory_bounds_check","","",4,[[["self"]],["bool"]]],[8,"Signature","","",null,null],[16,"Type","","",5,null],[10,"params","","",5,[[["self"]]]],[10,"returns","","",5,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone_any","","",1,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",1,[[["self"]],[["box",["cloneany"]],["cloneany"]]]],[11,"clone_any_sync","","",1,[[["self"]],[["box",["cloneany"]],["cloneany"]]]],[11,"clone_any_send_sync","","",1,[[["self"]],[["box",["cloneany"]],["cloneany"]]]],[11,"clone","","",1,[[["self"]],["executionerror"]]],[11,"default","","",2,[[],["translatedmodule"]]],[11,"eq","","",1,[[["self"],["executionerror"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"defined_func_type","","",4,[[["u32"],["self"]]]],[11,"func_type","","",4,[[["u32"],["self"]]]],[11,"emit_memory_bounds_check","","",4,[[["self"]],["bool"]]]],"p":[[3,"CodeGenSession"],[4,"ExecutionError"],[3,"TranslatedModule"],[3,"ExecutableModule"],[8,"ModuleContext"],[8,"Signature"]]};
searchIndex["wasi_common"] = {"doc":"","i":[[3,"WasiCtx","wasi_common","",null,null],[3,"WasiCtxBuilder","","A builder allowing customizable construction of `WasiCtx`…",null,null],[5,"preopen_dir","","",null,[[["asref",["path"]],["path"]],[["file"],["error"],["result",["file","error"]]]]],[11,"new","","Builder for a new `WasiCtx`.",0,[[],["self"]]],[11,"args","","Add arguments to the command-line arguments list.",0,[[],["self"]]],[11,"arg","","Add an argument to the command-line arguments list.",0,[[["asref"]],["self"]]],[11,"inherit_args","","Inherit the command-line arguments from the host process.",0,[[],["self"]]],[11,"inherit_stdio","","Inherit the stdin, stdout, and stderr streams from the…",0,[[],["self"]]],[11,"inherit_env","","Inherit the environment variables from the host process.",0,[[],["self"]]],[11,"env","","Add an entry to the environment.",0,[[["asref"]],["self"]]],[11,"envs","","Add entries to the environment.",0,[[],["self"]]],[11,"stdin","","Provide a File to use as stdin",0,[[["file"]],["self"]]],[11,"stdout","","Provide a File to use as stdout",0,[[["file"]],["self"]]],[11,"stderr","","Provide a File to use as stderr",0,[[["file"]],["self"]]],[11,"preopened_dir","","Add a preopened directory.",0,[[["asref",["path"]],["path"],["file"]],["self"]]],[11,"build","","Build a `WasiCtx`, consuming this `WasiCtxBuilder`.",0,[[],[["result",["wasictx","error"]],["wasictx"],["error"]]]],[11,"new","","Make a new `WasiCtx` with some default settings.",1,[[],[["error"],["result",["error"]]]]],[0,"fs","","A very experimental module modeled providing a high-level…",null,null],[3,"Dir","wasi_common::fs","A reference to an open directory on the filesystem.",null,null],[3,"DirBuilder","","A builder used to create directories in various manners.",null,null],[3,"DirEntry","","Entries returned by the ReadDir iterator.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[3,"FileType","","A structure representing a type of file with accessors for…",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"ReadDir","","Iterator over the entries in a directory.",null,null],[11,"from_raw_wasi_fd","","Constructs a new instance of `Self` from the given raw…",2,[[["wasictx"],["__wasi_fd_t"]],["self"]]],[11,"open_file","","Attempts to open a file in read-only mode.",2,[[["asref",["path"]],["self"],["path"]],[["file"],["result",["file"]]]]],[11,"open_file_with","","Opens a file at `path` with the options specified by `self`.",2,[[["openoptions"],["path"],["asref",["path"]],["self"]],[["file"],["result",["file"]]]]],[11,"open_dir","","Attempts to open a directory.",2,[[["asref",["path"]],["self"],["path"]],["result"]]],[11,"create_file","","Opens a file in write-only mode.",2,[[["asref",["path"]],["self"],["path"]],[["file"],["result",["file"]]]]],[11,"read","","Returns an iterator over the entries within a directory.",2,[[["self"]],[["result",["readdir"]],["readdir"]]]],[11,"into_read","","Consumes self and returns an iterator over the entries…",2,[[],["readdir"]]],[11,"read_file","","Read the entire contents of a file into a bytes vector.",2,[[["asref",["path"]],["self"],["path"]],[["vec",["u8"]],["result",["vec"]]]]],[11,"read_dir","","Returns an iterator over the entries within a directory.",2,[[["asref",["path"]],["self"],["path"]],[["result",["readdir"]],["readdir"]]]],[11,"new","","Creates a new set of options with default mode/security…",3,[[],["self"]]],[11,"recursive","","Indicates that directories should be created recursively,…",3,[[["self"],["bool"]],["self"]]],[11,"create","","Creates the specified directory with the options…",3,[[["asref",["path"]],["self"],["path"]],["result"]]],[11,"metadata","","Returns the metadata for the file that this entry points at.",4,[[["self"]],[["result",["metadata"]],["metadata"]]]],[11,"file_type","","Returns the file type for the file that this entry points…",4,[[["self"]],[["result",["filetype"]],["filetype"]]]],[11,"file_name","","Returns the bare file name of this directory entry without…",4,[[["self"]],["string"]]],[11,"from_raw_wasi_fd","","Constructs a new instance of `Self` from the given raw…",5,[[["wasictx"],["__wasi_fd_t"]],["self"]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",5,[[["self"]],["result"]]],[11,"sync_data","","This function is similar to `sync_all`, except that it may…",5,[[["self"]],["result"]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",5,[[["self"],["u64"]],["result"]]],[11,"metadata","","Queries metadata about the underlying file.",5,[[["self"]],[["result",["metadata"]],["metadata"]]]],[11,"is_dir","","Tests whether this file type represents a directory.",6,[[["self"]],["bool"]]],[11,"is_file","","Tests whether this file type represents a regular file.",6,[[["self"]],["bool"]]],[11,"is_symlink","","Tests whether this file type represents a symbolic link.",6,[[["self"]],["bool"]]],[11,"file_type","","Returns the file type for this metadata.",7,[[["self"]],["filetype"]]],[11,"is_dir","","Returns true if this metadata is for a directory.",7,[[["self"]],["bool"]]],[11,"is_file","","Returns true if this metadata is for a regular file.",7,[[["self"]],["bool"]]],[11,"len","","Returns the size of the file, in bytes, this metadata is…",7,[[["self"]],["u64"]]],[11,"permissions","","Returns the permissions of the file this metadata is for.",7,[[["self"]],["permissions"]]],[11,"modified","","Returns the last modification time listed in this metadata.",7,[[["self"]],[["systemtime"],["result",["systemtime"]]]]],[11,"accessed","","Returns the last access time of this metadata.",7,[[["self"]],[["systemtime"],["result",["systemtime"]]]]],[11,"created","","Returns the creation time listed in this metadata.",7,[[["self"]],[["systemtime"],["result",["systemtime"]]]]],[11,"new","","Creates a blank new set of options ready for configuration.",8,[[],["self"]]],[11,"read","","Sets the option for read access.",8,[[["self"],["bool"]],["self"]]],[11,"write","","Sets the option for write access.",8,[[["self"],["bool"]],["self"]]],[11,"append","","Sets the option for the append mode.",8,[[["self"],["bool"]],["self"]]],[11,"truncate","","Sets the option for truncating a previous file.",8,[[["self"],["bool"]],["self"]]],[11,"create","","Sets the option to create a new file.",8,[[["self"],["bool"]],["self"]]],[11,"create_new","","Sets the option to always create a new file.",8,[[["self"],["bool"]],["self"]]],[11,"readonly","","Returns true if these permissions describe a readonly…",9,[[["self"]],["bool"]]],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",9,[[["self"],["bool"]]]],[11,"from_raw_wasi_fd","","Constructs a new instance of `Self` from the given raw…",10,[[["__wasi_fd_t"]],["self"]]],[0,"hostcalls","wasi_common","",null,null],[5,"fd_close","wasi_common::hostcalls","",null,[[["wasictx"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_close","","",null,[[["usize"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_datasync","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_datasync","","",null,[[["usize"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_pread","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_filesize_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_pread","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_filesize_t"],["usize"]],["__wasi_errno_t"]]],[5,"fd_pwrite","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_filesize_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_pwrite","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_filesize_t"],["usize"]],["__wasi_errno_t"]]],[5,"fd_read","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"],["size_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_read","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"fd_renumber","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_renumber","","",null,[[["usize"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_seek","","",null,[[["__wasi_whence_t"],["uintptr_t"],["__wasi_fd_t"],["wasictx"],["__wasi_filedelta_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_seek","","",null,[[["__wasi_whence_t"],["usize"],["__wasi_fd_t"],["__wasi_filedelta_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_tell","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_tell","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_fdstat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_set_flags","","",null,[[["__wasi_fd_t"],["__wasi_fdflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_fdstat_set_flags","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_set_rights","","",null,[[["__wasi_fd_t"],["wasictx"],["__wasi_rights_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_fdstat_set_rights","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_rights_t"]],["__wasi_errno_t"]]],[5,"fd_sync","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_sync","","",null,[[["usize"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_write","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"],["size_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_write","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"fd_advise","","",null,[[["__wasi_filesize_t"],["__wasi_fd_t"],["__wasi_advice_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_advise","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_filesize_t"],["__wasi_advice_t"]],["__wasi_errno_t"]]],[5,"fd_allocate","","",null,[[["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_allocate","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_filesize_t"]],["__wasi_errno_t"]]],[5,"path_create_directory","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_create_directory","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"path_link","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_link","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["usize"]],["__wasi_errno_t"]]],[5,"path_open","","",null,[[["__wasi_lookupflags_t"],["uintptr_t"],["__wasi_fd_t"],["wasictx"],["size_t"],["__wasi_oflags_t"],["__wasi_rights_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"wasi_common_path_open","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["usize"],["__wasi_oflags_t"],["__wasi_rights_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"fd_readdir","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"],["size_t"],["__wasi_dircookie_t"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_readdir","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_dircookie_t"],["usize"]],["__wasi_errno_t"]]],[5,"path_readlink","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_readlink","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"path_rename","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_rename","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_filestat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_set_times","","",null,[[["__wasi_fstflags_t"],["__wasi_timestamp_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_filestat_set_times","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_timestamp_t"],["__wasi_fstflags_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_set_size","","",null,[[["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_filestat_set_size","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_filesize_t"]],["__wasi_errno_t"]]],[5,"path_filestat_get","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_filestat_get","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["usize"]],["__wasi_errno_t"]]],[5,"path_filestat_set_times","","",null,[[["__wasi_lookupflags_t"],["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"],["__wasi_timestamp_t"],["__wasi_fstflags_t"]],["__wasi_errno_t"]]],[5,"wasi_common_path_filestat_set_times","","",null,[[["__wasi_lookupflags_t"],["__wasi_fd_t"],["uintptr_t"],["size_t"],["__wasi_timestamp_t"],["usize"],["__wasi_fstflags_t"]],["__wasi_errno_t"]]],[5,"path_symlink","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_symlink","","",null,[[["usize"],["uintptr_t"],["size_t"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"path_unlink_file","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_unlink_file","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"path_remove_directory","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_path_remove_directory","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"fd_prestat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_prestat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_prestat_dir_name","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_fd_prestat_dir_name","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"proc_exit","","",null,[[["__wasi_exitcode_t"],["wasictx"]]]],[5,"wasi_common_proc_exit","","",null,[[["usize"],["__wasi_exitcode_t"]]]],[5,"proc_raise","","",null,[[["__wasi_signal_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_proc_raise","","",null,[[["usize"],["__wasi_signal_t"]],["__wasi_errno_t"]]],[5,"args_get","","",null,[[["uintptr_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_args_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"args_sizes_get","","",null,[[["uintptr_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_args_sizes_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"environ_get","","",null,[[["uintptr_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_environ_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"environ_sizes_get","","",null,[[["uintptr_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_environ_sizes_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"random_get","","",null,[[["uintptr_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_random_get","","",null,[[["usize"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"clock_res_get","","",null,[[["wasictx"],["uintptr_t"],["__wasi_clockid_t"]],["__wasi_errno_t"]]],[5,"wasi_common_clock_res_get","","",null,[[["usize"],["uintptr_t"],["__wasi_clockid_t"]],["__wasi_errno_t"]]],[5,"clock_time_get","","",null,[[["wasictx"],["__wasi_timestamp_t"],["uintptr_t"],["__wasi_clockid_t"]],["__wasi_errno_t"]]],[5,"wasi_common_clock_time_get","","",null,[[["usize"],["__wasi_timestamp_t"],["uintptr_t"],["__wasi_clockid_t"]],["__wasi_errno_t"]]],[5,"poll_oneoff","","",null,[[["uintptr_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_poll_oneoff","","",null,[[["usize"],["uintptr_t"],["size_t"]],["__wasi_errno_t"]]],[5,"sched_yield","","",null,[[["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_sched_yield","","",null,[[["usize"]],["__wasi_errno_t"]]],[5,"sock_recv","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_riflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_sock_recv","","",null,[[["uintptr_t"],["__wasi_fd_t"],["size_t"],["__wasi_riflags_t"],["usize"]],["__wasi_errno_t"]]],[5,"sock_send","","",null,[[["__wasi_siflags_t"],["uintptr_t"],["__wasi_fd_t"],["size_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_sock_send","","",null,[[["__wasi_siflags_t"],["uintptr_t"],["__wasi_fd_t"],["size_t"],["usize"]],["__wasi_errno_t"]]],[5,"sock_shutdown","","",null,[[["__wasi_fd_t"],["__wasi_sdflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"wasi_common_sock_shutdown","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_sdflags_t"]],["__wasi_errno_t"]]],[0,"old","wasi_common","",null,null],[0,"snapshot_0","wasi_common::old","",null,null],[3,"WasiCtx","wasi_common::old::snapshot_0","",null,null],[3,"WasiCtxBuilder","","A builder allowing customizable construction of `WasiCtx`…",null,null],[11,"new","","Builder for a new `WasiCtx`.",11,[[],["self"]]],[11,"args","","Add arguments to the command-line arguments list.",11,[[],["self"]]],[11,"arg","","Add an argument to the command-line arguments list.",11,[[["asref"]],["self"]]],[11,"inherit_args","","Inherit the command-line arguments from the host process.",11,[[],["self"]]],[11,"inherit_stdio","","Inherit the stdin, stdout, and stderr streams from the…",11,[[],["self"]]],[11,"inherit_env","","Inherit the environment variables from the host process.",11,[[],["self"]]],[11,"env","","Add an entry to the environment.",11,[[["asref"]],["self"]]],[11,"envs","","Add entries to the environment.",11,[[],["self"]]],[11,"stdin","","Provide a File to use as stdin",11,[[["file"]],["self"]]],[11,"stdout","","Provide a File to use as stdout",11,[[["file"]],["self"]]],[11,"stderr","","Provide a File to use as stderr",11,[[["file"]],["self"]]],[11,"preopened_dir","","Add a preopened directory.",11,[[["asref",["path"]],["path"],["file"]],["self"]]],[11,"build","","Build a `WasiCtx`, consuming this `WasiCtxBuilder`.",11,[[],[["wasictx"],["result",["wasictx"]]]]],[11,"new","","Make a new `WasiCtx` with some default settings.",12,[[],["result"]]],[0,"hostcalls","","",null,null],[5,"fd_close","wasi_common::old::snapshot_0::hostcalls","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_close","","",null,[[["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_datasync","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_datasync","","",null,[[["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_pread","","",null,[[["uintptr_t"],["size_t"],["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_pread","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["usize"],["__wasi_filesize_t"]],["__wasi_errno_t"]]],[5,"fd_pwrite","","",null,[[["uintptr_t"],["size_t"],["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_pwrite","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["usize"],["__wasi_filesize_t"]],["__wasi_errno_t"]]],[5,"fd_read","","",null,[[["size_t"],["wasictx"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_read","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_renumber","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_renumber","","",null,[[["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_seek","","",null,[[["__wasi_filedelta_t"],["wasictx"],["__wasi_fd_t"],["__wasi_whence_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_seek","","",null,[[["__wasi_filedelta_t"],["usize"],["__wasi_whence_t"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_tell","","",null,[[["wasictx"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_tell","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_fdstat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_set_flags","","",null,[[["__wasi_fd_t"],["__wasi_fdflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_fdstat_set_flags","","",null,[[["__wasi_fd_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"fd_fdstat_set_rights","","",null,[[["wasictx"],["__wasi_fd_t"],["__wasi_rights_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_fdstat_set_rights","","",null,[[["__wasi_fd_t"],["__wasi_rights_t"]],["__wasi_errno_t"]]],[5,"fd_sync","","",null,[[["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_sync","","",null,[[["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_write","","",null,[[["size_t"],["wasictx"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_write","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_advise","","",null,[[["__wasi_advice_t"],["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_advise","","",null,[[["__wasi_advice_t"],["__wasi_filesize_t"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_allocate","","",null,[[["__wasi_filesize_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_allocate","","",null,[[["__wasi_filesize_t"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"path_create_directory","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_create_directory","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"path_link","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["__wasi_lookupflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_link","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["usize"],["__wasi_lookupflags_t"]],["__wasi_errno_t"]]],[5,"path_open","","",null,[[["size_t"],["__wasi_fd_t"],["__wasi_oflags_t"],["uintptr_t"],["wasictx"],["__wasi_rights_t"],["__wasi_lookupflags_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_open","","",null,[[["size_t"],["__wasi_fd_t"],["__wasi_oflags_t"],["uintptr_t"],["usize"],["__wasi_rights_t"],["__wasi_lookupflags_t"],["__wasi_fdflags_t"]],["__wasi_errno_t"]]],[5,"fd_readdir","","",null,[[["size_t"],["__wasi_dircookie_t"],["wasictx"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_readdir","","",null,[[["size_t"],["__wasi_dircookie_t"],["__wasi_fd_t"],["uintptr_t"],["usize"]],["__wasi_errno_t"]]],[5,"path_readlink","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_readlink","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"path_rename","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_rename","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_filestat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_set_times","","",null,[[["__wasi_fstflags_t"],["__wasi_timestamp_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_filestat_set_times","","",null,[[["__wasi_fstflags_t"],["__wasi_timestamp_t"],["__wasi_fd_t"]],["__wasi_errno_t"]]],[5,"fd_filestat_set_size","","",null,[[["__wasi_fd_t"],["__wasi_filesize_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_filestat_set_size","","",null,[[["__wasi_fd_t"],["__wasi_filesize_t"]],["__wasi_errno_t"]]],[5,"path_filestat_get","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["__wasi_lookupflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_filestat_get","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["usize"],["__wasi_lookupflags_t"]],["__wasi_errno_t"]]],[5,"path_filestat_set_times","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["wasictx"],["__wasi_fstflags_t"],["__wasi_timestamp_t"],["__wasi_lookupflags_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_filestat_set_times","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["__wasi_fstflags_t"],["usize"],["__wasi_timestamp_t"],["__wasi_lookupflags_t"]],["__wasi_errno_t"]]],[5,"path_symlink","","",null,[[["wasictx"],["size_t"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_symlink","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"path_unlink_file","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_unlink_file","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"path_remove_directory","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_path_remove_directory","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_prestat_get","","",null,[[["uintptr_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_prestat_get","","",null,[[["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"fd_prestat_dir_name","","",null,[[["uintptr_t"],["size_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_fd_prestat_dir_name","","",null,[[["size_t"],["usize"],["__wasi_fd_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"proc_exit","","",null,[[["__wasi_exitcode_t"]]]],[5,"old_wasi_common_proc_exit","","",null,[[["__wasi_exitcode_t"]]]],[5,"proc_raise","","",null,[[["__wasi_signal_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_proc_raise","","",null,[[["usize"],["__wasi_signal_t"]],["__wasi_errno_t"]]],[5,"args_get","","",null,[[["wasictx"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_args_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"args_sizes_get","","",null,[[["wasictx"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_args_sizes_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"environ_get","","",null,[[["wasictx"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_environ_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"environ_sizes_get","","",null,[[["wasictx"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_environ_sizes_get","","",null,[[["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"random_get","","",null,[[["size_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_random_get","","",null,[[["size_t"],["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"clock_res_get","","",null,[[["uintptr_t"],["__wasi_clockid_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_clock_res_get","","",null,[[["usize"],["__wasi_clockid_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"clock_time_get","","",null,[[["__wasi_timestamp_t"],["__wasi_clockid_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_clock_time_get","","",null,[[["usize"],["__wasi_timestamp_t"],["__wasi_clockid_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"poll_oneoff","","",null,[[["wasictx"],["size_t"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"old_wasi_common_poll_oneoff","","",null,[[["size_t"],["usize"],["uintptr_t"]],["__wasi_errno_t"]]],[5,"sched_yield","","",null,[[],["__wasi_errno_t"]]],[5,"old_wasi_common_sched_yield","","",null,[[],["__wasi_errno_t"]]],[5,"sock_recv","","",null,[[["uintptr_t"],["size_t"],["__wasi_riflags_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_sock_recv","","",null,[[["size_t"],["__wasi_fd_t"],["uintptr_t"],["__wasi_riflags_t"],["usize"]],["__wasi_errno_t"]]],[5,"sock_send","","",null,[[["uintptr_t"],["size_t"],["__wasi_siflags_t"],["__wasi_fd_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_sock_send","","",null,[[["size_t"],["__wasi_siflags_t"],["__wasi_fd_t"],["uintptr_t"],["usize"]],["__wasi_errno_t"]]],[5,"sock_shutdown","","",null,[[["__wasi_fd_t"],["__wasi_sdflags_t"],["wasictx"]],["__wasi_errno_t"]]],[5,"old_wasi_common_sock_shutdown","","",null,[[["usize"],["__wasi_fd_t"],["__wasi_sdflags_t"]],["__wasi_errno_t"]]],[0,"wasi","wasi_common::old::snapshot_0","Types and constants shared between 32-bit and 64-bit wasi.…",null,null],[3,"__wasi_dirent_t","wasi_common::old::snapshot_0::wasi","",null,null],[12,"d_next","","",13,null],[12,"d_ino","","",13,null],[12,"d_namlen","","",13,null],[12,"d_type","","",13,null],[3,"__wasi_fdstat_t","","",null,null],[12,"fs_filetype","","",14,null],[12,"fs_flags","","",14,null],[12,"fs_rights_base","","",14,null],[12,"fs_rights_inheriting","","",14,null],[3,"__wasi_filestat_t","","",null,null],[12,"dev","","",15,null],[12,"ino","","",15,null],[12,"filetype","","",15,null],[12,"nlink","","",15,null],[12,"size","","",15,null],[12,"atim","","",15,null],[12,"mtim","","",15,null],[12,"ctim","","",15,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",16,null],[12,"flags","","",16,null],[3,"__wasi_event_t","","",null,null],[12,"userdata","","",17,null],[12,"error","","",17,null],[12,"type","","",17,null],[12,"u","","",17,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"identifier","","",18,null],[12,"id","","",18,null],[12,"timeout","","",18,null],[12,"precision","","",18,null],[12,"flags","","",18,null],[3,"__wasi_subscription_fd_readwrite_t","","",null,null],[12,"file_descriptor","","",19,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",20,null],[12,"type","","",20,null],[12,"u","","",20,null],[19,"__wasi_event_u_t","","",null,null],[12,"fd_readwrite","","",21,null],[19,"__wasi_subscription_u_t","","",null,null],[12,"clock","","",22,null],[12,"fd_readwrite","","",22,null],[5,"strerror","","",null,[[["__wasi_errno_t"]],["str"]]],[5,"whence_to_str","","",null,[[["__wasi_whence_t"]],["str"]]],[6,"__wasi_filesize_t","","",null,null],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_clockid_t","","",null,null],[6,"__wasi_errno_t","","",null,null],[6,"__wasi_rights_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[6,"__wasi_dirnamlen_t","","",null,null],[6,"__wasi_inode_t","","",null,null],[6,"__wasi_filetype_t","","",null,null],[6,"__wasi_advice_t","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[6,"__wasi_oflags_t","","",null,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[6,"__wasi_eventrwflags_t","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[6,"__wasi_riflags_t","","",null,null],[6,"__wasi_roflags_t","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[17,"__WASI_CLOCKID_REALTIME","","",null,null],[17,"__WASI_CLOCKID_MONOTONIC","","",null,null],[17,"__WASI_CLOCKID_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCKID_THREAD_CPUTIME_ID","","",null,null],[17,"__WASI_ERRNO_SUCCESS","","",null,null],[17,"__WASI_ERRNO_2BIG","","",null,null],[17,"__WASI_ERRNO_ACCES","","",null,null],[17,"__WASI_ERRNO_ADDRINUSE","","",null,null],[17,"__WASI_ERRNO_ADDRNOTAVAIL","","",null,null],[17,"__WASI_ERRNO_AFNOSUPPORT","","",null,null],[17,"__WASI_ERRNO_AGAIN","","",null,null],[17,"__WASI_ERRNO_ALREADY","","",null,null],[17,"__WASI_ERRNO_BADF","","",null,null],[17,"__WASI_ERRNO_BADMSG","","",null,null],[17,"__WASI_ERRNO_BUSY","","",null,null],[17,"__WASI_ERRNO_CANCELED","","",null,null],[17,"__WASI_ERRNO_CHILD","","",null,null],[17,"__WASI_ERRNO_CONNABORTED","","",null,null],[17,"__WASI_ERRNO_CONNREFUSED","","",null,null],[17,"__WASI_ERRNO_CONNRESET","","",null,null],[17,"__WASI_ERRNO_DEADLK","","",null,null],[17,"__WASI_ERRNO_DESTADDRREQ","","",null,null],[17,"__WASI_ERRNO_DOM","","",null,null],[17,"__WASI_ERRNO_DQUOT","","",null,null],[17,"__WASI_ERRNO_EXIST","","",null,null],[17,"__WASI_ERRNO_FAULT","","",null,null],[17,"__WASI_ERRNO_FBIG","","",null,null],[17,"__WASI_ERRNO_HOSTUNREACH","","",null,null],[17,"__WASI_ERRNO_IDRM","","",null,null],[17,"__WASI_ERRNO_ILSEQ","","",null,null],[17,"__WASI_ERRNO_INPROGRESS","","",null,null],[17,"__WASI_ERRNO_INTR","","",null,null],[17,"__WASI_ERRNO_INVAL","","",null,null],[17,"__WASI_ERRNO_IO","","",null,null],[17,"__WASI_ERRNO_ISCONN","","",null,null],[17,"__WASI_ERRNO_ISDIR","","",null,null],[17,"__WASI_ERRNO_LOOP","","",null,null],[17,"__WASI_ERRNO_MFILE","","",null,null],[17,"__WASI_ERRNO_MLINK","","",null,null],[17,"__WASI_ERRNO_MSGSIZE","","",null,null],[17,"__WASI_ERRNO_MULTIHOP","","",null,null],[17,"__WASI_ERRNO_NAMETOOLONG","","",null,null],[17,"__WASI_ERRNO_NETDOWN","","",null,null],[17,"__WASI_ERRNO_NETRESET","","",null,null],[17,"__WASI_ERRNO_NETUNREACH","","",null,null],[17,"__WASI_ERRNO_NFILE","","",null,null],[17,"__WASI_ERRNO_NOBUFS","","",null,null],[17,"__WASI_ERRNO_NODEV","","",null,null],[17,"__WASI_ERRNO_NOENT","","",null,null],[17,"__WASI_ERRNO_NOEXEC","","",null,null],[17,"__WASI_ERRNO_NOLCK","","",null,null],[17,"__WASI_ERRNO_NOLINK","","",null,null],[17,"__WASI_ERRNO_NOMEM","","",null,null],[17,"__WASI_ERRNO_NOMSG","","",null,null],[17,"__WASI_ERRNO_NOPROTOOPT","","",null,null],[17,"__WASI_ERRNO_NOSPC","","",null,null],[17,"__WASI_ERRNO_NOSYS","","",null,null],[17,"__WASI_ERRNO_NOTCONN","","",null,null],[17,"__WASI_ERRNO_NOTDIR","","",null,null],[17,"__WASI_ERRNO_NOTEMPTY","","",null,null],[17,"__WASI_ERRNO_NOTRECOVERABLE","","",null,null],[17,"__WASI_ERRNO_NOTSOCK","","",null,null],[17,"__WASI_ERRNO_NOTSUP","","",null,null],[17,"__WASI_ERRNO_NOTTY","","",null,null],[17,"__WASI_ERRNO_NXIO","","",null,null],[17,"__WASI_ERRNO_OVERFLOW","","",null,null],[17,"__WASI_ERRNO_OWNERDEAD","","",null,null],[17,"__WASI_ERRNO_PERM","","",null,null],[17,"__WASI_ERRNO_PIPE","","",null,null],[17,"__WASI_ERRNO_PROTO","","",null,null],[17,"__WASI_ERRNO_PROTONOSUPPORT","","",null,null],[17,"__WASI_ERRNO_PROTOTYPE","","",null,null],[17,"__WASI_ERRNO_RANGE","","",null,null],[17,"__WASI_ERRNO_ROFS","","",null,null],[17,"__WASI_ERRNO_SPIPE","","",null,null],[17,"__WASI_ERRNO_SRCH","","",null,null],[17,"__WASI_ERRNO_STALE","","",null,null],[17,"__WASI_ERRNO_TIMEDOUT","","",null,null],[17,"__WASI_ERRNO_TXTBSY","","",null,null],[17,"__WASI_ERRNO_XDEV","","",null,null],[17,"__WASI_ERRNO_NOTCAPABLE","","",null,null],[17,"__WASI_RIGHTS_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHTS_FD_READ","","",null,null],[17,"__WASI_RIGHTS_FD_SEEK","","",null,null],[17,"__WASI_RIGHTS_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHTS_FD_SYNC","","",null,null],[17,"__WASI_RIGHTS_FD_TELL","","",null,null],[17,"__WASI_RIGHTS_FD_WRITE","","",null,null],[17,"__WASI_RIGHTS_FD_ADVISE","","",null,null],[17,"__WASI_RIGHTS_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHTS_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHTS_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHTS_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHTS_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHTS_PATH_OPEN","","",null,null],[17,"__WASI_RIGHTS_FD_READDIR","","",null,null],[17,"__WASI_RIGHTS_PATH_READLINK","","",null,null],[17,"__WASI_RIGHTS_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHTS_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHTS_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHTS_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHTS_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHTS_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHTS_SOCK_SHUTDOWN","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[17,"__WASI_FDFLAGS_APPEND","","",null,null],[17,"__WASI_FDFLAGS_DSYNC","","",null,null],[17,"__WASI_FDFLAGS_NONBLOCK","","",null,null],[17,"__WASI_FDFLAGS_RSYNC","","",null,null],[17,"__WASI_FDFLAGS_SYNC","","",null,null],[17,"__WASI_FSTFLAGS_ATIM","","",null,null],[17,"__WASI_FSTFLAGS_ATIM_NOW","","",null,null],[17,"__WASI_FSTFLAGS_MTIM","","",null,null],[17,"__WASI_FSTFLAGS_MTIM_NOW","","",null,null],[17,"__WASI_LOOKUPFLAGS_SYMLINK_FOLLOW","","",null,null],[17,"__WASI_OFLAGS_CREAT","","",null,null],[17,"__WASI_OFLAGS_DIRECTORY","","",null,null],[17,"__WASI_OFLAGS_EXCL","","",null,null],[17,"__WASI_OFLAGS_TRUNC","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[17,"__WASI_EVENTRWFLAGS_FD_READWRITE_HANGUP","","",null,null],[17,"__WASI_SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[17,"__WASI_SIGNAL_NONE","","",null,null],[17,"__WASI_SIGNAL_HUP","","",null,null],[17,"__WASI_SIGNAL_INT","","",null,null],[17,"__WASI_SIGNAL_QUIT","","",null,null],[17,"__WASI_SIGNAL_ILL","","",null,null],[17,"__WASI_SIGNAL_TRAP","","",null,null],[17,"__WASI_SIGNAL_ABRT","","",null,null],[17,"__WASI_SIGNAL_BUS","","",null,null],[17,"__WASI_SIGNAL_FPE","","",null,null],[17,"__WASI_SIGNAL_KILL","","",null,null],[17,"__WASI_SIGNAL_USR1","","",null,null],[17,"__WASI_SIGNAL_SEGV","","",null,null],[17,"__WASI_SIGNAL_USR2","","",null,null],[17,"__WASI_SIGNAL_PIPE","","",null,null],[17,"__WASI_SIGNAL_ALRM","","",null,null],[17,"__WASI_SIGNAL_TERM","","",null,null],[17,"__WASI_SIGNAL_CHLD","","",null,null],[17,"__WASI_SIGNAL_CONT","","",null,null],[17,"__WASI_SIGNAL_STOP","","",null,null],[17,"__WASI_SIGNAL_TSTP","","",null,null],[17,"__WASI_SIGNAL_TTIN","","",null,null],[17,"__WASI_SIGNAL_TTOU","","",null,null],[17,"__WASI_SIGNAL_URG","","",null,null],[17,"__WASI_SIGNAL_XCPU","","",null,null],[17,"__WASI_SIGNAL_XFSZ","","",null,null],[17,"__WASI_SIGNAL_VTALRM","","",null,null],[17,"__WASI_SIGNAL_PROF","","",null,null],[17,"__WASI_SIGNAL_WINCH","","",null,null],[17,"__WASI_SIGNAL_POLL","","",null,null],[17,"__WASI_SIGNAL_PWR","","",null,null],[17,"__WASI_SIGNAL_SYS","","",null,null],[17,"__WASI_RIFLAGS_RECV_PEEK","","",null,null],[17,"__WASI_RIFLAGS_RECV_WAITALL","","",null,null],[17,"__WASI_ROFLAGS_RECV_DATA_TRUNCATED","","",null,null],[17,"__WASI_SDFLAGS_RD","","",null,null],[17,"__WASI_SDFLAGS_WR","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[0,"wasi32","wasi_common::old::snapshot_0","Types and constants specific to 32-bit wasi. These are…",null,null],[3,"__wasi_iovec_t","wasi_common::old::snapshot_0::wasi32","",null,null],[12,"buf","","",23,null],[12,"buf_len","","",23,null],[3,"__wasi_ciovec_t","","",null,null],[12,"buf","","",24,null],[12,"buf_len","","",24,null],[3,"__wasi_prestat_dir_t","","",null,null],[12,"pr_name_len","","",25,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",26,null],[12,"u","","",26,null],[19,"__wasi_prestat_u_t","","",null,null],[12,"dir","","",27,null],[6,"uintptr_t","","",null,null],[6,"size_t","","",null,null],[6,"__wasi_size_t","","",null,null],[6,"__wasi_iovec_array_t","","",null,null],[6,"__wasi_ciovec_array_t","","",null,null],[6,"Error","wasi_common::old::snapshot_0","",null,null],[6,"Result","","",null,null],[0,"wasi","wasi_common","Types and constants shared between 32-bit and 64-bit wasi.…",null,null],[3,"__wasi_dirent_t","wasi_common::wasi","",null,null],[12,"d_next","","",28,null],[12,"d_ino","","",28,null],[12,"d_namlen","","",28,null],[12,"d_type","","",28,null],[3,"__wasi_fdstat_t","","",null,null],[12,"fs_filetype","","",29,null],[12,"fs_flags","","",29,null],[12,"fs_rights_base","","",29,null],[12,"fs_rights_inheriting","","",29,null],[3,"__wasi_filestat_t","","",null,null],[12,"dev","","",30,null],[12,"ino","","",30,null],[12,"filetype","","",30,null],[12,"nlink","","",30,null],[12,"size","","",30,null],[12,"atim","","",30,null],[12,"mtim","","",30,null],[12,"ctim","","",30,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",31,null],[12,"flags","","",31,null],[3,"__wasi_event_t","","",null,null],[12,"userdata","","",32,null],[12,"error","","",32,null],[12,"type","","",32,null],[12,"u","","",32,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"id","","",33,null],[12,"timeout","","",33,null],[12,"precision","","",33,null],[12,"flags","","",33,null],[3,"__wasi_subscription_fd_readwrite_t","","",null,null],[12,"file_descriptor","","",34,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",35,null],[12,"type","","",35,null],[12,"u","","",35,null],[19,"__wasi_event_u_t","","",null,null],[12,"fd_readwrite","","",36,null],[19,"__wasi_subscription_u_t","","",null,null],[12,"clock","","",37,null],[12,"fd_readwrite","","",37,null],[5,"strerror","","",null,[[["__wasi_errno_t"]],["str"]]],[5,"whence_to_str","","",null,[[["__wasi_whence_t"]],["str"]]],[6,"__wasi_filesize_t","","",null,null],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_clockid_t","","",null,null],[6,"__wasi_errno_t","","",null,null],[6,"__wasi_rights_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[6,"__wasi_dirnamlen_t","","",null,null],[6,"__wasi_inode_t","","",null,null],[6,"__wasi_filetype_t","","",null,null],[6,"__wasi_advice_t","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[6,"__wasi_oflags_t","","",null,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[6,"__wasi_eventrwflags_t","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[6,"__wasi_riflags_t","","",null,null],[6,"__wasi_roflags_t","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[17,"__WASI_CLOCKID_REALTIME","","",null,null],[17,"__WASI_CLOCKID_MONOTONIC","","",null,null],[17,"__WASI_CLOCKID_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCKID_THREAD_CPUTIME_ID","","",null,null],[17,"__WASI_ERRNO_SUCCESS","","",null,null],[17,"__WASI_ERRNO_2BIG","","",null,null],[17,"__WASI_ERRNO_ACCES","","",null,null],[17,"__WASI_ERRNO_ADDRINUSE","","",null,null],[17,"__WASI_ERRNO_ADDRNOTAVAIL","","",null,null],[17,"__WASI_ERRNO_AFNOSUPPORT","","",null,null],[17,"__WASI_ERRNO_AGAIN","","",null,null],[17,"__WASI_ERRNO_ALREADY","","",null,null],[17,"__WASI_ERRNO_BADF","","",null,null],[17,"__WASI_ERRNO_BADMSG","","",null,null],[17,"__WASI_ERRNO_BUSY","","",null,null],[17,"__WASI_ERRNO_CANCELED","","",null,null],[17,"__WASI_ERRNO_CHILD","","",null,null],[17,"__WASI_ERRNO_CONNABORTED","","",null,null],[17,"__WASI_ERRNO_CONNREFUSED","","",null,null],[17,"__WASI_ERRNO_CONNRESET","","",null,null],[17,"__WASI_ERRNO_DEADLK","","",null,null],[17,"__WASI_ERRNO_DESTADDRREQ","","",null,null],[17,"__WASI_ERRNO_DOM","","",null,null],[17,"__WASI_ERRNO_DQUOT","","",null,null],[17,"__WASI_ERRNO_EXIST","","",null,null],[17,"__WASI_ERRNO_FAULT","","",null,null],[17,"__WASI_ERRNO_FBIG","","",null,null],[17,"__WASI_ERRNO_HOSTUNREACH","","",null,null],[17,"__WASI_ERRNO_IDRM","","",null,null],[17,"__WASI_ERRNO_ILSEQ","","",null,null],[17,"__WASI_ERRNO_INPROGRESS","","",null,null],[17,"__WASI_ERRNO_INTR","","",null,null],[17,"__WASI_ERRNO_INVAL","","",null,null],[17,"__WASI_ERRNO_IO","","",null,null],[17,"__WASI_ERRNO_ISCONN","","",null,null],[17,"__WASI_ERRNO_ISDIR","","",null,null],[17,"__WASI_ERRNO_LOOP","","",null,null],[17,"__WASI_ERRNO_MFILE","","",null,null],[17,"__WASI_ERRNO_MLINK","","",null,null],[17,"__WASI_ERRNO_MSGSIZE","","",null,null],[17,"__WASI_ERRNO_MULTIHOP","","",null,null],[17,"__WASI_ERRNO_NAMETOOLONG","","",null,null],[17,"__WASI_ERRNO_NETDOWN","","",null,null],[17,"__WASI_ERRNO_NETRESET","","",null,null],[17,"__WASI_ERRNO_NETUNREACH","","",null,null],[17,"__WASI_ERRNO_NFILE","","",null,null],[17,"__WASI_ERRNO_NOBUFS","","",null,null],[17,"__WASI_ERRNO_NODEV","","",null,null],[17,"__WASI_ERRNO_NOENT","","",null,null],[17,"__WASI_ERRNO_NOEXEC","","",null,null],[17,"__WASI_ERRNO_NOLCK","","",null,null],[17,"__WASI_ERRNO_NOLINK","","",null,null],[17,"__WASI_ERRNO_NOMEM","","",null,null],[17,"__WASI_ERRNO_NOMSG","","",null,null],[17,"__WASI_ERRNO_NOPROTOOPT","","",null,null],[17,"__WASI_ERRNO_NOSPC","","",null,null],[17,"__WASI_ERRNO_NOSYS","","",null,null],[17,"__WASI_ERRNO_NOTCONN","","",null,null],[17,"__WASI_ERRNO_NOTDIR","","",null,null],[17,"__WASI_ERRNO_NOTEMPTY","","",null,null],[17,"__WASI_ERRNO_NOTRECOVERABLE","","",null,null],[17,"__WASI_ERRNO_NOTSOCK","","",null,null],[17,"__WASI_ERRNO_NOTSUP","","",null,null],[17,"__WASI_ERRNO_NOTTY","","",null,null],[17,"__WASI_ERRNO_NXIO","","",null,null],[17,"__WASI_ERRNO_OVERFLOW","","",null,null],[17,"__WASI_ERRNO_OWNERDEAD","","",null,null],[17,"__WASI_ERRNO_PERM","","",null,null],[17,"__WASI_ERRNO_PIPE","","",null,null],[17,"__WASI_ERRNO_PROTO","","",null,null],[17,"__WASI_ERRNO_PROTONOSUPPORT","","",null,null],[17,"__WASI_ERRNO_PROTOTYPE","","",null,null],[17,"__WASI_ERRNO_RANGE","","",null,null],[17,"__WASI_ERRNO_ROFS","","",null,null],[17,"__WASI_ERRNO_SPIPE","","",null,null],[17,"__WASI_ERRNO_SRCH","","",null,null],[17,"__WASI_ERRNO_STALE","","",null,null],[17,"__WASI_ERRNO_TIMEDOUT","","",null,null],[17,"__WASI_ERRNO_TXTBSY","","",null,null],[17,"__WASI_ERRNO_XDEV","","",null,null],[17,"__WASI_ERRNO_NOTCAPABLE","","",null,null],[17,"__WASI_RIGHTS_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHTS_FD_READ","","",null,null],[17,"__WASI_RIGHTS_FD_SEEK","","",null,null],[17,"__WASI_RIGHTS_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHTS_FD_SYNC","","",null,null],[17,"__WASI_RIGHTS_FD_TELL","","",null,null],[17,"__WASI_RIGHTS_FD_WRITE","","",null,null],[17,"__WASI_RIGHTS_FD_ADVISE","","",null,null],[17,"__WASI_RIGHTS_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHTS_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHTS_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHTS_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHTS_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHTS_PATH_OPEN","","",null,null],[17,"__WASI_RIGHTS_FD_READDIR","","",null,null],[17,"__WASI_RIGHTS_PATH_READLINK","","",null,null],[17,"__WASI_RIGHTS_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHTS_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHTS_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHTS_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHTS_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHTS_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHTS_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHTS_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHTS_SOCK_SHUTDOWN","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[17,"__WASI_FDFLAGS_APPEND","","",null,null],[17,"__WASI_FDFLAGS_DSYNC","","",null,null],[17,"__WASI_FDFLAGS_NONBLOCK","","",null,null],[17,"__WASI_FDFLAGS_RSYNC","","",null,null],[17,"__WASI_FDFLAGS_SYNC","","",null,null],[17,"__WASI_FSTFLAGS_ATIM","","",null,null],[17,"__WASI_FSTFLAGS_ATIM_NOW","","",null,null],[17,"__WASI_FSTFLAGS_MTIM","","",null,null],[17,"__WASI_FSTFLAGS_MTIM_NOW","","",null,null],[17,"__WASI_LOOKUPFLAGS_SYMLINK_FOLLOW","","",null,null],[17,"__WASI_OFLAGS_CREAT","","",null,null],[17,"__WASI_OFLAGS_DIRECTORY","","",null,null],[17,"__WASI_OFLAGS_EXCL","","",null,null],[17,"__WASI_OFLAGS_TRUNC","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[17,"__WASI_EVENTRWFLAGS_FD_READWRITE_HANGUP","","",null,null],[17,"__WASI_SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[17,"__WASI_SIGNAL_NONE","","",null,null],[17,"__WASI_SIGNAL_HUP","","",null,null],[17,"__WASI_SIGNAL_INT","","",null,null],[17,"__WASI_SIGNAL_QUIT","","",null,null],[17,"__WASI_SIGNAL_ILL","","",null,null],[17,"__WASI_SIGNAL_TRAP","","",null,null],[17,"__WASI_SIGNAL_ABRT","","",null,null],[17,"__WASI_SIGNAL_BUS","","",null,null],[17,"__WASI_SIGNAL_FPE","","",null,null],[17,"__WASI_SIGNAL_KILL","","",null,null],[17,"__WASI_SIGNAL_USR1","","",null,null],[17,"__WASI_SIGNAL_SEGV","","",null,null],[17,"__WASI_SIGNAL_USR2","","",null,null],[17,"__WASI_SIGNAL_PIPE","","",null,null],[17,"__WASI_SIGNAL_ALRM","","",null,null],[17,"__WASI_SIGNAL_TERM","","",null,null],[17,"__WASI_SIGNAL_CHLD","","",null,null],[17,"__WASI_SIGNAL_CONT","","",null,null],[17,"__WASI_SIGNAL_STOP","","",null,null],[17,"__WASI_SIGNAL_TSTP","","",null,null],[17,"__WASI_SIGNAL_TTIN","","",null,null],[17,"__WASI_SIGNAL_TTOU","","",null,null],[17,"__WASI_SIGNAL_URG","","",null,null],[17,"__WASI_SIGNAL_XCPU","","",null,null],[17,"__WASI_SIGNAL_XFSZ","","",null,null],[17,"__WASI_SIGNAL_VTALRM","","",null,null],[17,"__WASI_SIGNAL_PROF","","",null,null],[17,"__WASI_SIGNAL_WINCH","","",null,null],[17,"__WASI_SIGNAL_POLL","","",null,null],[17,"__WASI_SIGNAL_PWR","","",null,null],[17,"__WASI_SIGNAL_SYS","","",null,null],[17,"__WASI_RIFLAGS_RECV_PEEK","","",null,null],[17,"__WASI_RIFLAGS_RECV_WAITALL","","",null,null],[17,"__WASI_ROFLAGS_RECV_DATA_TRUNCATED","","",null,null],[17,"__WASI_SDFLAGS_RD","","",null,null],[17,"__WASI_SDFLAGS_WR","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[0,"wasi32","wasi_common","Types and constants specific to 32-bit wasi. These are…",null,null],[3,"__wasi_iovec_t","wasi_common::wasi32","",null,null],[12,"buf","","",38,null],[12,"buf_len","","",38,null],[3,"__wasi_ciovec_t","","",null,null],[12,"buf","","",39,null],[12,"buf_len","","",39,null],[3,"__wasi_prestat_dir_t","","",null,null],[12,"pr_name_len","","",40,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",41,null],[12,"u","","",41,null],[19,"__wasi_prestat_u_t","","",null,null],[12,"dir","","",42,null],[6,"uintptr_t","","",null,null],[6,"size_t","","",null,null],[6,"__wasi_size_t","","",null,null],[6,"__wasi_iovec_array_t","","",null,null],[6,"__wasi_ciovec_array_t","","",null,null],[6,"Error","wasi_common","",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","wasi_common::fs","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","wasi_common::old::snapshot_0","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","wasi_common::old::snapshot_0::wasi","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","wasi_common::old::snapshot_0::wasi32","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","wasi_common::wasi","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","wasi_common::wasi32","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"drop","wasi_common::fs","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","TODO: Not yet implemented.",10,[[["self"]],["option"]]],[11,"clone","","",6,[[["self"]],["filetype"]]],[11,"clone","","",7,[[["self"]],["metadata"]]],[11,"clone","","",9,[[["self"]],["permissions"]]],[11,"clone","wasi_common::old::snapshot_0::wasi","",13,[[["self"]],["__wasi_dirent_t"]]],[11,"clone","","",14,[[["self"]],["__wasi_fdstat_t"]]],[11,"clone","","",15,[[["self"]],["__wasi_filestat_t"]]],[11,"clone","","",16,[[["self"]],["__wasi_event_fd_readwrite_t"]]],[11,"clone","","",21,[[["self"]],["__wasi_event_u_t"]]],[11,"clone","","",17,[[["self"]],["__wasi_event_t"]]],[11,"clone","","",18,[[["self"]],["__wasi_subscription_clock_t"]]],[11,"clone","","",19,[[["self"]],["__wasi_subscription_fd_readwrite_t"]]],[11,"clone","","",22,[[["self"]],["__wasi_subscription_u_t"]]],[11,"clone","","",20,[[["self"]],["__wasi_subscription_t"]]],[11,"clone","wasi_common::old::snapshot_0::wasi32","",23,[[["self"]],["__wasi_iovec_t"]]],[11,"clone","","",24,[[["self"]],["__wasi_ciovec_t"]]],[11,"clone","","",25,[[["self"]],["__wasi_prestat_dir_t"]]],[11,"clone","","",27,[[["self"]],["__wasi_prestat_u_t"]]],[11,"clone","","",26,[[["self"]],["__wasi_prestat_t"]]],[11,"clone","wasi_common::wasi","",28,[[["self"]],["__wasi_dirent_t"]]],[11,"clone","","",29,[[["self"]],["__wasi_fdstat_t"]]],[11,"clone","","",30,[[["self"]],["__wasi_filestat_t"]]],[11,"clone","","",31,[[["self"]],["__wasi_event_fd_readwrite_t"]]],[11,"clone","","",36,[[["self"]],["__wasi_event_u_t"]]],[11,"clone","","",32,[[["self"]],["__wasi_event_t"]]],[11,"clone","","",33,[[["self"]],["__wasi_subscription_clock_t"]]],[11,"clone","","",34,[[["self"]],["__wasi_subscription_fd_readwrite_t"]]],[11,"clone","","",37,[[["self"]],["__wasi_subscription_u_t"]]],[11,"clone","","",35,[[["self"]],["__wasi_subscription_t"]]],[11,"clone","wasi_common::wasi32","",38,[[["self"]],["__wasi_iovec_t"]]],[11,"clone","","",39,[[["self"]],["__wasi_ciovec_t"]]],[11,"clone","","",40,[[["self"]],["__wasi_prestat_dir_t"]]],[11,"clone","","",42,[[["self"]],["__wasi_prestat_u_t"]]],[11,"clone","","",41,[[["self"]],["__wasi_prestat_t"]]],[11,"eq","wasi_common::fs","",6,[[["filetype"],["self"]],["bool"]]],[11,"eq","","",9,[[["permissions"],["self"]],["bool"]]],[11,"eq","wasi_common::old::snapshot_0::wasi","",13,[[["self"],["__wasi_dirent_t"]],["bool"]]],[11,"ne","","",13,[[["self"],["__wasi_dirent_t"]],["bool"]]],[11,"eq","","",14,[[["__wasi_fdstat_t"],["self"]],["bool"]]],[11,"ne","","",14,[[["__wasi_fdstat_t"],["self"]],["bool"]]],[11,"eq","","",15,[[["__wasi_filestat_t"],["self"]],["bool"]]],[11,"ne","","",15,[[["__wasi_filestat_t"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["__wasi_event_fd_readwrite_t"]],["bool"]]],[11,"ne","","",16,[[["self"],["__wasi_event_fd_readwrite_t"]],["bool"]]],[11,"eq","","",18,[[["__wasi_subscription_clock_t"],["self"]],["bool"]]],[11,"ne","","",18,[[["__wasi_subscription_clock_t"],["self"]],["bool"]]],[11,"eq","","",19,[[["__wasi_subscription_fd_readwrite_t"],["self"]],["bool"]]],[11,"ne","","",19,[[["__wasi_subscription_fd_readwrite_t"],["self"]],["bool"]]],[11,"eq","wasi_common::old::snapshot_0::wasi32","",23,[[["__wasi_iovec_t"],["self"]],["bool"]]],[11,"ne","","",23,[[["__wasi_iovec_t"],["self"]],["bool"]]],[11,"eq","","",24,[[["__wasi_ciovec_t"],["self"]],["bool"]]],[11,"ne","","",24,[[["__wasi_ciovec_t"],["self"]],["bool"]]],[11,"eq","","",25,[[["__wasi_prestat_dir_t"],["self"]],["bool"]]],[11,"ne","","",25,[[["__wasi_prestat_dir_t"],["self"]],["bool"]]],[11,"eq","wasi_common::wasi","",28,[[["self"],["__wasi_dirent_t"]],["bool"]]],[11,"ne","","",28,[[["self"],["__wasi_dirent_t"]],["bool"]]],[11,"eq","","",29,[[["__wasi_fdstat_t"],["self"]],["bool"]]],[11,"ne","","",29,[[["__wasi_fdstat_t"],["self"]],["bool"]]],[11,"eq","","",30,[[["__wasi_filestat_t"],["self"]],["bool"]]],[11,"ne","","",30,[[["__wasi_filestat_t"],["self"]],["bool"]]],[11,"eq","","",31,[[["__wasi_event_fd_readwrite_t"],["self"]],["bool"]]],[11,"ne","","",31,[[["__wasi_event_fd_readwrite_t"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["__wasi_subscription_clock_t"]],["bool"]]],[11,"ne","","",33,[[["self"],["__wasi_subscription_clock_t"]],["bool"]]],[11,"eq","","",34,[[["__wasi_subscription_fd_readwrite_t"],["self"]],["bool"]]],[11,"ne","","",34,[[["__wasi_subscription_fd_readwrite_t"],["self"]],["bool"]]],[11,"eq","wasi_common::wasi32","",38,[[["self"],["__wasi_iovec_t"]],["bool"]]],[11,"ne","","",38,[[["self"],["__wasi_iovec_t"]],["bool"]]],[11,"eq","","",39,[[["__wasi_ciovec_t"],["self"]],["bool"]]],[11,"ne","","",39,[[["__wasi_ciovec_t"],["self"]],["bool"]]],[11,"eq","","",40,[[["__wasi_prestat_dir_t"],["self"]],["bool"]]],[11,"ne","","",40,[[["__wasi_prestat_dir_t"],["self"]],["bool"]]],[11,"fmt","wasi_common","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasi_common::old::snapshot_0","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasi_common::old::snapshot_0::wasi","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasi_common::old::snapshot_0::wasi32","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasi_common::wasi","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasi_common::wasi32","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"hash","wasi_common::fs","",6,[[["self"],["__h"]]]],[11,"hash","wasi_common::old::snapshot_0::wasi","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","wasi_common::old::snapshot_0::wasi32","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","wasi_common::wasi","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","wasi_common::wasi32","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"read","wasi_common::fs","TODO: Not yet implemented. See the comment in…",5,[[["self"]],[["usize"],["result",["usize"]]]]]],"p":[[3,"WasiCtxBuilder"],[3,"WasiCtx"],[3,"Dir"],[3,"DirBuilder"],[3,"DirEntry"],[3,"File"],[3,"FileType"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"ReadDir"],[3,"WasiCtxBuilder"],[3,"WasiCtx"],[3,"__wasi_dirent_t"],[3,"__wasi_fdstat_t"],[3,"__wasi_filestat_t"],[3,"__wasi_event_fd_readwrite_t"],[3,"__wasi_event_t"],[3,"__wasi_subscription_clock_t"],[3,"__wasi_subscription_fd_readwrite_t"],[3,"__wasi_subscription_t"],[19,"__wasi_event_u_t"],[19,"__wasi_subscription_u_t"],[3,"__wasi_iovec_t"],[3,"__wasi_ciovec_t"],[3,"__wasi_prestat_dir_t"],[3,"__wasi_prestat_t"],[19,"__wasi_prestat_u_t"],[3,"__wasi_dirent_t"],[3,"__wasi_fdstat_t"],[3,"__wasi_filestat_t"],[3,"__wasi_event_fd_readwrite_t"],[3,"__wasi_event_t"],[3,"__wasi_subscription_clock_t"],[3,"__wasi_subscription_fd_readwrite_t"],[3,"__wasi_subscription_t"],[19,"__wasi_event_u_t"],[19,"__wasi_subscription_u_t"],[3,"__wasi_iovec_t"],[3,"__wasi_ciovec_t"],[3,"__wasi_prestat_dir_t"],[3,"__wasi_prestat_t"],[19,"__wasi_prestat_u_t"]]};
searchIndex["wasi_common_cbindgen"] = {"doc":"","i":[[23,"wasi_common_cbindgen","wasi_common_cbindgen","",null,null],[23,"wasi_common_cbindgen_old","","",null,null]],"p":[]};
searchIndex["wasmtime"] = {"doc":"Wasmtime's embedding API","i":[[3,"Func","wasmtime","",null,null],[3,"Global","","",null,null],[3,"Table","","",null,null],[3,"Memory","","",null,null],[3,"Instance","","",null,null],[3,"Module","","",null,null],[3,"HostRef","","Represents a piece of data located in the host environment.",null,null],[3,"Config","","Global configuration options used to create an [`Engine`]…",null,null],[3,"Engine","","An `Engine` which is a global context for compilation and…",null,null],[3,"Store","","A `Store` is a shared cache of information between…",null,null],[3,"FrameInfo","","",null,null],[3,"Trap","","A struct representing an aborted instruction execution,…",null,null],[3,"TrapInfo","","",null,null],[3,"Limits","","Limits of tables/memories where the units of the limits…",null,null],[3,"FuncType","","A descriptor for a function in a WebAssembly module.",null,null],[3,"GlobalType","","A WebAssembly global descriptor.",null,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[4,"Extern","","",null,null],[13,"Func","","",0,null],[13,"Global","","",0,null],[13,"Table","","",0,null],[13,"Memory","","",0,null],[4,"AnyRef","","Represents an opaque reference to any data within…",null,null],[13,"Null","","A reference to no data.",1,null],[13,"Ref","","A reference to data stored internally in `wasmtime`.",1,null],[13,"Other","","A reference to data located outside of `wasmtime`.",1,null],[4,"OptLevel","","Possible optimization levels for the Cranelift codegen…",null,null],[13,"None","","No optimizations performed, minimizes compilation time by…",2,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",2,null],[13,"SpeedAndSize","","Similar to `speed`, but also performs transformations…",2,null],[4,"Strategy","","Possible Compilation strategies for a wasm module.",null,null],[13,"Auto","","An indicator that the compilation strategy should be…",3,null],[13,"Cranelift","","Currently the default backend, Cranelift aims to be a…",3,null],[13,"Lightbeam","","A single-pass code generator that is faster than Cranelift…",3,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",4,null],[13,"Var","","The value of the global can change over time",4,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",5,null],[13,"I64","","Signed 64 bit integer.",5,null],[13,"F32","","Floating point 32 bit integer.",5,null],[13,"F64","","Floating point 64 bit integer.",5,null],[13,"V128","","A 128 bit number.",5,null],[13,"AnyRef","","A reference to opaque data in the Wasm instance.",5,null],[13,"FuncRef","","A reference to a Wasm function.",5,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Func","","",6,null],[13,"Global","","",6,null],[13,"Table","","",6,null],[13,"Memory","","",6,null],[4,"Val","","Possible runtime values that a WebAssembly module can…",null,null],[13,"I32","","A 32-bit integer",7,null],[13,"I64","","A 64-bit integer",7,null],[13,"F32","","A 32-bit float.",7,null],[13,"F64","","A 64-bit float.",7,null],[13,"AnyRef","","An `anyref` value which can hold opaque data to the wasm…",7,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",7,null],[13,"V128","","A 128-bit number",7,null],[11,"func","","",0,[[["self"]],[["hostref"],["option",["hostref"]]]]],[11,"global","","",0,[[["self"]],[["option",["hostref"]],["hostref"]]]],[11,"table","","",0,[[["self"]],[["hostref"],["option",["hostref"]]]]],[11,"memory","","",0,[[["self"]],[["option",["hostref"]],["hostref"]]]],[11,"type","","",0,[[["self"]],["externtype"]]],[11,"new","","",8,[[["functype"],["callable"],["store"],["rc",["callable"]]],["self"]]],[11,"type","","",8,[[["self"]],["functype"]]],[11,"param_arity","","",8,[[["self"]],["usize"]]],[11,"result_arity","","",8,[[["self"]],["usize"]]],[11,"call","","",8,[[["self"]],[["box"],["result",["box","trap"]],["trap"]]]],[11,"new","","",9,[[["store"],["globaltype"],["val"]],["global"]]],[11,"type","","",9,[[["self"]],["globaltype"]]],[11,"get","","",9,[[["self"]],["val"]]],[11,"set","","",9,[[["self"],["val"]]]],[11,"new","","",10,[[["store"],["val"],["tabletype"]],["table"]]],[11,"type","","",10,[[["self"]],["tabletype"]]],[11,"get","","",10,[[["u32"],["self"]],["val"]]],[11,"set","","",10,[[["u32"],["self"],["val"]],["bool"]]],[11,"size","","",10,[[["self"]],["u32"]]],[11,"grow","","",10,[[["self"],["u32"],["val"]],["bool"]]],[11,"new","","",11,[[["store"],["memorytype"]],["memory"]]],[11,"type","","",11,[[["self"]],["memorytype"]]],[11,"data","","Returns a mutable slice the current memory. # Safety…",11,[[["self"]]]],[11,"data_ptr","","",11,[[["self"]]]],[11,"data_size","","",11,[[["self"]],["usize"]]],[11,"size","","",11,[[["self"]],["u32"]]],[11,"grow","","",11,[[["self"],["u32"]],["bool"]]],[11,"new","","",12,[[["store"],["hostref"]],[["result",["instance","error"]],["instance"],["error"]]]],[11,"exports","","",12,[[["self"]]]],[11,"module","","",12,[[["self"]],["hostref"]]],[11,"find_export_by_name","","",12,[[["str"],["self"]],[["option",["extern"]],["extern"]]]],[11,"from_handle","","",12,[[["store"],["instancehandle"]],["instance"]]],[11,"handle","","",12,[[["self"]],["instancehandle"]]],[11,"get_wasmtime_memory","","",12,[[["self"]],[["option",["export"]],["export"]]]],[11,"new","","Validate and decode the raw wasm data in `binary` and…",13,[[["store"]],[["module"],["result",["module"]]]]],[11,"new_unchecked","","Similar to `new`, but does not perform any validation.…",13,[[["store"]],[["module"],["result",["module"]]]]],[11,"validate","","",13,[[["store"]],["result"]]],[11,"imports","","",13,[[["self"]]]],[11,"exports","","",13,[[["self"]]]],[11,"from_exports","","",13,[[["store"],["box"]],["self"]]],[11,"new","","Creates a new instance of `AnyRef` from `Box<dyn Any>`.",1,[[["any"],["box",["any"]]],["self"]]],[11,"null","","Creates a `Null` reference.",1,[[],["self"]]],[11,"data","","Returns the data stored in the reference if available. #…",1,[[["self"]],[["box",["any"]],["ref",["box"]]]]],[11,"ptr_eq","","Returns true if the two `AnyRef<T>`'s point to the same…",1,[[["anyref"],["self"]],["bool"]]],[11,"host_info","","Returns a mutable reference to the host information if…",1,[[["self"]],[["option",["refmut"]],["refmut",["box"]]]]],[11,"set_host_info","","Sets the host information for an `AnyRef`. # Panics Panics…",1,[[["box",["hostinfo"]],["self"],["option",["box"]]]]],[11,"new","","Creates a new `HostRef<T>` from `T`.",14,[[["t"]],["hostref"]]],[11,"borrow","","Immutably borrows the wrapped data. # Panics Panics if the…",14,[[["self"]],["ref"]]],[11,"borrow_mut","","Mutably borrows the wrapped data. # Panics Panics if the…",14,[[["self"]],["refmut"]]],[11,"ptr_eq","","Returns true if the two `HostRef<T>`'s point to the same…",14,[[["self"],["hostref"]],["bool"]]],[11,"anyref","","Returns an opaque reference to the wrapped data in the…",14,[[["self"]],["anyref"]]],[11,"new","","Creates a new configuration object with the default…",15,[[],["config"]]],[11,"debug_info","","Configures whether DWARF debug information will be emitted…",15,[[["self"],["bool"]],["self"]]],[11,"wasm_threads","","Configures whether the WebAssembly threads proposal will…",15,[[["self"],["bool"]],["self"]]],[11,"wasm_reference_types","","Configures whether the WebAssembly reference types…",15,[[["self"],["bool"]],["self"]]],[11,"wasm_simd","","Configures whether the WebAssembly SIMD proposal will be…",15,[[["self"],["bool"]],["self"]]],[11,"wasm_bulk_memory","","Configures whether the WebAssembly bulk memory operations…",15,[[["self"],["bool"]],["self"]]],[11,"wasm_multi_value","","Configures whether the WebAssembly multi-value proposal…",15,[[["self"],["bool"]],["self"]]],[11,"strategy","","Configures which compilation strategy will be used for…",15,[[["strategy"],["self"]],[["self"],["result"]]]],[11,"cranelift_debug_verifier","","Configures whether the debug verifier of Cranelift is…",15,[[["self"],["bool"]],["self"]]],[11,"cranelift_opt_level","","Configures the Cranelift code generator optimization level.",15,[[["self"],["optlevel"]],["self"]]],[11,"new","","Creates a new [`Engine`] with the specified compilation…",16,[[["config"]],["engine"]]],[11,"new","","Creates a new store to be associated with the given…",17,[[["engine"]],["store"]]],[11,"engine","","Returns the [`Engine`] that this store is associated with.",17,[[["self"]],["engine"]]],[11,"instance","","",18,[[["self"]]]],[11,"func_index","","",18,[[],["usize"]]],[11,"func_offset","","",18,[[],["usize"]]],[11,"module_offset","","",18,[[],["usize"]]],[11,"new","","",19,[[["string"],["into",["string"]]],["self"]]],[11,"message","","Returns a reference the `message` stored in `Trap`.",19,[[["self"]],["str"]]],[11,"origin","","",19,[[["self"]],[["frameinfo"],["option",["frameinfo"]]]]],[11,"trace","","",19,[[["self"]]]],[11,"new","","Creates a new `Trap` with `message`. # Example `let trap =…",20,[[["string"],["into",["string"]]],["self"]]],[11,"message","","Returns a reference the `message` stored in `Trap`.",20,[[["self"]],["str"]]],[11,"new","","Creates a new set of limits with the minimum and maximum…",21,[[["u32"],["option",["u32"]]],["limits"]]],[11,"at_least","","Creates a new `Limits` with the `min` specified and no…",21,[[["u32"]],["limits"]]],[11,"min","","Returns the minimum amount for these limits.",21,[[["self"]],["u32"]]],[11,"max","","Returns the maximum amount for these limits, if specified.",21,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"is_num","","Returns true if `ValType` matches any of the numeric…",5,[[["self"]],["bool"]]],[11,"is_ref","","Returns true if `ValType` matches either of the reference…",5,[[["self"]],["bool"]]],[11,"func","","Attempt to return the underlying type of this external…",6,[[["self"]],[["option",["functype"]],["functype"]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [`ExternType`],…",6,[[["self"]],["functype"]]],[11,"global","","Attempt to return the underlying type of this external…",6,[[["self"]],[["option",["globaltype"]],["globaltype"]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [`ExternType`],…",6,[[["self"]],["globaltype"]]],[11,"table","","Attempt to return the underlying type of this external…",6,[[["self"]],[["option",["tabletype"]],["tabletype"]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [`ExternType`],…",6,[[["self"]],["tabletype"]]],[11,"memory","","Attempt to return the underlying type of this external…",6,[[["self"]],[["option",["memorytype"]],["memorytype"]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [`ExternType`],…",6,[[["self"]],["memorytype"]]],[11,"new","","Creates a new function descriptor from the given…",22,[[["box"]],["functype"]]],[11,"params","","Returns the list of parameter types for this function.",22,[[["self"]]]],[11,"results","","Returns the list of result types for this function.",22,[[["self"]]]],[11,"new","","Creates a new global descriptor of the specified `content`…",23,[[["mutability"],["valtype"]],["globaltype"]]],[11,"content","","Returns the value type of this global descriptor.",23,[[["self"]],["valtype"]]],[11,"mutability","","Returns whether or not this global is mutable.",23,[[["self"]],["mutability"]]],[11,"new","","Creates a new table descriptor which will contain the…",24,[[["limits"],["valtype"]],["tabletype"]]],[11,"element","","Returns the element value type of this table.",24,[[["self"]],["valtype"]]],[11,"limits","","Returns the limits, in units of elements, of this table.",24,[[["self"]],["limits"]]],[11,"new","","Creates a new descriptor for a WebAssembly memory given…",25,[[["limits"]],["memorytype"]]],[11,"limits","","Returns the limits (in pages) that are configured for this…",25,[[["self"]],["limits"]]],[11,"new","","Creates a new import descriptor which comes from `module`…",26,[[["str"],["externtype"]],["importtype"]]],[11,"module","","Returns the module name that this import is expected to…",26,[[["self"]],["str"]]],[11,"name","","Returns the field name of the module that this import is…",26,[[["self"]],["str"]]],[11,"ty","","Returns the expected type of this import.",26,[[["self"]],["externtype"]]],[11,"new","","Creates a new export which is exported with the given…",27,[[["str"],["externtype"]],["exporttype"]]],[11,"name","","Returns the name by which this export is known by.",27,[[["self"]],["str"]]],[11,"ty","","Returns the type of this export.",27,[[["self"]],["externtype"]]],[11,"null","","Returns a null `anyref` value.",7,[[],["val"]]],[11,"type","","Returns the corresponding [`ValType`] for this `Val`.",7,[[["self"]],["valtype"]]],[11,"i32","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"unwrap_i32","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["i32"]]],[11,"i64","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"unwrap_i64","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["i64"]]],[11,"f32","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"unwrap_f32","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["f32"]]],[11,"f64","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"unwrap_f64","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["f64"]]],[11,"funcref","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["hostref"],["option",["hostref"]]]]],[11,"unwrap_funcref","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["hostref"]]],[11,"v128","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"unwrap_v128","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["u128"]]],[11,"anyref","","Attempt to access the underlying value of this `Val`,…",7,[[["self"]],[["anyref"],["option",["anyref"]]]]],[11,"unwrap_anyref","","Returns the underlying value of this `Val`, panicking if…",7,[[["self"]],["anyref"]]],[0,"wasm","","This file defines the extern \"C\" API, which is compatible…",null,null],[3,"wasm_byte_vec_t","wasmtime::wasm","",null,null],[12,"size","","",28,null],[12,"data","","",28,null],[3,"wasm_config_t","","",null,null],[3,"wasm_engine_t","","",null,null],[3,"wasm_store_t","","",null,null],[3,"wasm_limits_t","","",null,null],[12,"min","","",29,null],[12,"max","","",29,null],[3,"wasm_valtype_t","","",null,null],[3,"wasm_valtype_vec_t","","",null,null],[12,"size","","",30,null],[12,"data","","",30,null],[3,"wasm_functype_t","","",null,null],[3,"wasm_functype_vec_t","","",null,null],[12,"size","","",31,null],[12,"data","","",31,null],[3,"wasm_globaltype_t","","",null,null],[3,"wasm_globaltype_vec_t","","",null,null],[12,"size","","",32,null],[12,"data","","",32,null],[3,"wasm_tabletype_t","","",null,null],[3,"wasm_tabletype_vec_t","","",null,null],[12,"size","","",33,null],[12,"data","","",33,null],[3,"wasm_memorytype_t","","",null,null],[3,"wasm_memorytype_vec_t","","",null,null],[12,"size","","",34,null],[12,"data","","",34,null],[3,"wasm_externtype_t","","",null,null],[3,"wasm_externtype_vec_t","","",null,null],[12,"size","","",35,null],[12,"data","","",35,null],[3,"wasm_importtype_t","","",null,null],[3,"wasm_importtype_vec_t","","",null,null],[12,"size","","",36,null],[12,"data","","",36,null],[3,"wasm_exporttype_t","","",null,null],[3,"wasm_exporttype_vec_t","","",null,null],[12,"size","","",37,null],[12,"data","","",37,null],[3,"wasm_ref_t","","",null,null],[3,"wasm_val_t","","",null,null],[12,"kind","","",38,null],[12,"of","","",38,null],[3,"wasm_val_vec_t","","",null,null],[12,"size","","",39,null],[12,"data","","",39,null],[3,"wasm_frame_t","","",null,null],[3,"wasm_frame_vec_t","","",null,null],[12,"size","","",40,null],[12,"data","","",40,null],[3,"wasm_instance_t","","",null,null],[3,"wasm_trap_t","","",null,null],[3,"wasm_foreign_t","","",null,null],[3,"wasm_module_t","","",null,null],[3,"wasm_shared_module_t","","",null,null],[3,"wasm_func_t","","",null,null],[3,"wasm_global_t","","",null,null],[3,"wasm_table_t","","",null,null],[3,"wasm_memory_t","","",null,null],[3,"wasm_extern_t","","",null,null],[3,"wasm_extern_vec_t","","",null,null],[12,"size","","",41,null],[12,"data","","",41,null],[19,"wasm_val_t__bindgen_ty_1","","",null,null],[12,"i32","","",42,null],[12,"i64","","",42,null],[12,"u32","","",42,null],[12,"u64","","",42,null],[12,"f32","","",42,null],[12,"f64","","",42,null],[12,"ref_","","",42,null],[5,"wasm_byte_vec_delete","","",null,[[]]],[5,"wasm_byte_vec_new_uninitialized","","",null,[[["usize"]]]],[5,"wasm_engine_delete","","",null,[[]]],[5,"wasm_engine_new","","",null,[[]]],[5,"wasm_extern_as_func","","",null,[[]]],[5,"wasm_extern_vec_delete","","",null,[[]]],[5,"wasm_func_as_extern","","",null,[[]]],[5,"wasm_func_call","","",null,[[]]],[5,"wasm_func_new","","",null,[[["wasm_func_callback_t"]]]],[5,"wasm_func_delete","","",null,[[]]],[5,"wasm_functype_new","","",null,[[]]],[5,"wasm_functype_delete","","",null,[[]]],[5,"wasm_instance_delete","","",null,[[]]],[5,"wasm_instance_new","","",null,[[]]],[5,"wasm_instance_exports","","",null,[[]]],[5,"wasm_module_delete","","",null,[[]]],[5,"wasm_module_new","","Note that this function does not perform validation on the…",null,[[]]],[5,"wasm_module_validate","","",null,[[],["bool"]]],[5,"wasm_store_delete","","",null,[[]]],[5,"wasm_store_new","","",null,[[]]],[5,"wasm_valtype_vec_new_empty","","",null,[[]]],[5,"wasm_valtype_vec_new","","",null,[[["usize"]]]],[5,"wasm_valtype_vec_new_uninitialized","","",null,[[["usize"]]]],[5,"wasm_func_new_with_env","","",null,[[["wasm_func_callback_with_env_t"],["option"]]]],[5,"wasm_val_copy","","",null,[[]]],[5,"wasm_valtype_new","","",null,[[["wasm_valkind_t"]]]],[5,"wasm_valtype_delete","","",null,[[]]],[5,"wasm_byte_vec_new","","",null,[[["usize"]]]],[5,"wasm_frame_delete","","",null,[[]]],[5,"wasm_frame_func_index","","",null,[[],["u32"]]],[5,"wasm_frame_func_offset","","",null,[[],["usize"]]],[5,"wasm_frame_instance","","",null,[[]]],[5,"wasm_frame_module_offset","","",null,[[],["usize"]]],[5,"wasm_frame_vec_delete","","",null,[[]]],[5,"wasm_trap_delete","","",null,[[]]],[5,"wasm_trap_new","","",null,[[]]],[5,"wasm_trap_message","","",null,[[]]],[5,"wasm_trap_origin","","",null,[[]]],[5,"wasm_trap_trace","","",null,[[]]],[5,"wasm_importtype_module","","",null,[[]]],[5,"wasm_importtype_name","","",null,[[]]],[5,"wasm_importtype_type","","",null,[[]]],[5,"wasm_importtype_vec_delete","","",null,[[]]],[5,"wasm_exporttype_name","","",null,[[]]],[5,"wasm_exporttype_type","","",null,[[]]],[5,"wasm_exporttype_vec_delete","","",null,[[]]],[5,"wasm_extern_kind","","",null,[[],["wasm_externkind_t"]]],[5,"wasm_extern_type","","",null,[[]]],[5,"wasm_externtype_as_functype_const","","",null,[[]]],[5,"wasm_externtype_as_globaltype_const","","",null,[[]]],[5,"wasm_externtype_as_tabletype_const","","",null,[[]]],[5,"wasm_externtype_as_memorytype_const","","",null,[[]]],[5,"wasm_externtype_delete","","",null,[[]]],[5,"wasm_externtype_kind","","",null,[[],["wasm_externkind_t"]]],[5,"wasm_func_param_arity","","",null,[[],["usize"]]],[5,"wasm_func_result_arity","","",null,[[],["usize"]]],[5,"wasm_functype_params","","",null,[[]]],[5,"wasm_functype_results","","",null,[[]]],[5,"wasm_globaltype_content","","",null,[[]]],[5,"wasm_globaltype_mutability","","",null,[[],["wasm_mutability_t"]]],[5,"wasm_memorytype_limits","","",null,[[]]],[5,"wasm_module_exports","","",null,[[]]],[5,"wasm_module_imports","","",null,[[]]],[5,"wasm_tabletype_element","","",null,[[]]],[5,"wasm_tabletype_limits","","",null,[[]]],[5,"wasm_valtype_kind","","",null,[[],["wasm_valkind_t"]]],[5,"wasm_extern_as_global","","",null,[[]]],[5,"wasm_global_as_extern","","",null,[[]]],[5,"wasm_global_delete","","",null,[[]]],[5,"wasm_global_copy","","",null,[[]]],[5,"wasm_global_same","","",null,[[],["bool"]]],[5,"wasm_global_new","","",null,[[]]],[5,"wasm_global_get","","",null,[[]]],[5,"wasm_global_set","","",null,[[]]],[5,"wasm_globaltype_delete","","",null,[[]]],[5,"wasm_globaltype_new","","",null,[[["wasm_mutability_t"]]]],[5,"wasm_extern_as_memory","","",null,[[]]],[5,"wasm_memory_as_extern","","",null,[[]]],[5,"wasm_memory_delete","","",null,[[]]],[5,"wasm_memory_copy","","",null,[[]]],[5,"wasm_memory_same","","",null,[[],["bool"]]],[5,"wasm_memory_data","","",null,[[]]],[5,"wasm_memory_data_size","","",null,[[],["usize"]]],[5,"wasm_memory_size","","",null,[[],["wasm_memory_pages_t"]]],[5,"wasm_memory_grow","","",null,[[["wasm_memory_pages_t"]],["bool"]]],[5,"wasm_memory_new","","",null,[[]]],[5,"wasm_memorytype_delete","","",null,[[]]],[5,"wasm_memorytype_new","","",null,[[]]],[5,"wasm_extern_as_table","","",null,[[]]],[5,"wasm_table_as_extern","","",null,[[]]],[5,"wasm_func_as_ref","","",null,[[]]],[5,"wasm_ref_delete","","",null,[[]]],[5,"wasm_table_delete","","",null,[[]]],[5,"wasm_table_copy","","",null,[[]]],[5,"wasm_table_new","","",null,[[]]],[5,"wasm_table_get","","",null,[[["wasm_table_size_t"]]]],[5,"wasm_table_set","","",null,[[["wasm_table_size_t"]],["bool"]]],[5,"wasm_table_size","","",null,[[],["wasm_table_size_t"]]],[5,"wasm_table_grow","","",null,[[["wasm_table_size_t"]],["bool"]]],[5,"wasm_table_same","","",null,[[],["bool"]]],[5,"wasm_tabletype_delete","","",null,[[]]],[5,"wasm_tabletype_new","","",null,[[]]],[5,"wasm_instance_set_host_info_with_finalizer","","",null,[[["option"]]]],[5,"wasm_valtype_vec_copy","","",null,[[]]],[6,"float32_t","","",null,null],[6,"float64_t","","",null,null],[6,"wasm_byte_t","","",null,null],[6,"wasm_name_t","","",null,null],[6,"wasm_mutability_t","","",null,null],[6,"wasm_valkind_t","","",null,null],[6,"wasm_externkind_t","","",null,null],[6,"wasm_message_t","","",null,null],[6,"wasm_func_callback_t","","",null,null],[6,"wasm_func_callback_with_env_t","","",null,null],[6,"wasm_table_size_t","","",null,null],[6,"wasm_memory_pages_t","","",null,null],[8,"Callable","wasmtime","A trait representing a function that can be imported and…",null,null],[10,"call","","What is called when the function is invoked in…",43,[[["self"]],[["trap"],["result",["trap"]]]]],[8,"HostInfo","","",null,null],[11,"finalize","","",44,[[["self"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","wasmtime::wasm","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"call","wasmtime","",68,[[["self"]],[["trap"],["result",["trap"]]]]],[11,"drop","wasmtime::wasm","",28,[[["self"]]]],[11,"drop","","",30,[[["self"]]]],[11,"drop","","",31,[[["self"]]]],[11,"drop","","",32,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","","",34,[[["self"]]]],[11,"drop","","",35,[[["self"]]]],[11,"drop","","",36,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","","",39,[[["self"]]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",41,[[["self"]]]],[11,"from","wasmtime","",0,[[["hostref",["func"]],["func"]],["self"]]],[11,"from","","",0,[[["hostref",["global"]],["global"]],["self"]]],[11,"from","","",0,[[["memory"],["hostref",["memory"]]],["self"]]],[11,"from","","",0,[[["hostref",["table"]],["table"]],["self"]]],[11,"from","","",20,[[["trapinfo"],["hostref",["trapinfo"]]],["self"]]],[11,"from","","",7,[[["i32"]],["val"]]],[11,"from","","",7,[[["i64"]],["val"]]],[11,"from","","",7,[[["f32"]],["val"]]],[11,"from","","",7,[[["f64"]],["val"]]],[11,"from","","",7,[[["anyref"]],["val"]]],[11,"from","","",7,[[["hostref",["func"]],["func"]],["val"]]],[11,"from","","",7,[[["runtimevalue"]],["self"]]],[11,"from","wasmtime::wasm","",28,[[["wasm_byte_t"],["vec",["wasm_byte_t"]]],["self"]]],[11,"from","","",30,[[["vec"]],["self"]]],[11,"from","","",31,[[["vec"]],["self"]]],[11,"from","","",32,[[["vec"]],["self"]]],[11,"from","","",33,[[["vec"]],["self"]]],[11,"from","","",34,[[["vec"]],["self"]]],[11,"from","","",35,[[["vec"]],["self"]]],[11,"from","","",36,[[["vec"]],["self"]]],[11,"from","","",37,[[["vec"]],["self"]]],[11,"from","","",39,[[["vec",["wasm_val_t"]],["wasm_val_t"]],["self"]]],[11,"from","","",40,[[["vec"]],["self"]]],[11,"from","","",41,[[["vec"]],["self"]]],[11,"into","","",59,[[],[["trapinfo"],["hostref",["trapinfo"]]]]],[11,"clone","wasmtime","",0,[[["self"]],["extern"]]],[11,"clone","","",12,[[["self"]],["instance"]]],[11,"clone","","",13,[[["self"]],["module"]]],[11,"clone","","",1,[[["self"]],["anyref"]]],[11,"clone","","",14,[[["self"]],["hostref"]]],[11,"clone","","",15,[[["self"]],["config"]]],[11,"clone","","",3,[[["self"]],["strategy"]]],[11,"clone","","",2,[[["self"]],["optlevel"]]],[11,"clone","","",16,[[["self"]],["engine"]]],[11,"clone","","",17,[[["self"]],["store"]]],[11,"clone","","",20,[[["self"]],["trap"]]],[11,"clone","","",4,[[["self"]],["mutability"]]],[11,"clone","","",21,[[["self"]],["limits"]]],[11,"clone","","",5,[[["self"]],["valtype"]]],[11,"clone","","",6,[[["self"]],["externtype"]]],[11,"clone","","",22,[[["self"]],["functype"]]],[11,"clone","","",23,[[["self"]],["globaltype"]]],[11,"clone","","",24,[[["self"]],["tabletype"]]],[11,"clone","","",25,[[["self"]],["memorytype"]]],[11,"clone","","",26,[[["self"]],["importtype"]]],[11,"clone","","",27,[[["self"]],["exporttype"]]],[11,"clone","","",7,[[["self"]],["val"]]],[11,"clone","wasmtime::wasm","",28,[[["self"]],["wasm_byte_vec_t"]]],[11,"clone","","",45,[[["self"]],["wasm_config_t"]]],[11,"clone","","",46,[[["self"]],["wasm_engine_t"]]],[11,"clone","","",47,[[["self"]],["wasm_store_t"]]],[11,"clone","","",29,[[["self"]],["wasm_limits_t"]]],[11,"clone","","",48,[[["self"]],["wasm_valtype_t"]]],[11,"clone","","",30,[[["self"]],["wasm_valtype_vec_t"]]],[11,"clone","","",49,[[["self"]],["wasm_functype_t"]]],[11,"clone","","",31,[[["self"]],["wasm_functype_vec_t"]]],[11,"clone","","",50,[[["self"]],["wasm_globaltype_t"]]],[11,"clone","","",32,[[["self"]],["wasm_globaltype_vec_t"]]],[11,"clone","","",51,[[["self"]],["wasm_tabletype_t"]]],[11,"clone","","",33,[[["self"]],["wasm_tabletype_vec_t"]]],[11,"clone","","",52,[[["self"]],["wasm_memorytype_t"]]],[11,"clone","","",34,[[["self"]],["wasm_memorytype_vec_t"]]],[11,"clone","","",53,[[["self"]],["wasm_externtype_t"]]],[11,"clone","","",35,[[["self"]],["wasm_externtype_vec_t"]]],[11,"clone","","",54,[[["self"]],["wasm_importtype_t"]]],[11,"clone","","",36,[[["self"]],["wasm_importtype_vec_t"]]],[11,"clone","","",55,[[["self"]],["wasm_exporttype_t"]]],[11,"clone","","",37,[[["self"]],["wasm_exporttype_vec_t"]]],[11,"clone","","",56,[[["self"]],["wasm_ref_t"]]],[11,"clone","","",38,[[["self"]],["wasm_val_t"]]],[11,"clone","","",42,[[["self"]],["wasm_val_t__bindgen_ty_1"]]],[11,"clone","","",39,[[["self"]],["wasm_val_vec_t"]]],[11,"clone","","",57,[[["self"]],["wasm_frame_t"]]],[11,"clone","","",40,[[["self"]],["wasm_frame_vec_t"]]],[11,"clone","","",58,[[["self"]],["wasm_instance_t"]]],[11,"clone","","",59,[[["self"]],["wasm_trap_t"]]],[11,"clone","","",60,[[["self"]],["wasm_foreign_t"]]],[11,"clone","","",61,[[["self"]],["wasm_module_t"]]],[11,"clone","","",62,[[["self"]],["wasm_shared_module_t"]]],[11,"clone","","",63,[[["self"]],["wasm_func_t"]]],[11,"clone","","",64,[[["self"]],["wasm_global_t"]]],[11,"clone","","",65,[[["self"]],["wasm_table_t"]]],[11,"clone","","",66,[[["self"]],["wasm_memory_t"]]],[11,"clone","","",67,[[["self"]],["wasm_extern_t"]]],[11,"clone","","",41,[[["self"]],["wasm_extern_vec_t"]]],[11,"default","wasmtime","",15,[[],["config"]]],[11,"default","","",16,[[],["engine"]]],[11,"default","","",17,[[],["store"]]],[11,"default","wasmtime::wasm","",38,[[],["self"]]],[11,"eq","wasmtime","",5,[[["valtype"],["self"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"finalize","","",44,[[["self"]]]]],"p":[[4,"Extern"],[4,"AnyRef"],[4,"OptLevel"],[4,"Strategy"],[4,"Mutability"],[4,"ValType"],[4,"ExternType"],[4,"Val"],[3,"Func"],[3,"Global"],[3,"Table"],[3,"Memory"],[3,"Instance"],[3,"Module"],[3,"HostRef"],[3,"Config"],[3,"Engine"],[3,"Store"],[3,"FrameInfo"],[3,"TrapInfo"],[3,"Trap"],[3,"Limits"],[3,"FuncType"],[3,"GlobalType"],[3,"TableType"],[3,"MemoryType"],[3,"ImportType"],[3,"ExportType"],[3,"wasm_byte_vec_t"],[3,"wasm_limits_t"],[3,"wasm_valtype_vec_t"],[3,"wasm_functype_vec_t"],[3,"wasm_globaltype_vec_t"],[3,"wasm_tabletype_vec_t"],[3,"wasm_memorytype_vec_t"],[3,"wasm_externtype_vec_t"],[3,"wasm_importtype_vec_t"],[3,"wasm_exporttype_vec_t"],[3,"wasm_val_t"],[3,"wasm_val_vec_t"],[3,"wasm_frame_vec_t"],[3,"wasm_extern_vec_t"],[19,"wasm_val_t__bindgen_ty_1"],[8,"Callable"],[8,"HostInfo"],[3,"wasm_config_t"],[3,"wasm_engine_t"],[3,"wasm_store_t"],[3,"wasm_valtype_t"],[3,"wasm_functype_t"],[3,"wasm_globaltype_t"],[3,"wasm_tabletype_t"],[3,"wasm_memorytype_t"],[3,"wasm_externtype_t"],[3,"wasm_importtype_t"],[3,"wasm_exporttype_t"],[3,"wasm_ref_t"],[3,"wasm_frame_t"],[3,"wasm_instance_t"],[3,"wasm_trap_t"],[3,"wasm_foreign_t"],[3,"wasm_module_t"],[3,"wasm_shared_module_t"],[3,"wasm_func_t"],[3,"wasm_global_t"],[3,"wasm_table_t"],[3,"wasm_memory_t"],[3,"wasm_extern_t"],[6,"wasm_func_callback_t"]]};
searchIndex["wasmtime_debug"] = {"doc":"Debug utils for WebAssembly using Cranelift.","i":[[3,"DebugInfoData","wasmtime_debug","",null,null],[12,"dwarf","","",0,null],[12,"name_section","","",0,null],[12,"wasm_file","","",0,null],[3,"WasmFileInfo","","",null,null],[12,"path","","",1,null],[12,"code_section_offset","","",1,null],[12,"funcs","","",1,null],[4,"ResolvedSymbol","","",null,null],[13,"PhysicalAddress","","",2,null],[13,"Reloc","","",2,null],[12,"name","wasmtime_debug::ResolvedSymbol","",2,null],[12,"addend","","",2,null],[5,"read_debuginfo","wasmtime_debug","",null,[[],["debuginfodata"]]],[5,"transform_dwarf","","",null,[[["valuelabelsranges"],["moduleaddressmap"],["modulevmctxinfo"],["debuginfodata"],["targetfrontendconfig"]],[["result",["dwarf","error"]],["dwarf"],["error"]]]],[5,"emit_dwarf","","",null,[[["artifact"],["dwarf"],["symbolresolver"]],["result"]]],[5,"emit_debugsections","","",null,[[["valuelabelsranges"],["artifact"],["moduleaddressmap"],["modulevmctxinfo"],["debuginfodata"],["targetfrontendconfig"]],[["result",["error"]],["error"]]]],[5,"emit_debugsections_image","","",null,[[["triple"],["moduleaddressmap"],["valuelabelsranges"],["modulevmctxinfo"],["debuginfodata"],["targetfrontendconfig"]],[["error"],["vec",["u8"]],["result",["vec","error"]]]]],[8,"SymbolResolver","","",null,null],[10,"resolve_symbol","","",3,[[["i64"],["self"],["usize"]],["resolvedsymbol"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"DebugInfoData"],[3,"WasmFileInfo"],[4,"ResolvedSymbol"],[8,"SymbolResolver"]]};
searchIndex["wasmtime_environ"] = {"doc":"Standalone environment for WebAssembly using Cranelift.…","i":[[3,"FunctionAddressMap","wasmtime_environ","Function and its instructions addresses mappings.",null,null],[12,"instructions","","Instructions maps. The array is sorted by the…",0,null],[12,"start_srcloc","","Function start source location (normally declaration).",0,null],[12,"end_srcloc","","Function end source location.",0,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",0,null],[12,"body_len","","Generated function body length.",0,null],[3,"InstructionAddressMap","","Single source location to generated address mapping.",null,null],[12,"srcloc","","Original source location.",1,null],[12,"code_offset","","Generated instructions offset.",1,null],[12,"code_len","","Generated instructions length.",1,null],[3,"ModuleVmctxInfo","","Module `vmctx` related info.",null,null],[12,"memory_offset","","The memory definition offset in the VMContext structure.",2,null],[12,"stack_slots","","The functions stack slots.",2,null],[3,"Compilation","","The result of compiling a WebAssembly module's functions.",null,null],[3,"CompiledFunction","","Compiled function: machine code body, jump table offsets,…",null,null],[12,"body","","The function body.",3,null],[12,"jt_offsets","","The jump tables offsets (in the body).",3,null],[12,"unwind_info","","The unwind information.",3,null],[3,"Relocation","","A record of a relocation to perform.",null,null],[12,"reloc","","The relocation code.",4,null],[12,"reloc_target","","Relocation target.",4,null],[12,"offset","","The offset where to apply the relocation.",4,null],[12,"addend","","The addend to add to the relocation value.",4,null],[3,"TrapInformation","","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It…",5,null],[12,"source_loc","","Location of trapping instruction in WebAssembly binary…",5,null],[12,"trap_code","","Code of the trap.",5,null],[3,"BuiltinFunctionIndex","","An index type for builtin functions.",null,null],[3,"MemoryPlan","","A WebAssembly linear memory description along with our…",null,null],[12,"memory","","The WebAssembly linear memory description.",6,null],[12,"style","","Our chosen implementation style.",6,null],[12,"offset_guard_size","","Our chosen offset-guard size.",6,null],[3,"Module","","A translated WebAssembly module, excluding the function…",null,null],[12,"signatures","","Unprocessed signatures exactly as provided by…",7,null],[12,"imported_funcs","","Names of imported functions.",7,null],[12,"imported_tables","","Names of imported tables.",7,null],[12,"imported_memories","","Names of imported memories.",7,null],[12,"imported_globals","","Names of imported globals.",7,null],[12,"functions","","Types of functions, imported and local.",7,null],[12,"table_plans","","WebAssembly tables.",7,null],[12,"memory_plans","","WebAssembly linear memory plans.",7,null],[12,"globals","","WebAssembly global variables.",7,null],[12,"exports","","Exported entities.",7,null],[12,"start_func","","The module \"start\" function, if present.",7,null],[12,"table_elements","","WebAssembly table initializers.",7,null],[3,"TableElements","","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",8,null],[12,"base","","Optionally, a global variable giving a base index.",8,null],[12,"offset","","The offset to add to the base.",8,null],[12,"elements","","The values to write into the table elements.",8,null],[3,"TablePlan","","A WebAssembly table description along with our chosen…",null,null],[12,"table","","The WebAssembly table description.",9,null],[12,"style","","Our chosen implementation style.",9,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",10,null],[12,"data","","The initialization data.",10,null],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data…",null,null],[12,"memory_index","","The index of the memory to initialize.",11,null],[12,"base","","Optionally a globalvar base to initialize at.",11,null],[12,"offset","","A constant offset to initialize at.",11,null],[3,"FunctionBodyData","","Contains function data: byte code and its offset in the…",null,null],[12,"data","","Body byte code.",12,null],[12,"module_offset","","Body offset in the module file.",12,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[3,"ModuleTranslation","","The result of translating via `ModuleEnvironment`.…",null,null],[12,"target_config","","Compilation setting flags.",13,null],[12,"module","","Module information.",13,null],[12,"function_body_inputs","","References to the function bodies.",13,null],[12,"data_initializers","","References to the data initializers.",13,null],[12,"tunables","","Tunable parameters.",13,null],[12,"module_translation","","The decoded Wasm types for the module.",13,null],[3,"Tunables","","Tunable parameters for WebAssembly compilation.",null,null],[12,"static_memory_bound","","For static heaps, the size of the heap protected by bounds…",14,null],[12,"static_memory_offset_guard_size","","The size of the offset guard for static heaps.",14,null],[12,"dynamic_memory_offset_guard_size","","The size of the offset guard for dynamic heaps.",14,null],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[3,"VMOffsets","","This class computes offsets to fields within `VMContext`…",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",15,null],[12,"num_signature_ids","","The number of signature declarations in the module.",15,null],[12,"num_imported_functions","","The number of imported functions in the module.",15,null],[12,"num_imported_tables","","The number of imported tables in the module.",15,null],[12,"num_imported_memories","","The number of imported memories in the module.",15,null],[12,"num_imported_globals","","The number of imported globals in the module.",15,null],[12,"num_defined_tables","","The number of defined tables in the module.",15,null],[12,"num_defined_memories","","The number of defined memories in the module.",15,null],[12,"num_defined_globals","","The number of defined globals in the module.",15,null],[4,"CompileError","","An error while compiling WebAssembly to machine code.",null,null],[13,"Wasm","","A wasm translation error occured.",16,null],[13,"Codegen","","A compilation error occured.",16,null],[13,"DebugInfoNotSupported","","A compilation error occured.",16,null],[4,"RelocationTarget","","Destination function. Can be either user function or some…",null,null],[13,"UserFunc","","The user function index.",17,null],[13,"LibCall","","A compiler-generated libcall.",17,null],[13,"Memory32Grow","","Function for growing a locally-defined 32-bit memory by…",17,null],[13,"ImportedMemory32Grow","","Function for growing an imported 32-bit memory by the…",17,null],[13,"Memory32Size","","Function for query current size of a locally-defined…",17,null],[13,"ImportedMemory32Size","","Function for query current size of an imported 32-bit…",17,null],[13,"JumpTable","","Jump table index.",17,null],[4,"Export","","An entity to export.",null,null],[13,"Function","","Function export.",18,null],[13,"Table","","Table export.",18,null],[13,"Memory","","Memory export.",18,null],[13,"Global","","Global export.",18,null],[4,"MemoryStyle","","Implemenation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",19,null],[13,"Static","","Addresss space is allocated up front.",19,null],[12,"bound","wasmtime_environ::MemoryStyle","The number of mapped and unmapped pages.",19,null],[4,"TableStyle","wasmtime_environ","Implemenation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the…",20,null],[5,"cache_create_new_config","","Creates a new configuration file at specified path, or…",null,[[["debug"],["option"],["asref",["path"]],["path"]],[["pathbuf"],["result",["pathbuf"]]]]],[5,"cache_init","","Initializes the cache system. Should be called exactly…",null,[[["option",["str"]],["str"],["debug"],["option"],["asref",["path"]],["path"],["bool"]],["vec"]]],[5,"translate_signature","","Add environment-specific function parameters.",null,[[["signature"],["type"]],["signature"]]],[11,"new","","Creates a compilation artifact from a contiguous function…",21,[[["definedfuncindex"],["primarymap",["definedfuncindex","compiledfunction"]],["compiledfunction"]],["self"]]],[11,"from_buffer","","Allocates the compilation result with the given function…",21,[[["vec",["u8"]],["u8"]],["self"]]],[11,"get","","Gets the bytes of a single function",21,[[["definedfuncindex"],["self"]],["compiledfunction"]]],[11,"len","","Gets the number of functions defined.",21,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether there are no functions defined.",21,[[["self"]],["bool"]]],[11,"get_jt_offsets","","Gets functions jump table offsets.",21,[[["self"]],[["definedfuncindex"],["primarymap",["definedfuncindex","jumptableoffsets"]],["jumptableoffsets"]]]],[11,"get_memory32_grow_index","","Returns an index for wasm's `memory.grow` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_grow_index","","Returns an index for wasm's imported `memory.grow` builtin…",22,[[],["self"]]],[11,"get_memory32_size_index","","Returns an index for wasm's `memory.size` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_size_index","","Returns an index for wasm's imported `memory.size` builtin…",22,[[],["self"]]],[11,"builtin_functions_total_number","","Returns the total number of builtin functions.",22,[[],["u32"]]],[11,"index","","Return the index as an u32 number.",22,[[["self"]],["u32"]]],[11,"for_memory","","Decide on an implementation style for the given `Memory`.",19,[[["tunables"],["memory"]]]],[11,"for_memory","","Draw up a plan for implementing a `Memory`.",6,[[["tunables"],["memory"]],["self"]]],[11,"for_table","","Decide on an implementation style for the given `Table`.",20,[[["table"],["tunables"]],["self"]]],[11,"for_table","","Draw up a plan for implementing a `Table`.",9,[[["table"],["tunables"]],["self"]]],[11,"new","","Allocates the module data structures.",7,[[],["self"]]],[11,"func_index","","Convert a `DefinedFuncIndex` into a `FuncIndex`.",7,[[["definedfuncindex"],["self"]],["funcindex"]]],[11,"defined_func_index","","Convert a `FuncIndex` into a `DefinedFuncIndex`. Returns…",7,[[["funcindex"],["self"]],[["definedfuncindex"],["option",["definedfuncindex"]]]]],[11,"is_imported_function","","Test whether the given function index is for an imported…",7,[[["funcindex"],["self"]],["bool"]]],[11,"table_index","","Convert a `DefinedTableIndex` into a `TableIndex`.",7,[[["self"],["definedtableindex"]],["tableindex"]]],[11,"defined_table_index","","Convert a `TableIndex` into a `DefinedTableIndex`. Returns…",7,[[["tableindex"],["self"]],[["option",["definedtableindex"]],["definedtableindex"]]]],[11,"is_imported_table","","Test whether the given table index is for an imported table.",7,[[["tableindex"],["self"]],["bool"]]],[11,"memory_index","","Convert a `DefinedMemoryIndex` into a `MemoryIndex`.",7,[[["self"],["definedmemoryindex"]],["memoryindex"]]],[11,"defined_memory_index","","Convert a `MemoryIndex` into a `DefinedMemoryIndex`.…",7,[[["memoryindex"],["self"]],[["option",["definedmemoryindex"]],["definedmemoryindex"]]]],[11,"is_imported_memory","","Test whether the given memory index is for an imported…",7,[[["memoryindex"],["self"]],["bool"]]],[11,"global_index","","Convert a `DefinedGlobalIndex` into a `GlobalIndex`.",7,[[["definedglobalindex"],["self"]],["globalindex"]]],[11,"defined_global_index","","Convert a `GlobalIndex` into a `DefinedGlobalIndex`.…",7,[[["self"],["globalindex"]],[["option",["definedglobalindex"]],["definedglobalindex"]]]],[11,"is_imported_global","","Test whether the given global index is for an imported…",7,[[["self"],["globalindex"]],["bool"]]],[11,"hash_for_cache","","Computes hash of the module for the purpose of caching.",7,[[["primarymap"],["self"],["h"]]]],[11,"func_env","","Return a new `FuncEnvironment` for translating a function.",13,[[["self"]],["funcenvironment"]]],[11,"new","","Allocates the environment data structures.",23,[[["targetfrontendconfig"],["tunables"]],["self"]]],[11,"translate","","Translate a wasm module using this environment. This…",23,[[],[["wasmresult",["moduletranslation"]],["moduletranslation"]]]],[11,"new","","Return a new `VMOffsets` instance, for a given pointer size.",15,[[["module"],["u8"]],["self"]]],[11,"vmfunction_import_body","","The offset of the `body` field.",15,[[["self"]],["u8"]]],[11,"vmfunction_import_vmctx","","The offset of the `vmctx` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_import","","Return the size of `VMFunctionImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_body_ptr","","The size of the `current_elements` field.",15,[[["self"]],["u8"]]],[11,"vmtable_import_from","","The offset of the `from` field.",15,[[["self"]],["u8"]]],[11,"vmtable_import_vmctx","","The offset of the `vmctx` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmtable_import","","Return the size of `VMTableImport`.",15,[[["self"]],["u8"]]],[11,"vmtable_definition_base","","The offset of the `base` field.",15,[[["self"]],["u8"]]],[11,"vmtable_definition_current_elements","","The offset of the `current_elements` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition_current_elements","","The size of the `current_elements` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition","","Return the size of `VMTableDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmtable_definition_current_elements","","The type of the `current_elements` field.",15,[[["self"]],["type"]]],[11,"vmmemory_import_from","","The offset of the `from` field.",15,[[["self"]],["u8"]]],[11,"vmmemory_import_vmctx","","The offset of the `vmctx` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_import","","Return the size of `VMMemoryImport`.",15,[[["self"]],["u8"]]],[11,"vmmemory_definition_base","","The offset of the `base` field.",15,[[["self"]],["u8"]]],[11,"vmmemory_definition_current_length","","The offset of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition_current_length","","The size of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition","","Return the size of `VMMemoryDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmmemory_definition_current_length","","The type of the `current_length` field.",15,[[["self"]],["type"]]],[11,"vmglobal_import_from","","The offset of the `from` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_import","","Return the size of `VMGlobalImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_definition","","Return the size of `VMGlobalDefinition`; this is the size…",15,[[["self"]],["u8"]]],[11,"size_of_vmshared_signature_index","","Return the size of `VMSharedSignatureIndex`.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_func_ptr","","The offset of the `func_ptr` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_type_index","","The offset of the `type_index` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_vmctx","","The offset of the `vmctx` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmcaller_checked_anyfunc","","Return the size of `VMCallerCheckedAnyfunc`.",15,[[["self"]],["u8"]]],[11,"vmctx_signature_ids_begin","","The offset of the `signature_ids` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_functions_begin","","The offset of the `tables` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_tables_begin","","The offset of the `tables` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_memories_begin","","The offset of the `memories` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_globals_begin","","The offset of the `globals` array.",15,[[["self"]],["u32"]]],[11,"vmctx_tables_begin","","The offset of the `tables` array.",15,[[["self"]],["u32"]]],[11,"vmctx_memories_begin","","The offset of the `memories` array.",15,[[["self"]],["u32"]]],[11,"vmctx_globals_begin","","The offset of the `globals` array.",15,[[["self"]],["u32"]]],[11,"vmctx_builtin_functions_begin","","The offset of the builtin functions array.",15,[[["self"]],["u32"]]],[11,"size_of_vmctx","","Return the size of the `VMContext` allocation.",15,[[["self"]],["u32"]]],[11,"vmctx_vmshared_signature_id","","Return the offset to `VMSharedSignatureId` index `index`.",15,[[["self"],["signatureindex"]],["u32"]]],[11,"vmctx_vmfunction_import","","Return the offset to `VMFunctionImport` index `index`.",15,[[["funcindex"],["self"]],["u32"]]],[11,"vmctx_vmtable_import","","Return the offset to `VMTableImport` index `index`.",15,[[["tableindex"],["self"]],["u32"]]],[11,"vmctx_vmmemory_import","","Return the offset to `VMMemoryImport` index `index`.",15,[[["memoryindex"],["self"]],["u32"]]],[11,"vmctx_vmglobal_import","","Return the offset to `VMGlobalImport` index `index`.",15,[[["self"],["globalindex"]],["u32"]]],[11,"vmctx_vmtable_definition","","Return the offset to `VMTableDefinition` index `index`.",15,[[["self"],["definedtableindex"]],["u32"]]],[11,"vmctx_vmmemory_definition","","Return the offset to `VMMemoryDefinition` index `index`.",15,[[["self"],["definedmemoryindex"]],["u32"]]],[11,"vmctx_vmglobal_definition","","Return the offset to the `VMGlobalDefinition` index `index`.",15,[[["definedglobalindex"],["self"]],["u32"]]],[11,"vmctx_vmfunction_import_body","","Return the offset to the `body` field in `*const…",15,[[["funcindex"],["self"]],["u32"]]],[11,"vmctx_vmfunction_import_vmctx","","Return the offset to the `vmctx` field in `*const…",15,[[["funcindex"],["self"]],["u32"]]],[11,"vmctx_vmtable_import_from","","Return the offset to the `from` field in `VMTableImport`…",15,[[["tableindex"],["self"]],["u32"]]],[11,"vmctx_vmtable_definition_base","","Return the offset to the `base` field in…",15,[[["self"],["definedtableindex"]],["u32"]]],[11,"vmctx_vmtable_definition_current_elements","","Return the offset to the `current_elements` field in…",15,[[["self"],["definedtableindex"]],["u32"]]],[11,"vmctx_vmmemory_import_from","","Return the offset to the `from` field in `VMMemoryImport`…",15,[[["memoryindex"],["self"]],["u32"]]],[11,"vmctx_vmmemory_import_vmctx","","Return the offset to the `vmctx` field in `VMMemoryImport`…",15,[[["memoryindex"],["self"]],["u32"]]],[11,"vmctx_vmmemory_definition_base","","Return the offset to the `base` field in…",15,[[["self"],["definedmemoryindex"]],["u32"]]],[11,"vmctx_vmmemory_definition_current_length","","Return the offset to the `current_length` field in…",15,[[["self"],["definedmemoryindex"]],["u32"]]],[11,"vmctx_vmglobal_import_from","","Return the offset to the `from` field in `VMGlobalImport`…",15,[[["self"],["globalindex"]],["u32"]]],[11,"vmctx_builtin_function","","Return the offset to builtin function in…",15,[[["builtinfunctionindex"],["self"]],["u32"]]],[11,"new","","Constructs `TargetSharedSignatureIndex`.",24,[[["u32"]],["self"]]],[11,"index","","Returns index value.",24,[[],["u32"]]],[0,"cranelift","","Support for compiling with Cranelift.",null,null],[3,"RelocSink","wasmtime_environ::cranelift","Implementation of a relocation sink that just saves all…",null,null],[12,"func_relocs","","Relocations recorded for the function.",25,null],[3,"Cranelift","","A compiler that compiles a WebAssembly module with…",null,null],[11,"new","","Return a new `RelocSink` instance.",25,[[["funcindex"]],["self"]]],[0,"ir","wasmtime_environ","",null,null],[0,"types","wasmtime_environ::ir","Common types for the Cranelift code generator.",null,null],[3,"Type","wasmtime_environ::ir::types","The type of an SSA value.",null,null],[17,"INVALID","","Not a valid type. Can't be loaded or stored. Can't be part…",null,null],[17,"IFLAGS","","CPU flags representing the result of an integer…",null,null],[17,"FFLAGS","","CPU flags representing the result of a floating point…",null,null],[17,"B1","","A boolean type with 1 bits.",null,null],[17,"B8","","A boolean type with 8 bits.",null,null],[17,"B16","","A boolean type with 16 bits.",null,null],[17,"B32","","A boolean type with 32 bits.",null,null],[17,"B64","","A boolean type with 64 bits.",null,null],[17,"B128","","A boolean type with 128 bits.",null,null],[17,"I8","","An integer type with 8 bits. WARNING: arithmetic on 8bit…",null,null],[17,"I16","","An integer type with 16 bits. WARNING: arithmetic on 16bit…",null,null],[17,"I32","","An integer type with 32 bits.",null,null],[17,"I64","","An integer type with 64 bits.",null,null],[17,"I128","","An integer type with 128 bits.",null,null],[17,"F32","","A 32-bit floating point type represented in the IEEE…",null,null],[17,"F64","","A 64-bit floating point type represented in the IEEE…",null,null],[17,"R32","","An opaque reference type with 32 bits.",null,null],[17,"R64","","An opaque reference type with 64 bits.",null,null],[17,"B8X8","","A SIMD vector with 8 lanes containing a `b8` each.",null,null],[17,"B16X4","","A SIMD vector with 4 lanes containing a `b16` each.",null,null],[17,"B32X2","","A SIMD vector with 2 lanes containing a `b32` each.",null,null],[17,"I8X8","","A SIMD vector with 8 lanes containing a `i8` each.",null,null],[17,"I16X4","","A SIMD vector with 4 lanes containing a `i16` each.",null,null],[17,"I32X2","","A SIMD vector with 2 lanes containing a `i32` each.",null,null],[17,"F32X2","","A SIMD vector with 2 lanes containing a `f32` each.",null,null],[17,"B8X16","","A SIMD vector with 16 lanes containing a `b8` each.",null,null],[17,"B16X8","","A SIMD vector with 8 lanes containing a `b16` each.",null,null],[17,"B32X4","","A SIMD vector with 4 lanes containing a `b32` each.",null,null],[17,"B64X2","","A SIMD vector with 2 lanes containing a `b64` each.",null,null],[17,"I8X16","","A SIMD vector with 16 lanes containing a `i8` each.",null,null],[17,"I16X8","","A SIMD vector with 8 lanes containing a `i16` each.",null,null],[17,"I32X4","","A SIMD vector with 4 lanes containing a `i32` each.",null,null],[17,"I64X2","","A SIMD vector with 2 lanes containing a `i64` each.",null,null],[17,"F32X4","","A SIMD vector with 4 lanes containing a `f32` each.",null,null],[17,"F64X2","","A SIMD vector with 2 lanes containing a `f64` each.",null,null],[17,"B8X32","","A SIMD vector with 32 lanes containing a `b8` each.",null,null],[17,"B16X16","","A SIMD vector with 16 lanes containing a `b16` each.",null,null],[17,"B32X8","","A SIMD vector with 8 lanes containing a `b32` each.",null,null],[17,"B64X4","","A SIMD vector with 4 lanes containing a `b64` each.",null,null],[17,"B128X2","","A SIMD vector with 2 lanes containing a `b128` each.",null,null],[17,"I8X32","","A SIMD vector with 32 lanes containing a `i8` each.",null,null],[17,"I16X16","","A SIMD vector with 16 lanes containing a `i16` each.",null,null],[17,"I32X8","","A SIMD vector with 8 lanes containing a `i32` each.",null,null],[17,"I64X4","","A SIMD vector with 4 lanes containing a `i64` each.",null,null],[17,"I128X2","","A SIMD vector with 2 lanes containing a `i128` each.",null,null],[17,"F32X8","","A SIMD vector with 8 lanes containing a `f32` each.",null,null],[17,"F64X4","","A SIMD vector with 4 lanes containing a `f64` each.",null,null],[17,"B8X64","","A SIMD vector with 64 lanes containing a `b8` each.",null,null],[17,"B16X32","","A SIMD vector with 32 lanes containing a `b16` each.",null,null],[17,"B32X16","","A SIMD vector with 16 lanes containing a `b32` each.",null,null],[17,"B64X8","","A SIMD vector with 8 lanes containing a `b64` each.",null,null],[17,"B128X4","","A SIMD vector with 4 lanes containing a `b128` each.",null,null],[17,"I8X64","","A SIMD vector with 64 lanes containing a `i8` each.",null,null],[17,"I16X32","","A SIMD vector with 32 lanes containing a `i16` each.",null,null],[17,"I32X16","","A SIMD vector with 16 lanes containing a `i32` each.",null,null],[17,"I64X8","","A SIMD vector with 8 lanes containing a `i64` each.",null,null],[17,"I128X4","","A SIMD vector with 4 lanes containing a `i128` each.",null,null],[17,"F32X16","","A SIMD vector with 16 lanes containing a `f32` each.",null,null],[17,"F64X8","","A SIMD vector with 8 lanes containing a `f64` each.",null,null],[3,"AbiParam","wasmtime_environ::ir","Function parameter or return value descriptor.",null,null],[12,"value_type","","Type of the argument value.",26,null],[12,"purpose","","Special purpose of argument, or `Normal`.",26,null],[12,"extension","","Method for extending argument to a full register.",26,null],[12,"location","","ABI-specific location of this argument, or `Unassigned`…",26,null],[4,"ArgumentPurpose","","The special purpose of a function argument.",null,null],[13,"Normal","","A normal user program value passed to or from a function.",27,null],[13,"StructReturn","","Struct return pointer.",27,null],[13,"Link","","The link register.",27,null],[13,"FramePointer","","The frame pointer.",27,null],[13,"CalleeSaved","","A callee-saved register.",27,null],[13,"VMContext","","A VM context pointer.",27,null],[13,"SignatureId","","A signature identifier.",27,null],[13,"StackLimit","","A stack limit pointer.",27,null],[3,"Signature","","Function signature.",null,null],[12,"params","","The arguments passed to the function.",28,null],[12,"returns","","Values returned from the function.",28,null],[12,"call_conv","","Calling convention.",28,null],[3,"SourceLoc","","A source location.",null,null],[3,"StackSlots","","Stack frame manager.",null,null],[12,"frame_size","","The total size of the stack frame.",29,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",30,null],[13,"HeapOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",30,null],[13,"TableOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",30,null],[13,"OutOfBounds","","Other bounds checking error.",30,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",30,null],[13,"BadSignature","","Signature mismatch on indirect call.",30,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",30,null],[13,"IntegerDivisionByZero","","An integer division by zero.",30,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",30,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",30,null],[13,"Interrupt","","Execution has potentially run too long and may be…",30,null],[13,"User","","A user-defined trap code.",30,null],[3,"Type","","The type of an SSA value.",null,null],[3,"ValueLabel","","Marked with a label value.",null,null],[4,"ValueLoc","","Value location.",null,null],[13,"Unassigned","","This value has not been assigned to a location yet.",31,null],[13,"Reg","","Value is assigned to a register.",31,null],[13,"Stack","","Value is assigned to a stack slot.",31,null],[6,"ValueLabelsRanges","","Resulting map of Value labels and their ranges/locations.",null,null],[0,"settings","wasmtime_environ","",null,null],[5,"builder","wasmtime_environ::settings","Create a `settings::Builder` for the shared settings group.",null,[[],["builder"]]],[3,"Builder","","Collect settings values based on a template.",null,null],[8,"Configurable","","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",32,[[["str"],["self"]],[["result",["seterror"]],["seterror"]]]],[10,"enable","","Enable a boolean setting or apply a preset.",32,[[["str"],["self"]],[["result",["seterror"]],["seterror"]]]],[3,"Flags","","Flags group `shared`.",null,null],[0,"isa","wasmtime_environ","",null,null],[4,"CallConv","wasmtime_environ::isa","Calling convention identifiers.",null,null],[13,"Fast","","Best performance, not ABI-stable",33,null],[13,"Cold","","Smallest caller code size, not ABI-stable",33,null],[13,"SystemV","","System V-style convention used on many platforms",33,null],[13,"WindowsFastcall","","Windows \"fastcall\" convention, also used for x64 and ARM",33,null],[13,"BaldrdashSystemV","","SpiderMonkey WebAssembly convention on systems using…",33,null],[13,"BaldrdashWindows","","SpiderMonkey WebAssembly convention on Windows",33,null],[13,"Probestack","","Specialized convention for the probestack function",33,null],[6,"RegUnit","","Register units are the smallest units of register…",null,null],[3,"TargetFrontendConfig","","This struct provides information that a frontend may need…",null,null],[12,"default_call_conv","","The default calling convention of the target.",34,null],[12,"pointer_width","","The pointer width of the target.",34,null],[8,"TargetIsa","","Methods that are specialized to a target ISA. Implies a…",null,null],[10,"name","","Get the name of this ISA.",35,[[["self"]],["str"]]],[10,"triple","","Get the target triple that was used to make this trait…",35,[[["self"]],["triple"]]],[10,"flags","","Get the ISA-independent flags that were used to make this…",35,[[["self"]],["flags"]]],[11,"default_call_conv","","Get the default calling convention of this target.",35,[[["self"]],["callconv"]]],[11,"pointer_type","","Get the pointer type of this ISA.",35,[[["self"]],["type"]]],[11,"pointer_width","","Get the width of pointers on this ISA.",35,[[["self"]],["pointerwidth"]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",35,[[["self"]],["u8"]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",35,[[["self"]],["u8"]]],[11,"frontend_config","","Get the information needed by frontends producing…",35,[[["self"]],["targetfrontendconfig"]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",35,[[["self"]],["bool"]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",35,[[["self"]],["bool"]]],[10,"register_info","","Get a data structure describing the registers in this ISA.",35,[[["self"]],["reginfo"]]],[10,"legal_encodings","","Returns an iterator over legal encodings for the…",35,[[["type"],["instructiondata"],["function"],["self"]],["encodings"]]],[11,"encode","","Encode an instruction after determining it is legal.",35,[[["instructiondata"],["type"],["function"],["self"]],[["encoding"],["result",["encoding"]]]]],[10,"encoding_info","","Get a data structure describing the instruction encodings…",35,[[["self"]],["encinfo"]]],[10,"legalize_signature","","Legalize a function signature.",35,[[["cow"],["self"],["bool"]]]],[10,"regclass_for_abi_type","","Get the register class that should be used to represent an…",35,[[["type"],["self"]],["regclassdata"]]],[10,"allocatable_registers","","Get the set of allocatable registers that can be used when…",35,[[["self"],["function"]],["registerset"]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",35,[[["self"],["function"]],[["codegenerror"],["result",["codegenerror"]]]]],[10,"emit_function_to_memory","","Emit a whole function into memory.",35,[[["memorycodesink"],["self"],["function"]]]],[10,"unsigned_add_overflow_condition","","IntCC condition for Unsigned Addition Overflow (Carry).",35,[[["self"]],["intcc"]]],[10,"unsigned_sub_overflow_condition","","IntCC condition for Unsigned Subtraction Overflow…",35,[[["self"]],["intcc"]]],[11,"emit_unwind_info","","Emit unwind information for the given function.",35,[[["vec"],["self"],["function"]]]],[0,"entity","wasmtime_environ","",null,null],[3,"BoxedSlice","wasmtime_environ::entity","A slice mapping `K -> V` allocating dense entity references.",null,null],[8,"EntityRef","","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",36,[[["usize"]],["self"]]],[10,"index","","Get the index that was used to create this entity reference.",36,[[],["usize"]]],[3,"PrimaryMap","","A primary mapping `K -> V` allocating dense entity…",null,null],[0,"wasm","wasmtime_environ","",null,null],[5,"get_vmctx_value_label","wasmtime_environ::wasm","Special VMContext value label. It is tracked as…",null,[[],["valuelabel"]]],[3,"DefinedFuncIndex","","Index type of a defined function inside the WebAssembly…",null,null],[3,"DefinedGlobalIndex","","Index type of a defined global inside the WebAssembly…",null,null],[3,"DefinedMemoryIndex","","Index type of a defined memory inside the WebAssembly…",null,null],[3,"DefinedTableIndex","","Index type of a defined table inside the WebAssembly module.",null,null],[3,"FuncIndex","","Index type of a function (imported or defined) inside the…",null,null],[3,"Global","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",37,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",37,null],[12,"initializer","","The source of the initial value.",37,null],[3,"GlobalIndex","","Index type of a global variable (imported or defined)…",null,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",38,null],[13,"I64Const","","An `i64.const`.",38,null],[13,"F32Const","","An `f32.const`.",38,null],[13,"F64Const","","An `f64.const`.",38,null],[13,"V128Const","","A `vconst`.",38,null],[13,"GetGlobal","","A `get_global` of another global.",38,null],[13,"RefNullConst","","A `ref.null`.",38,null],[13,"Import","","< The global is imported from, and thus initialized by, a…",38,null],[3,"Memory","","WebAssembly linear memory.",null,null],[12,"minimum","","The minimum number of pages in the memory.",39,null],[12,"maximum","","The maximum number of pages in the memory.",39,null],[12,"shared","","Whether the memory may be shared between multiple threads.",39,null],[3,"MemoryIndex","","Index type of a linear memory (imported or defined) inside…",null,null],[3,"SignatureIndex","","Index type of a signature (imported or defined) inside the…",null,null],[3,"Table","","WebAssembly table.",null,null],[12,"ty","","The type of data stored in elements of the table.",40,null],[12,"minimum","","The minimum number of elements in the table.",40,null],[12,"maximum","","The maximum number of elements in the table.",40,null],[4,"TableElementType","","WebAssembly table element. Can be a function or a scalar…",null,null],[13,"Val","","A scalar type.",41,null],[13,"Func","","A function.",41,null],[3,"TableIndex","","Index type of a table (imported or defined) inside the…",null,null],[6,"ModuleAddressMap","wasmtime_environ","Module functions addresses mappings.",null,null],[6,"ValueLabelsRanges","","Value ranges for functions.",null,null],[6,"Relocations","","Relocations to apply to function bodies.",null,null],[6,"Traps","","Information about traps associated with the functions…",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are defined to be 64KiB.",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"Compiler","","An implementation of a compiler from parsed WebAssembly…",null,null],[10,"compile_module","","Compile a parsed module with the given `TargetIsa`.",42,[[["primarymap",["definedfuncindex","functionbodydata"]],["functionbodydata"],["targetisa"],["module"],["moduletranslationstate"],["definedfuncindex"],["bool"]],[["result",["compileerror"]],["compileerror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","wasmtime_environ::ir","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"equivalent","","",43,[[["k"],["self"]],["bool"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["k"],["self"]],["bool"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"equivalent","","",28,[[["k"],["self"]],["bool"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"equivalent","","",44,[[["k"],["self"]],["bool"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"equivalent","","",29,[[["k"],["self"]],["bool"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"equivalent","","",30,[[["k"],["self"]],["bool"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"key","","",45,[[["self"]],["t"]]],[11,"equivalent","","",45,[[["k"],["self"]],["bool"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"equivalent","","",31,[[["k"],["self"]],["bool"]]],[11,"from","wasmtime_environ::settings","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","wasmtime_environ::isa","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"equivalent","","",33,[[["k"],["self"]],["bool"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","wasmtime_environ::entity","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"equivalent","","",49,[[["k"],["self"]],["bool"]]],[11,"from","wasmtime_environ::wasm","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"key","","",50,[[["self"]],["t"]]],[11,"equivalent","","",50,[[["k"],["self"]],["bool"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"key","","",51,[[["self"]],["t"]]],[11,"equivalent","","",51,[[["k"],["self"]],["bool"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"key","","",52,[[["self"]],["t"]]],[11,"equivalent","","",52,[[["k"],["self"]],["bool"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"key","","",53,[[["self"]],["t"]]],[11,"equivalent","","",53,[[["k"],["self"]],["bool"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"key","","",54,[[["self"]],["t"]]],[11,"equivalent","","",54,[[["k"],["self"]],["bool"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"key","","",55,[[["self"]],["t"]]],[11,"equivalent","","",55,[[["k"],["self"]],["bool"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"key","","",56,[[["self"]],["t"]]],[11,"equivalent","","",56,[[["k"],["self"]],["bool"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"key","","",57,[[["self"]],["t"]]],[11,"equivalent","","",57,[[["k"],["self"]],["bool"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"key","","",58,[[["self"]],["t"]]],[11,"equivalent","","",58,[[["k"],["self"]],["bool"]]],[11,"from","wasmtime_environ::cranelift","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"fmt","wasmtime_environ::ir","",26,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::isa","",33,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::ir","",28,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::settings","",47,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::ir","",27,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"eq","","",29,[[["self"],["stackslots"]],["bool"]]],[11,"ne","","",29,[[["self"],["stackslots"]],["bool"]]],[11,"eq","","",44,[[["self"],["sourceloc"]],["bool"]]],[11,"ne","","",44,[[["self"],["sourceloc"]],["bool"]]],[11,"eq","","",31,[[["valueloc"],["self"]],["bool"]]],[11,"ne","","",31,[[["valueloc"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["abiparam"]],["bool"]]],[11,"ne","","",26,[[["self"],["abiparam"]],["bool"]]],[11,"eq","","",45,[[["valuelabel"],["self"]],["bool"]]],[11,"ne","","",45,[[["valuelabel"],["self"]],["bool"]]],[11,"eq","","",30,[[["trapcode"],["self"]],["bool"]]],[11,"ne","","",30,[[["trapcode"],["self"]],["bool"]]],[11,"eq","wasmtime_environ::isa","",33,[[["self"],["callconv"]],["bool"]]],[11,"eq","wasmtime_environ::ir","",28,[[["signature"],["self"]],["bool"]]],[11,"ne","","",28,[[["signature"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["type"]],["bool"]]],[11,"ne","","",43,[[["self"],["type"]],["bool"]]],[11,"eq","","",27,[[["self"],["argumentpurpose"]],["bool"]]],[11,"default","","",43,[[],["type"]]],[11,"default","","",31,[[],["valueloc"]]],[11,"default","","",44,[[],["sourceloc"]]],[11,"enable","wasmtime_environ::settings","",46,[[["str"],["self"]],[["result",["seterror"]],["seterror"]]]],[11,"set","","",46,[[["str"],["self"]],[["result",["seterror"]],["seterror"]]]],[11,"index","wasmtime_environ::ir","",29,[[["self"],["stackslot"]],["stackslotdata"]]],[11,"deserialize","","",45,[[["__d"]],[["valuelabel"],["result",["valuelabel"]]]]],[11,"deserialize","","",30,[[["__d"]],[["trapcode"],["result",["trapcode"]]]]],[11,"deserialize","","",44,[[["__d"]],[["sourceloc"],["result",["sourceloc"]]]]],[11,"deserialize","","",29,[[["__d"]],[["result",["stackslots"]],["stackslots"]]]],[11,"deserialize","","",31,[[["__d"]],[["result",["valueloc"]],["valueloc"]]]],[11,"new","","",45,[[["usize"]],["valuelabel"]]],[11,"index","","",45,[[],["usize"]]],[11,"index_mut","","",29,[[["self"],["stackslot"]],["stackslotdata"]]],[11,"from_str","wasmtime_environ::isa","",33,[[["str"]],[["result",["callconv"]],["callconv"]]]],[11,"from_str","wasmtime_environ::ir","",27,[[["str"]],[["result",["argumentpurpose"]],["argumentpurpose"]]]],[11,"from_str","","",30,[[["str"]],[["trapcode"],["result",["trapcode"]]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","wasmtime_environ::isa","",33,[[["self"],["__h"]]]],[11,"hash","wasmtime_environ::ir","",45,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"clone","","",29,[[["self"]],["stackslots"]]],[11,"clone","","",30,[[["self"]],["trapcode"]]],[11,"clone","","",27,[[["self"]],["argumentpurpose"]]],[11,"clone","","",28,[[["self"]],["signature"]]],[11,"clone","","",31,[[["self"]],["valueloc"]]],[11,"clone","","",26,[[["self"]],["abiparam"]]],[11,"clone","wasmtime_environ::isa","",34,[[["self"]],["targetfrontendconfig"]]],[11,"clone","wasmtime_environ::ir","",45,[[["self"]],["valuelabel"]]],[11,"clone","","",43,[[["self"]],["type"]]],[11,"clone","wasmtime_environ::settings","",46,[[["self"]],["builder"]]],[11,"clone","","",47,[[["self"]],["flags"]]],[11,"clone","wasmtime_environ::isa","",33,[[["self"]],["callconv"]]],[11,"clone","wasmtime_environ::ir","",44,[[["self"]],["sourceloc"]]],[11,"fmt","","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::isa","",33,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmtime_environ::ir","",26,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",31,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",27,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"reserved_value","","",45,[[],["valuelabel"]]],[11,"serialize","","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",44,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"hash","wasmtime_environ::entity","",49,[[["self"],["__h"]]]],[11,"eq","","",49,[[["self"],["primarymap"]],["bool"]]],[11,"ne","","",49,[[["self"],["primarymap"]],["bool"]]],[11,"index","","",49,[[["self"],["k"]],["v"]]],[11,"index","","",48,[[["self"],["k"]],["v"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"clone","","",48,[[["self"]],["boxedslice"]]],[11,"clone","","",49,[[["self"]],["primarymap"]]],[11,"index_mut","","",48,[[["self"],["k"]],["v"]]],[11,"index_mut","","",49,[[["self"],["k"]],["v"]]],[11,"deserialize","","",49,[[["__d"]],[["result",["primarymap"]],["primarymap"]]]],[11,"fmt","","",48,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",49,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"from_iter","","",49,[[["t"]],["primarymap"]]],[11,"reserved_value","wasmtime_environ::wasm","",58,[[],["tableindex"]]],[11,"reserved_value","","",51,[[],["definedglobalindex"]]],[11,"reserved_value","","",52,[[],["definedmemoryindex"]]],[11,"reserved_value","","",57,[[],["signatureindex"]]],[11,"reserved_value","","",54,[[],["funcindex"]]],[11,"reserved_value","","",56,[[],["memoryindex"]]],[11,"reserved_value","","",55,[[],["globalindex"]]],[11,"reserved_value","","",50,[[],["definedfuncindex"]]],[11,"reserved_value","","",53,[[],["definedtableindex"]]],[11,"cmp","","",53,[[["self"],["definedtableindex"]],["ordering"]]],[11,"cmp","","",54,[[["funcindex"],["self"]],["ordering"]]],[11,"cmp","","",51,[[["definedglobalindex"],["self"]],["ordering"]]],[11,"cmp","","",58,[[["self"],["tableindex"]],["ordering"]]],[11,"cmp","","",56,[[["memoryindex"],["self"]],["ordering"]]],[11,"cmp","","",50,[[["self"],["definedfuncindex"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["definedmemoryindex"]],["ordering"]]],[11,"cmp","","",57,[[["self"],["signatureindex"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["globalindex"]],["ordering"]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"new","","",50,[[["usize"]],["definedfuncindex"]]],[11,"index","","",50,[[],["usize"]]],[11,"new","","",58,[[["usize"]],["tableindex"]]],[11,"index","","",58,[[],["usize"]]],[11,"new","","",54,[[["usize"]],["funcindex"]]],[11,"index","","",54,[[],["usize"]]],[11,"new","","",53,[[["usize"]],["definedtableindex"]]],[11,"index","","",53,[[],["usize"]]],[11,"new","","",57,[[["usize"]],["signatureindex"]]],[11,"index","","",57,[[],["usize"]]],[11,"new","","",51,[[["usize"]],["definedglobalindex"]]],[11,"index","","",51,[[],["usize"]]],[11,"new","","",56,[[["usize"]],["memoryindex"]]],[11,"index","","",56,[[],["usize"]]],[11,"new","","",52,[[["usize"]],["definedmemoryindex"]]],[11,"index","","",52,[[],["usize"]]],[11,"new","","",55,[[["usize"]],["globalindex"]]],[11,"index","","",55,[[],["usize"]]],[11,"partial_cmp","","",54,[[["funcindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"le","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"gt","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"ge","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["definedtableindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"le","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"gt","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"ge","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"partial_cmp","","",56,[[["memoryindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"le","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"gt","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"ge","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"partial_cmp","","",57,[[["self"],["signatureindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"le","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"gt","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"ge","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"partial_cmp","","",58,[[["self"],["tableindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"le","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"gt","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"ge","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"partial_cmp","","",50,[[["self"],["definedfuncindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"le","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"gt","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"ge","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"partial_cmp","","",52,[[["self"],["definedmemoryindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"le","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"gt","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"ge","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["globalindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"le","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"gt","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"ge","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"partial_cmp","","",51,[[["definedglobalindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"le","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"gt","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"ge","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"eq","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"ne","","",56,[[["memoryindex"],["self"]],["bool"]]],[11,"eq","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"ne","","",51,[[["definedglobalindex"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"ne","","",50,[[["self"],["definedfuncindex"]],["bool"]]],[11,"eq","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"ne","","",55,[[["self"],["globalindex"]],["bool"]]],[11,"eq","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"ne","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"eq","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"ne","","",52,[[["self"],["definedmemoryindex"]],["bool"]]],[11,"eq","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"ne","","",54,[[["funcindex"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"ne","","",57,[[["self"],["signatureindex"]],["bool"]]],[11,"eq","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"ne","","",53,[[["self"],["definedtableindex"]],["bool"]]],[11,"clone","","",51,[[["self"]],["definedglobalindex"]]],[11,"clone","","",41,[[["self"]],["tableelementtype"]]],[11,"clone","","",39,[[["self"]],["memory"]]],[11,"clone","","",52,[[["self"]],["definedmemoryindex"]]],[11,"clone","","",55,[[["self"]],["globalindex"]]],[11,"clone","","",37,[[["self"]],["global"]]],[11,"clone","","",40,[[["self"]],["table"]]],[11,"clone","","",53,[[["self"]],["definedtableindex"]]],[11,"clone","","",38,[[["self"]],["globalinit"]]],[11,"clone","","",50,[[["self"]],["definedfuncindex"]]],[11,"clone","","",58,[[["self"]],["tableindex"]]],[11,"clone","","",57,[[["self"]],["signatureindex"]]],[11,"clone","","",54,[[["self"]],["funcindex"]]],[11,"clone","","",56,[[["self"]],["memoryindex"]]],[11,"serialize","","",54,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],[["funcindex"],["result",["funcindex"]]]]],[11,"fmt","","",54,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",58,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",57,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",56,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"compile_module","wasmtime_environ::cranelift","Compile the module using Cranelift, producing a…",59,[[["primarymap",["definedfuncindex","functionbodydata"]],["functionbodydata"],["module"],["targetisa"],["moduletranslationstate"],["definedfuncindex"],["bool"]],[["result",["compileerror"]],["compileerror"]]]],[11,"from","wasmtime_environ","",16,[[["wasmerror"]],["self"]]],[11,"clone","","",1,[[["self"]],["instructionaddressmap"]]],[11,"clone","","",0,[[["self"]],["functionaddressmap"]]],[11,"clone","","",3,[[["self"]],["compiledfunction"]]],[11,"clone","","",4,[[["self"]],["relocation"]]],[11,"clone","","",17,[[["self"]],["relocationtarget"]]],[11,"clone","","",8,[[["self"]],["tableelements"]]],[11,"clone","","",18,[[["self"]],["export"]]],[11,"clone","","",19,[[["self"]],["memorystyle"]]],[11,"clone","","",6,[[["self"]],["memoryplan"]]],[11,"clone","","",20,[[["self"]],["tablestyle"]]],[11,"clone","","",9,[[["self"]],["tableplan"]]],[11,"clone","","",11,[[["self"]],["datainitializerlocation"]]],[11,"clone","","",14,[[["self"]],["tunables"]]],[11,"clone","","",24,[[["self"]],["targetsharedsignatureindex"]]],[11,"default","","",14,[[],["self"]]],[11,"cmp","","",18,[[["export"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["instructionaddressmap"]],["bool"]]],[11,"ne","","",1,[[["self"],["instructionaddressmap"]],["bool"]]],[11,"eq","","",0,[[["self"],["functionaddressmap"]],["bool"]]],[11,"ne","","",0,[[["self"],["functionaddressmap"]],["bool"]]],[11,"eq","","",3,[[["self"],["compiledfunction"]],["bool"]]],[11,"ne","","",3,[[["self"],["compiledfunction"]],["bool"]]],[11,"eq","","",21,[[["self"],["compilation"]],["bool"]]],[11,"ne","","",21,[[["self"],["compilation"]],["bool"]]],[11,"eq","","",4,[[["relocation"],["self"]],["bool"]]],[11,"ne","","",4,[[["relocation"],["self"]],["bool"]]],[11,"eq","","",17,[[["relocationtarget"],["self"]],["bool"]]],[11,"ne","","",17,[[["relocationtarget"],["self"]],["bool"]]],[11,"eq","","",5,[[["trapinformation"],["self"]],["bool"]]],[11,"ne","","",5,[[["trapinformation"],["self"]],["bool"]]],[11,"eq","","",18,[[["export"],["self"]],["bool"]]],[11,"ne","","",18,[[["export"],["self"]],["bool"]]],[11,"partial_cmp","","",18,[[["export"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",18,[[["export"],["self"]],["bool"]]],[11,"le","","",18,[[["export"],["self"]],["bool"]]],[11,"gt","","",18,[[["export"],["self"]],["bool"]]],[11,"ge","","",18,[[["export"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"source","","",16,[[["self"]],[["option",["error"]],["error"]]]],[11,"reloc_ebb","wasmtime_environ::cranelift","",25,[[["codeoffset"],["reloc"],["self"]]]],[11,"reloc_external","","",25,[[["codeoffset"],["externalname"],["addend"],["reloc"],["self"]]]],[11,"reloc_constant","","",25,[[["codeoffset"],["constantoffset"],["reloc"],["self"]]]],[11,"reloc_jt","","",25,[[["codeoffset"],["reloc"],["self"],["jumptable"]]]],[11,"deserialize","wasmtime_environ","",1,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"reserve_signatures","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_signature","","",23,[[["self"],["signature"]],["wasmresult"]]],[11,"declare_func_import","","",23,[[["str"],["signatureindex"],["self"]],["wasmresult"]]],[11,"declare_table_import","","",23,[[["table"],["str"],["self"]],["wasmresult"]]],[11,"declare_memory_import","","",23,[[["str"],["memory"],["self"]],["wasmresult"]]],[11,"declare_global_import","","",23,[[["global"],["str"],["self"]],["wasmresult"]]],[11,"finish_imports","","",23,[[["self"]],["wasmresult"]]],[11,"reserve_func_types","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_func_type","","",23,[[["self"],["signatureindex"]],["wasmresult"]]],[11,"reserve_tables","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_table","","",23,[[["table"],["self"]],["wasmresult"]]],[11,"reserve_memories","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_memory","","",23,[[["self"],["memory"]],["wasmresult"]]],[11,"reserve_globals","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_global","","",23,[[["global"],["self"]],["wasmresult"]]],[11,"reserve_exports","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_func_export","","",23,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[11,"declare_table_export","","",23,[[["str"],["self"],["tableindex"]],["wasmresult"]]],[11,"declare_memory_export","","",23,[[["memoryindex"],["self"],["str"]],["wasmresult"]]],[11,"declare_global_export","","",23,[[["str"],["self"],["globalindex"]],["wasmresult"]]],[11,"declare_start_func","","",23,[[["funcindex"],["self"]],["wasmresult"]]],[11,"reserve_table_elements","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_table_elements","","",23,[[["globalindex"],["usize"],["box"],["self"],["tableindex"],["option",["globalindex"]]],["wasmresult"]]],[11,"define_function_body","","",23,[[["usize"],["moduletranslationstate"],["self"]],["wasmresult"]]],[11,"reserve_data_initializers","","",23,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_data_initialization","","",23,[[["usize"],["memoryindex"],["self"],["option",["globalindex"]],["globalindex"]],["wasmresult"]]],[11,"target_config","","",23,[[["self"]],["targetfrontendconfig"]]],[11,"lane_type","wasmtime_environ::ir","Get the lane type of this SIMD vector type.",43,[[],["type"]]],[11,"lane_of","","The type transformation that returns the lane type of a…",43,[[],["type"]]],[11,"log2_lane_bits","","Get log_2 of the number of bits in a lane.",43,[[],["u8"]]],[11,"lane_bits","","Get the number of bits in a lane.",43,[[],["u8"]]],[11,"int","","Get an integer type with the requested number of bits.",43,[[["u16"]],[["type"],["option",["type"]]]]],[11,"as_bool_pedantic","","Get a type with the same number of lanes as this type, but…",43,[[],["type"]]],[11,"as_bool","","Get a type with the same number of lanes as this type, but…",43,[[],["type"]]],[11,"half_width","","Get a type with the same number of lanes as this type, but…",43,[[],[["type"],["option",["type"]]]]],[11,"double_width","","Get a type with the same number of lanes as this type, but…",43,[[],[["type"],["option",["type"]]]]],[11,"is_invalid","","Is this the INVALID type?",43,[[],["bool"]]],[11,"is_special","","Is this a special type?",43,[[],["bool"]]],[11,"is_lane","","Is this a lane type?",43,[[],["bool"]]],[11,"is_vector","","Is this a SIMD vector type?",43,[[],["bool"]]],[11,"is_bool","","Is this a scalar boolean type?",43,[[],["bool"]]],[11,"is_int","","Is this a scalar integer type?",43,[[],["bool"]]],[11,"is_float","","Is this a scalar floating point type?",43,[[],["bool"]]],[11,"is_flags","","Is this a CPU flags type?",43,[[],["bool"]]],[11,"is_ref","","Is this a ref type?",43,[[],["bool"]]],[11,"log2_lane_count","","Get log_2 of the number of lanes in this SIMD vector type.",43,[[],["u8"]]],[11,"lane_count","","Get the number of lanes in this SIMD vector type.",43,[[],["u16"]]],[11,"bits","","Get the total number of bits used to represent this type.",43,[[],["u16"]]],[11,"bytes","","Get the number of bytes used to store this type in memory.",43,[[],["u32"]]],[11,"by","","Get a SIMD vector type with `n` times more lanes than this…",43,[[["u16"]],[["type"],["option",["type"]]]]],[11,"half_vector","","Get a SIMD vector with half the number of lanes.",43,[[],[["type"],["option",["type"]]]]],[11,"index","","Index of this type, for use with hash tables etc.",43,[[],["usize"]]],[11,"wider_or_equal","","True iff:",43,[[["type"]],["bool"]]],[11,"triple_pointer_type","","Return the pointer type for the given target triple.",43,[[["triple"]],["type"]]],[11,"new","","Create a parameter with default flags.",26,[[["type"]],["abiparam"]]],[11,"special","","Create a special-purpose parameter that is not (yet) bound…",26,[[["type"],["argumentpurpose"]],["abiparam"]]],[11,"special_reg","","Create a parameter for a special-purpose register.",26,[[["type"],["u16"],["argumentpurpose"]],["abiparam"]]],[11,"uext","","Convert `self` to a parameter with the `uext` flag set.",26,[[],["abiparam"]]],[11,"sext","","Convert `self` to a parameter type with the `sext` flag set.",26,[[],["abiparam"]]],[11,"display","","Return an object that can display `self` with correct…",26,[[["self"],["r"]],["displayabiparam"]]],[11,"new","","Create a new blank signature.",28,[[["callconv"]],["signature"]]],[11,"clear","","Clear the signature so it is identical to a fresh one…",28,[[["self"],["callconv"]]]],[11,"display","","Return an object that can display `self` with correct…",28,[[["self"],["r"]],["displaysignature"]]],[11,"special_param_index","","Find the index of a presumed unique special-purpose…",28,[[["self"],["argumentpurpose"]],[["option",["usize"]],["usize"]]]],[11,"special_return_index","","Find the index of a presumed unique special-purpose…",28,[[["self"],["argumentpurpose"]],[["option",["usize"]],["usize"]]]],[11,"uses_special_param","","Does this signature have a parameter whose…",28,[[["self"],["argumentpurpose"]],["bool"]]],[11,"uses_special_return","","Does this signature have a return whose `ArgumentPurpose`…",28,[[["self"],["argumentpurpose"]],["bool"]]],[11,"num_special_params","","How many special parameters does this function have?",28,[[["self"]],["usize"]]],[11,"num_special_returns","","How many special returns does this function have?",28,[[["self"]],["usize"]]],[11,"uses_struct_return_param","","Does this signature take an struct return pointer parameter?",28,[[["self"]],["bool"]]],[11,"is_multi_return","","Does this return more than one normal value? (Pre-struct…",28,[[["self"]],["bool"]]],[11,"new","","Create a new source location with the given bits.",44,[[["u32"]],["sourceloc"]]],[11,"is_default","","Is this the default source location?",44,[[],["bool"]]],[11,"bits","","Read the bits of this source location.",44,[[],["u32"]]],[11,"new","","Create an empty stack slot manager.",29,[[],["stackslots"]]],[11,"clear","","Clear out everything.",29,[[["self"]]]],[11,"push","","Allocate a new stack slot.",29,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"is_valid","","Check if `ss` is a valid stack slot reference.",29,[[["self"],["stackslot"]],["bool"]]],[11,"iter","","Get an iterator over all the stack slot keys.",29,[[["self"]],[["stackslotdata"],["stackslot"],["iter",["stackslot","stackslotdata"]]]]],[11,"iter_mut","","Get an iterator over all the stack slot keys, mutable…",29,[[["self"]],[["stackslotdata"],["itermut",["stackslot","stackslotdata"]],["stackslot"]]]],[11,"values","","Get an iterator over all the stack slot records.",29,[[["self"]],[["iter",["stackslotdata"]],["stackslotdata"]]]],[11,"values_mut","","Get an iterator over all the stack slot records, mutable…",29,[[["self"]],[["stackslotdata"],["itermut",["stackslotdata"]]]]],[11,"keys","","Get an iterator over all the stack slot keys.",29,[[["self"]],[["keys",["stackslot"]],["stackslot"]]]],[11,"next_key","","Get a reference to the next stack slot that would be…",29,[[["self"]],["stackslot"]]],[11,"make_spill_slot","","Create a new spill slot for spilling values of type `ty`.",29,[[["type"],["self"]],["stackslot"]]],[11,"make_incoming_arg","","Create a stack slot representing an incoming function…",29,[[["type"],["self"],["i32"]],["stackslot"]]],[11,"get_outgoing_arg","","Get a stack slot representing an outgoing argument.",29,[[["type"],["self"],["i32"]],["stackslot"]]],[11,"get_emergency_slot","","Get an emergency spill slot that can be used to store a…",29,[[["type"],["self"]],["stackslot"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",45,[[["u32"]],["valuelabel"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",45,[[],["u32"]]],[11,"is_assigned","","Is this an assigned location? (That is, not `Unassigned`).",31,[[],["bool"]]],[11,"unwrap_reg","","Get the register unit of this location, or panic.",31,[[],["u16"]]],[11,"unwrap_stack","","Get the stack slot of this location, or panic.",31,[[],["stackslot"]]],[11,"display","","Return an object that can display this value location,…",31,[[["r"]],["displayvalueloc"]]],[11,"new","wasmtime_environ::settings","Create a new builder with defaults and names from the…",46,[[["template"]],["builder"]]],[11,"state_for","","Extract contents of builder once everything is configured.",46,[[["str"]],["box"]]],[11,"new","","Create flags shared settings group.",47,[[["builder"]],["flags"]]],[11,"predicate_view","","Get a view of the boolean predicates.",47,[[["self"]],["predicateview"]]],[11,"opt_level","","Optimization level:",47,[[["self"]],["optlevel"]]],[11,"libcall_call_conv","","Defines the calling convention to use for LibCalls call…",47,[[["self"]],["libcallcallconv"]]],[11,"baldrdash_prologue_words","","Number of pointer-sized words pushed by the baldrdash…",47,[[["self"]],["u8"]]],[11,"probestack_size_log2","","The log2 of the size of the stack guard region.",47,[[["self"]],["u8"]]],[11,"enable_verifier","","Run the Cranelift IR verifier at strategic times during…",47,[[["self"]],["bool"]]],[11,"is_pic","","Enable Position-Independent Code generation",47,[[["self"]],["bool"]]],[11,"colocated_libcalls","","Use colocated libcalls.",47,[[["self"]],["bool"]]],[11,"avoid_div_traps","","Generate explicit checks around native division…",47,[[["self"]],["bool"]]],[11,"enable_float","","Enable the use of floating-point instructions",47,[[["self"]],["bool"]]],[11,"enable_nan_canonicalization","","Enable NaN canonicalization",47,[[["self"]],["bool"]]],[11,"enable_pinned_reg","","Enable the use of the pinned register.",47,[[["self"]],["bool"]]],[11,"use_pinned_reg_as_heap_base","","Use the pinned register as the heap base.",47,[[["self"]],["bool"]]],[11,"enable_simd","","Enable the use of SIMD instructions.",47,[[["self"]],["bool"]]],[11,"enable_atomics","","Enable the use of atomic instructions",47,[[["self"]],["bool"]]],[11,"enable_safepoints","","Enable safepoint instruction insertions.",47,[[["self"]],["bool"]]],[11,"allones_funcaddrs","","Emit not-yet-relocated function addresses as all-ones bit…",47,[[["self"]],["bool"]]],[11,"probestack_enabled","","Enable the use of stack probes, for calling conventions…",47,[[["self"]],["bool"]]],[11,"probestack_func_adjusts_sp","","Set this to true of the stack probe function modifies the…",47,[[["self"]],["bool"]]],[11,"jump_tables_enabled","","Enable the use of jump tables in generated machine code.",47,[[["self"]],["bool"]]],[11,"triple_default","wasmtime_environ::isa","Return the default calling convention for the given target…",33,[[["triple"]],["callconv"]]],[11,"for_libcall","","Returns the calling convention used for libcalls for the…",33,[[["targetisa"]],["callconv"]]],[11,"extends_windows_fastcall","","Is the calling convention extending the Windows Fastcall…",33,[[],["bool"]]],[11,"extends_baldrdash","","Is the calling convention extending the Baldrdash ABI?",33,[[],["bool"]]],[11,"pointer_type","","Get the pointer type of this target.",34,[[],["type"]]],[11,"pointer_bits","","Get the width of pointers on this target, in units of bits.",34,[[],["u8"]]],[11,"pointer_bytes","","Get the width of pointers on this target, in units of bytes.",34,[[],["u8"]]],[11,"default_call_conv","","Get the default calling convention of this target.",35,[[["self"]],["callconv"]]],[11,"pointer_type","","Get the pointer type of this ISA.",35,[[["self"]],["type"]]],[11,"pointer_width","","Get the width of pointers on this ISA.",35,[[["self"]],["pointerwidth"]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",35,[[["self"]],["u8"]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",35,[[["self"]],["u8"]]],[11,"frontend_config","","Get the information needed by frontends producing…",35,[[["self"]],["targetfrontendconfig"]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",35,[[["self"]],["bool"]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",35,[[["self"]],["bool"]]],[11,"encode","","Encode an instruction after determining it is legal.",35,[[["instructiondata"],["type"],["function"],["self"]],[["encoding"],["result",["encoding"]]]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",35,[[["self"],["function"]],[["codegenerror"],["result",["codegenerror"]]]]],[11,"emit_unwind_info","","Emit unwind information for the given function.",35,[[["vec"],["self"],["function"]]]],[11,"from_raw","wasmtime_environ::entity","Create a new slice from a raw pointer. A safer way to…",48,[[],["boxedslice"]]],[11,"is_valid","","Check if `k` is a valid key in the map.",48,[[["self"],["k"]],["bool"]]],[11,"get","","Get the element at `k` if it exists.",48,[[["self"],["k"]],[["option"],["v"]]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",48,[[["self"],["k"]],[["v"],["option"]]]],[11,"is_empty","","Is this map completely empty?",48,[[["self"]],["bool"]]],[11,"len","","Get the total number of entity references created.",48,[[["self"]],["usize"]]],[11,"keys","","Iterate over all the keys in this map.",48,[[["self"]],["keys"]]],[11,"values","","Iterate over all the values in this map.",48,[[["self"]],["iter"]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",48,[[["self"]],["itermut"]]],[11,"iter","","Iterate over all the keys and values in this map.",48,[[["self"]],["iter"]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",48,[[["self"]],["itermut"]]],[11,"last","","Returns the last element that was inserted in the map.",48,[[["self"]],[["option"],["v"]]]],[11,"new","","Create a new empty map.",49,[[],["primarymap"]]],[11,"with_capacity","","Create a new empty map with the given capacity.",49,[[["usize"]],["primarymap"]]],[11,"is_valid","","Check if `k` is a valid key in the map.",49,[[["self"],["k"]],["bool"]]],[11,"get","","Get the element at `k` if it exists.",49,[[["self"],["k"]],[["option"],["v"]]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",49,[[["self"],["k"]],[["v"],["option"]]]],[11,"is_empty","","Is this map completely empty?",49,[[["self"]],["bool"]]],[11,"len","","Get the total number of entity references created.",49,[[["self"]],["usize"]]],[11,"keys","","Iterate over all the keys in this map.",49,[[["self"]],["keys"]]],[11,"values","","Iterate over all the values in this map.",49,[[["self"]],["iter"]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",49,[[["self"]],["itermut"]]],[11,"iter","","Iterate over all the keys and values in this map.",49,[[["self"]],["iter"]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",49,[[["self"]],["itermut"]]],[11,"clear","","Remove all entries from this map.",49,[[["self"]]]],[11,"next_key","","Get the key that will be assigned to the next pushed value.",49,[[["self"]],["k"]]],[11,"push","","Append `v` to the mapping, assigning a new key which is…",49,[[["self"],["v"]],["k"]]],[11,"last","","Returns the last element that was inserted in the map.",49,[[["self"]],[["option"],["v"]]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",49,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",49,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the `PrimaryMap` as much as…",49,[[["self"]]]],[11,"into_boxed_slice","","Consumes this `PrimaryMap` and produces a `BoxedSlice`.",49,[[],["boxedslice"]]],[11,"from_u32","wasmtime_environ::wasm","Return the underlying index value as a `u32`.",50,[[["u32"]],["definedfuncindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",50,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",51,[[["u32"]],["definedglobalindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",51,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",52,[[["u32"]],["definedmemoryindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",52,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",53,[[["u32"]],["definedtableindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",53,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",54,[[["u32"]],["funcindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",54,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",55,[[["u32"]],["globalindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",55,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",56,[[["u32"]],["memoryindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",56,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",57,[[["u32"]],["signatureindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",57,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",58,[[["u32"]],["tableindex"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",58,[[],["u32"]]]],"p":[[3,"FunctionAddressMap"],[3,"InstructionAddressMap"],[3,"ModuleVmctxInfo"],[3,"CompiledFunction"],[3,"Relocation"],[3,"TrapInformation"],[3,"MemoryPlan"],[3,"Module"],[3,"TableElements"],[3,"TablePlan"],[3,"DataInitializer"],[3,"DataInitializerLocation"],[3,"FunctionBodyData"],[3,"ModuleTranslation"],[3,"Tunables"],[3,"VMOffsets"],[4,"CompileError"],[4,"RelocationTarget"],[4,"Export"],[4,"MemoryStyle"],[4,"TableStyle"],[3,"Compilation"],[3,"BuiltinFunctionIndex"],[3,"ModuleEnvironment"],[3,"TargetSharedSignatureIndex"],[3,"RelocSink"],[3,"AbiParam"],[4,"ArgumentPurpose"],[3,"Signature"],[3,"StackSlots"],[4,"TrapCode"],[4,"ValueLoc"],[8,"Configurable"],[4,"CallConv"],[3,"TargetFrontendConfig"],[8,"TargetIsa"],[8,"EntityRef"],[3,"Global"],[4,"GlobalInit"],[3,"Memory"],[3,"Table"],[4,"TableElementType"],[8,"Compiler"],[3,"Type"],[3,"SourceLoc"],[3,"ValueLabel"],[3,"Builder"],[3,"Flags"],[3,"BoxedSlice"],[3,"PrimaryMap"],[3,"DefinedFuncIndex"],[3,"DefinedGlobalIndex"],[3,"DefinedMemoryIndex"],[3,"DefinedTableIndex"],[3,"FuncIndex"],[3,"GlobalIndex"],[3,"MemoryIndex"],[3,"SignatureIndex"],[3,"TableIndex"],[3,"Cranelift"]]};
searchIndex["wasmtime_fuzzing"] = {"doc":"Fuzzing infrastructure for Wasmtime.","i":[[5,"log_wasm_test_case","wasmtime_fuzzing","Given that we are going to do a fuzz test of the given…",null,[[["str"]]]],[0,"generators","","Test case generators.",null,null],[3,"WasmOptTtf","wasmtime_fuzzing::generators","A Wasm test case generator that is powered by Binaryen's…",null,null],[12,"wasm","","The raw, encoded Wasm bytes.",0,null],[0,"api","","Generating sequences of Wasmtime API calls.",null,null],[3,"ApiCalls","wasmtime_fuzzing::generators::api","A sequence of API calls.",null,null],[12,"calls","","The API calls.",1,null],[4,"ApiCall","","A call to one of Wasmtime's public APIs.",null,null],[13,"ConfigNew","","",2,null],[13,"ConfigDebugInfo","","",2,null],[13,"EngineNew","","",2,null],[13,"StoreNew","","",2,null],[13,"ModuleNew","","",2,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[12,"wasm","","",2,null],[13,"ModuleDrop","wasmtime_fuzzing::generators::api","",2,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[13,"InstanceNew","wasmtime_fuzzing::generators::api","",2,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[12,"module","","",2,null],[13,"InstanceDrop","wasmtime_fuzzing::generators::api","",2,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[13,"CallExportedFunc","wasmtime_fuzzing::generators::api","",2,null],[12,"instance","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[12,"nth","","",2,null],[0,"oracles","wasmtime_fuzzing","Oracles.",null,null],[5,"instantiate","wasmtime_fuzzing::oracles","Instantiate the Wasm buffer, and implicitly fail if we…",null,[[["strategy"]]]],[5,"compile","","Compile the Wasm buffer, and implicitly fail if we have an…",null,[[["compilationstrategy"]]]],[5,"make_api_calls","","Invoke the given API calls.",null,[[["apicalls"]]]],[0,"dummy","","Dummy implementations of things that a Wasm module can…",null,null],[3,"DummyFunc","wasmtime_fuzzing::oracles::dummy","A function that doesn't do anything but return the default…",null,null],[5,"dummy_imports","","Create a set of dummy functions/globals/etc for the given…",null,[[["store"]],[["vec",["extern"]],["trap"],["result",["vec","trap"]]]]],[5,"dummy_value","","Construct a dummy value for the given value type.",null,[[["valtype"]],[["trap"],["result",["val","trap"]],["val"]]]],[5,"dummy_global","","Construct a dummy global for the given global type.",null,[[["store"],["globaltype"]],[["trap"],["result",["global","trap"]],["global"]]]],[5,"dummy_table","","Construct a dummy table for the given table type.",null,[[["store"],["tabletype"]],[["trap"],["result",["table","trap"]],["table"]]]],[5,"dummy_memory","","Construct a dummy memory for the given memory type.",null,[[["store"],["memorytype"]],["memory"]]],[11,"new","","Construct a new dummy `Func`.",3,[[["store"],["functype"]],["func"]]],[14,"with_log_wasm_test_case","wasmtime_fuzzing","Run a fuzz test on Wasm test case with automatic logging.",null,null],[11,"from","wasmtime_fuzzing::generators","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","wasmtime_fuzzing::generators::api","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wasmtime_fuzzing::oracles::dummy","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","wasmtime_fuzzing::generators::api","",2,[[["self"]],["apicall"]]],[11,"clone","wasmtime_fuzzing::generators","",0,[[["self"]],["wasmoptttf"]]],[11,"fmt","wasmtime_fuzzing::generators::api","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmtime_fuzzing::generators","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmtime_fuzzing::oracles::dummy","",3,[[["formatter"],["self"]],["result"]]],[11,"arbitrary","wasmtime_fuzzing::generators::api","",1,[[["u"]],["result"]]],[11,"arbitrary","wasmtime_fuzzing::generators","",0,[[["u"]],["result"]]],[11,"call","wasmtime_fuzzing::oracles::dummy","",3,[[["self"]],[["trap"],["result",["trap"]]]]]],"p":[[3,"WasmOptTtf"],[3,"ApiCalls"],[4,"ApiCall"],[3,"DummyFunc"]]};
searchIndex["wasmtime_interface_types"] = {"doc":"A small crate to handle WebAssembly interface types in…","i":[[3,"ModuleData","wasmtime_interface_types","A data structure intended to hold a parsed representation…",null,null],[3,"ExportBinding","","Representation of a binding of an exported function.",null,null],[4,"Value","","The set of all possible WebAssembly Interface Types",null,null],[13,"String","","",0,null],[13,"I32","","",0,null],[13,"U32","","",0,null],[13,"I64","","",0,null],[13,"U64","","",0,null],[13,"F32","","",0,null],[13,"F64","","",0,null],[11,"new","","Parses a raw binary wasm file, extracting information…",1,[[],[["result",["moduledata"]],["moduledata"]]]],[11,"find_wasi_module_name","","Detects if WASI support is needed: returns module name…",1,[[["self"]],[["string"],["option",["string"]]]]],[11,"invoke_export","","Invokes wasmtime function with a `&[Value]` list. `Value`…",1,[[["str"],["hostref"],["self"]],[["result",["vec"]],["vec",["value"]]]]],[11,"binding_for_export","","Returns an appropriate binding for the `name` export in…",1,[[["str"],["self"],["instancehandle"]],[["exportbinding"],["result",["exportbinding"]]]]],[11,"param_bindings","","Returns the list of binding expressions used to create the…",2,[[["self"]],[["vec",["incomingbindingexpression"]],["result",["vec"]]]]],[11,"param_types","","Returns the list of scalar types used for this binding",2,[[["self"]],[["vec",["webidlscalartype"]],["result",["vec"]]]]],[11,"result_bindings","","Returns the list of binding expressions used to extract…",2,[[["self"]],[["result",["vec"]],["vec",["outgoingbindingexpression"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["string"]],["value"]]],[11,"from","","",0,[[["i32"]],["value"]]],[11,"from","","",0,[[["u32"]],["value"]]],[11,"from","","",0,[[["i64"]],["value"]]],[11,"from","","",0,[[["u64"]],["value"]]],[11,"from","","",0,[[["f32"]],["value"]]],[11,"from","","",0,[[["f64"]],["value"]]],[11,"from","","",0,[[["str"]],["value"]]],[11,"clone","","",0,[[["self"]],["value"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[4,"Value"],[3,"ModuleData"],[3,"ExportBinding"]]};
searchIndex["wasmtime_jit"] = {"doc":"JIT-style runtime for WebAssembly using Cranelift.","i":[[3,"InstanceHandle","wasmtime_jit","A handle holding an `Instance` of a WebAssembly module.",null,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Resource","","Insufficient resources available for execution.",0,null],[13,"Link","","A wasm link error occured.",0,null],[13,"StartTrap","","A compilation error occured.",0,null],[3,"CodeMemory","","Memory manager for executable code.",null,null],[3,"Compiler","","A WebAssembly code JIT compiler.",null,null],[3,"Context","","A convenient context for compiling and executing…",null,null],[3,"Features","","The collection of features configurable during compilation",null,null],[12,"threads","","marks whether the proposed thread feature is enabled or…",1,null],[12,"reference_types","","marks whether the proposed reference type feature is…",1,null],[12,"simd","","marks whether the proposed SIMD feature is enabled or…",1,null],[12,"bulk_memory","","marks whether the proposed bulk memory feature is enabled…",1,null],[12,"multi_value","","marks whether the proposed multi-value feature is enabled…",1,null],[3,"UnknownInstance","","Indicates an unknown instance was specified.",null,null],[3,"CompiledModule","","A compiled wasm module, ready to be instantiated.",null,null],[3,"Namespace","","A namespace containing instances keyed by name.",null,null],[3,"NullResolver","","`Resolver` implementation that always resolves to `None`.",null,null],[4,"ActionError","","An error detected while invoking a wasm function or…",null,null],[13,"Setup","","An internal implementation error occurred.",2,null],[13,"Field","","No field with the specified name was present.",2,null],[13,"Kind","","The field was present but was the wrong kind (eg.…",2,null],[13,"Type","","The field was present but was the wrong type (eg. i32,…",2,null],[4,"ActionOutcome","","The result of invoking a wasm function or reading a wasm…",null,null],[13,"Returned","","The action returned normally. Its return values are…",3,null],[12,"values","wasmtime_jit::ActionOutcome","The return values.",3,null],[13,"Trapped","wasmtime_jit","A trap occurred while the action was executing.",3,null],[12,"message","wasmtime_jit::ActionOutcome","The trap message.",3,null],[4,"RuntimeValue","wasmtime_jit","A runtime value.",null,null],[13,"I32","","A runtime value with type i32.",4,null],[13,"I64","","A runtime value with type i64.",4,null],[13,"F32","","A runtime value with type f32.",4,null],[13,"F64","","A runtime value with type f64.",4,null],[13,"V128","","A runtime value with type v128",4,null],[4,"CompilationStrategy","","Select which kind of compilation to use.",null,null],[13,"Auto","","Let Wasmtime pick the strategy.",5,null],[13,"Cranelift","","Compile all functions with Cranelift.",5,null],[4,"ContextError","","Error message used by `WastContext`.",null,null],[13,"Instance","","An unknown instance name was used.",6,null],[13,"Action","","An error occured while performing an action.",6,null],[4,"SetupError","","An error condition while setting up a wasm instance, be it…",null,null],[13,"Validate","","The module did not pass validation.",7,null],[13,"Compile","","A wasm translation error occured.",7,null],[13,"Instantiate","","Some runtime resource was unavailable or insufficient, or…",7,null],[13,"DebugInfo","","Debug information generation error occured.",7,null],[5,"invoke","","Invoke a function through an `InstanceHandle` identified…",null,[[["str"],["compiler"],["instancehandle"]],[["result",["actionoutcome","actionerror"]],["actionoutcome"],["actionerror"]]]],[5,"instantiate","","Create a new wasm instance by compiling the wasm module in…",null,[[["bool"],["compiler"],["resolver"],["rc",["refcell"]],["refcell",["hashmap"]]],[["result",["instancehandle","setuperror"]],["setuperror"],["instancehandle"]]]],[5,"link_module","","Links a module that has been compiled with…",null,[[["primarymap"],["module"],["primarymap"],["resolver"],["relocations"]],[["linkerror"],["result",["imports","linkerror"]],["imports"]]]],[5,"target_tunables","","Return a `Tunables` instance tuned for the given target…",null,[[["triple"]],["tunables"]]],[11,"value_type","","Return the type of this `RuntimeValue`.",4,[[],["type"]]],[11,"unwrap_i32","","Assuming this `RuntimeValue` holds an `i32`, return that…",4,[[],["i32"]]],[11,"unwrap_i64","","Assuming this `RuntimeValue` holds an `i64`, return that…",4,[[],["i64"]]],[11,"unwrap_f32","","Assuming this `RuntimeValue` holds an `f32`, return that…",4,[[],["f32"]]],[11,"unwrap_f32_bits","","Assuming this `RuntimeValue` holds an `f32`, return the…",4,[[],["u32"]]],[11,"unwrap_f64","","Assuming this `RuntimeValue` holds an `f64`, return that…",4,[[],["f64"]]],[11,"unwrap_f64_bits","","Assuming this `RuntimeValue` holds an `f64`, return the…",4,[[],["u64"]]],[11,"new","","Create a new `CodeMemory` instance.",8,[[],["self"]]],[11,"allocate_for_function","","Allocate a continuous memory block for a single compiled…",8,[[["self"],["compiledfunction"]],[["string"],["result",["string"]]]]],[11,"allocate_for_compilation","","Allocate a continuous memory block for a compilation.",8,[[["compilation"],["self"]],[["result",["box","string"]],["box"],["string"]]]],[11,"publish","","Make all allocated memory executable.",8,[[["self"]]]],[11,"new","","Construct a new `Compiler`.",9,[[["compilationstrategy"],["box",["targetisa"]],["targetisa"]],["self"]]],[11,"frontend_config","","Return the target's frontend configuration settings.",9,[[["self"]],["targetfrontendconfig"]]],[11,"tunables","","Return the tunables in use by this engine.",9,[[["self"]],["tunables"]]],[11,"get_published_trampoline","","Create and publish a trampoline for invoking a function.",9,[[["signature"],["usize"],["self"]],[["result",["setuperror"]],["setuperror"]]]],[11,"signatures","","Shared signature registry.",9,[[["self"]],["signatureregistry"]]],[11,"new","","Construct a new instance of `Context`.",10,[[["box",["compiler"]],["compiler"]],["self"]]],[11,"debug_info","","Get debug_info settings.",10,[[["self"]],["bool"]]],[11,"set_debug_info","","Set debug_info settings.",10,[[["self"],["bool"]]]],[11,"with_isa","","Construct a new instance of `Context` with the given target.",10,[[["compilationstrategy"],["box",["targetisa"]],["targetisa"]],["self"]]],[11,"features","","Retrieve the context features",10,[[["self"]],["features"]]],[11,"with_features","","Construct a new instance with the given features from the…",10,[[["features"]],["self"]]],[11,"get_instance","","Return the instance associated with the given name.",10,[[["str"],["self"]],[["unknowninstance"],["result",["instancehandle","unknowninstance"]],["instancehandle"]]]],[11,"instantiate_module","","Instantiate a module instance and register the instance.",10,[[["string"],["self"],["option",["string"]]],[["result",["instancehandle","actionerror"]],["actionerror"],["instancehandle"]]]],[11,"compile_module","","Compile a module.",10,[[["self"]],[["setuperror"],["result",["compiledmodule","setuperror"]],["compiledmodule"]]]],[11,"optionally_name_instance","","If `name` isn't None, register it for the given instance.",10,[[["instancehandle"],["string"],["self"],["option",["string"]]]]],[11,"name_instance","","Register a name for the given instance.",10,[[["string"],["self"],["instancehandle"]]]],[11,"alias","","Register an additional name for an existing registered…",10,[[["str"],["self"],["string"]],[["result",["unknowninstance"]],["unknowninstance"]]]],[11,"invoke_named","","Invoke an exported function from a named instance.",10,[[["str"],["self"]],[["result",["actionoutcome","contexterror"]],["actionoutcome"],["contexterror"]]]],[11,"invoke","","Invoke an exported function from an instance.",10,[[["str"],["instancehandle"],["self"]],[["result",["actionoutcome","actionerror"]],["actionoutcome"],["actionerror"]]]],[11,"get_named","","Get the value of an exported global variable from an…",10,[[["str"],["self"]],[["result",["actionoutcome","contexterror"]],["actionoutcome"],["contexterror"]]]],[11,"get","","Get the value of an exported global variable from an…",10,[[["str"],["self"],["instancehandle"]],[["result",["actionoutcome","actionerror"]],["actionoutcome"],["actionerror"]]]],[11,"inspect_memory","","Get a slice of memory from an instance.",10,[[["instancehandle"],["str"],["usize"],["self"]],[["result",["actionerror"]],["actionerror"]]]],[11,"get_global_exports","","Return a handle to the global_exports mapping, needed by…",10,[[["self"]],[["rc",["refcell"]],["refcell",["hashmap"]]]]],[11,"new","","Compile a data buffer into a `CompiledModule`, which may…",11,[[["bool"],["compiler"],["resolver"],["rc",["refcell"]],["refcell",["hashmap"]]],[["result",["setuperror"]],["setuperror"]]]],[11,"from_parts","","Construct a `CompiledModule` from component parts.",11,[[["imports"],["boxedslice",["signatureindex","vmsharedsignatureindex"]],["boxedslice",["definedfuncindex"]],["option",["gdbjitimageregistration"]],["box"],["definedfuncindex"],["refcell",["hashmap"]],["signatureindex"],["module"],["vmsharedsignatureindex"],["gdbjitimageregistration"],["rc",["refcell"]]],["self"]]],[11,"instantiate","","Crate an `Instance` from this `CompiledModule`.",11,[[["self"]],[["result",["instancehandle","instantiationerror"]],["instantiationerror"],["instancehandle"]]]],[11,"module","","Return a reference-counting pointer to a module.",11,[[["self"]],[["rc",["module"]],["module"]]]],[11,"module_ref","","Return a reference to a module.",11,[[["self"]],["module"]]],[11,"new","","Construct a new `Namespace`.",12,[[],["self"]]],[11,"name_instance","","Install a new `InstanceHandle` in this `Namespace`,…",12,[[["string"],["self"],["instancehandle"]]]],[11,"get_instance","","Get the instance registered with the given `instance_name`.",12,[[["str"],["self"]],[["instancehandle"],["option",["instancehandle"]]]]],[0,"native","","",null,null],[5,"lookup","wasmtime_jit::native","Look for an ISA for the given `triple`. Return a builder…",null,[[["triple"]],[["lookuperror"],["builder"],["result",["builder","lookuperror"]]]]],[5,"builder","","",null,[[],["builder"]]],[5,"call_conv","","",null,[[],["callconv"]]],[0,"trampoline","wasmtime_jit","",null,null],[5,"pretty_error","wasmtime_jit::trampoline","Pretty-print a Cranelift error.",null,[[["targetisa"],["function"],["codegenerror"],["option",["targetisa"]]],["string"]]],[3,"Context","","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we're compiling.",13,null],[12,"cfg","","The control flow graph of `func`.",13,null],[12,"domtree","","Dominator tree for `func`.",13,null],[12,"regalloc","","Register allocation context.",13,null],[12,"loop_analysis","","Loop analysis of `func`.",13,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",13,null],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",14,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[0,"ir","","",null,null],[4,"ExternalName","wasmtime_jit::trampoline::ir","The name of an external is either a reference to a…",null,null],[13,"User","","A name in a user-defined symbol table. Cranelift does not…",15,null],[12,"namespace","wasmtime_jit::trampoline::ir::ExternalName","Arbitrary.",15,null],[12,"index","","Arbitrary.",15,null],[13,"TestCase","wasmtime_jit::trampoline::ir","A test case function name of up to 10 ascii characters.…",15,null],[12,"length","wasmtime_jit::trampoline::ir::ExternalName","How many of the bytes in `ascii` are valid?",15,null],[12,"ascii","","Ascii bytes of the name.",15,null],[13,"LibCall","wasmtime_jit::trampoline::ir","A well-known runtime library function.",15,null],[3,"Function","","A function.",null,null],[12,"name","","Name of this function. Mostly used by `.clif` files.",16,null],[12,"signature","","Signature of this function.",16,null],[12,"old_signature","","The old signature of this function, before the most recent…",16,null],[12,"stack_slots","","Stack slots allocated in this function.",16,null],[12,"global_values","","Global values referenced.",16,null],[12,"heaps","","Heaps referenced.",16,null],[12,"tables","","Tables referenced.",16,null],[12,"jump_tables","","Jump tables used in this function.",16,null],[12,"dfg","","Data flow graph containing the primary definition of all…",16,null],[12,"layout","","Layout of EBBs and instructions in the function body.",16,null],[12,"encodings","","Encoding recipe and bits for the legal instructions.…",16,null],[12,"locations","","Location assigned to every value.",16,null],[12,"entry_diversions","","Non-default locations assigned to value at the entry of…",16,null],[12,"offsets","","Code offsets of the EBB headers.",16,null],[12,"jt_offsets","","Code offsets of Jump Table headers.",16,null],[12,"srclocs","","Source locations.",16,null],[12,"prologue_end","","Instruction that marks the end (inclusive) of the…",16,null],[12,"frame_layout","","Frame layout for the instructions.",16,null],[8,"InstBuilder","","Convenience methods for building instructions.",null,null],[11,"jump","","Jump.",17,[[["ebb"]],["inst"]]],[11,"fallthrough","","Fall through to the next EBB.",17,[[["ebb"]],["inst"]]],[11,"brz","","Branch when zero.",17,[[["value"],["ebb"]],["inst"]]],[11,"brnz","","Branch when non-zero.",17,[[["value"],["ebb"]],["inst"]]],[11,"br_icmp","","Compare scalar integers and branch.",17,[[["t1"],["ebb"],["value"]],["inst"]]],[11,"brif","","Branch when condition is true in integer CPU flags.",17,[[["t1"],["ebb"],["value"]],["inst"]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",17,[[["t1"],["ebb"],["value"]],["inst"]]],[11,"br_table","","Indirect branch via jump table.",17,[[["value"],["jumptable"],["ebb"]],["inst"]]],[11,"jump_table_entry","","Get an entry from a jump table.",17,[[["value"],["t1"],["jumptable"]],["value"]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",17,[[["type"],["jumptable"]],["value"]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",17,[[["value"],["jumptable"]],["inst"]]],[11,"debugtrap","","Encodes an assembly debug trap.",17,[[],["inst"]]],[11,"trap","","Terminate execution unconditionally.",17,[[["t1"]],["inst"]]],[11,"trapz","","Trap when zero.",17,[[["value"],["t1"]],["inst"]]],[11,"resumable_trap","","A resumable trap.",17,[[["t1"]],["inst"]]],[11,"trapnz","","Trap when non-zero.",17,[[["value"],["t1"]],["inst"]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"return_","","Return from the function.",17,[[],["inst"]]],[11,"fallthrough_return","","Return from the function by fallthrough.",17,[[],["inst"]]],[11,"call","","Direct function call.",17,[[["funcref"]],["inst"]]],[11,"call_indirect","","Indirect function call.",17,[[["value"],["sigref"]],["inst"]]],[11,"func_addr","","Get the address of a function.",17,[[["type"],["funcref"]],["value"]]],[11,"load","","Load from memory at `p + Offset`.",17,[[["t1"],["value"],["type"],["t2"]],["value"]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"store","","Store `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",17,[[["t1"],["value"],["t2"]],["inst"]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",17,[[["t1"],["value"],["type"],["t2"]],["value"]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",17,[[["t1"],["value"],["type"],["t2"]],["value"]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",17,[[["t1"],["value"],["t2"]],["inst"]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",17,[[["t1"],["value"],["type"],["t2"]],["value"]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",17,[[["t1"],["value"],["type"],["t2"]],["value"]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",17,[[["t1"],["value"],["t2"]],["inst"]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",17,[[["t2"],["t1"]],["value"]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",17,[[["t2"],["t1"]],["value"]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",17,[[["t1"],["value"],["t2"]],["inst"]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",17,[[["stackslot"],["type"],["t1"]],["value"]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",17,[[["value"],["stackslot"],["t1"]],["inst"]]],[11,"stack_addr","","Get the address of a stack slot.",17,[[["stackslot"],["type"],["t1"]],["value"]]],[11,"global_value","","Compute the value of global GV.",17,[[["type"],["globalvalue"]],["value"]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",17,[[["type"],["globalvalue"]],["value"]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",17,[[["t1"],["value"],["type"],["heap"]],["value"]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it's enabled.",17,[[["type"]],["value"]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it's enabled.",17,[[["value"]],["inst"]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",17,[[["table"],["t1"],["value"],["type"]],["value"]]],[11,"iconst","","Integer constant.",17,[[["type"],["t1"]],["value"]]],[11,"f32const","","Floating point constant.",17,[[["t1"]],["value"]]],[11,"f64const","","Floating point constant.",17,[[["t1"]],["value"]]],[11,"bconst","","Boolean constant.",17,[[["type"],["t1"]],["value"]]],[11,"vconst","","SIMD vector constant.",17,[[["type"],["t1"]],["value"]]],[11,"shuffle","","SIMD vector shuffle.",17,[[["value"],["t1"]],["value"]]],[11,"null","","Null constant value for reference types.",17,[[["type"]],["value"]]],[11,"nop","","Just a dummy instruction.",17,[[],["inst"]]],[11,"select","","Conditional select.",17,[[["value"]],["value"]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",17,[[["t1"],["value"],["type"]],["value"]]],[11,"bitselect","","Conditional select of bits.",17,[[["value"]],["value"]]],[11,"copy","","Register-register copy.",17,[[["value"]],["value"]]],[11,"spill","","Spill a register value to a stack slot.",17,[[["value"]],["value"]]],[11,"fill","","Load a register value from a stack slot.",17,[[["value"]],["value"]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",17,[[["value"]],["value"]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"copy_special","","Copies the contents of ''src'' register to ''dst'' register.",17,[[["t2"],["t1"]],["inst"]]],[11,"copy_to_ssa","","Copies the contents of ''src'' register to ''a'' SSA name.",17,[[["type"],["t1"]],["value"]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",17,[[["value"]],["value"]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",17,[[["value"]],["inst"]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",17,[[["t1"]],["inst"]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",17,[[["t1"]],["inst"]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",17,[[["value"]],["value"]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",17,[[["value"],["t1"],["stackslot"]],["inst"]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",17,[[["value"],["stackslot"],["t1"]],["inst"]]],[11,"safepoint","","This instruction will provide live reference values at a…",17,[[],["inst"]]],[11,"vsplit","","Split a vector into two halves.",17,[[["value"]]]],[11,"vconcat","","Vector concatenation.",17,[[["value"]],["value"]]],[11,"vselect","","Vector lane select.",17,[[["value"]],["value"]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",17,[[["value"]],["value"]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",17,[[["value"]],["value"]]],[11,"splat","","Vector splat.",17,[[["value"],["type"]],["value"]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",17,[[["value"],["t1"]],["value"]]],[11,"extractlane","","Extract lane `Idx` from `x`.",17,[[["value"],["t1"]],["value"]]],[11,"icmp","","Integer comparison.",17,[[["value"],["t1"]],["value"]]],[11,"icmp_imm","","Compare scalar integer to a constant.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"ifcmp","","Compare scalar integers and return flags.",17,[[["value"]],["value"]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",17,[[["value"],["t1"]],["value"]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"uadd_sat","","Add with unsigned saturation.",17,[[["value"]],["value"]]],[11,"sadd_sat","","Add with signed saturation.",17,[[["value"]],["value"]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"usub_sat","","Subtract with unsigned saturation.",17,[[["value"]],["value"]]],[11,"ssub_sat","","Subtract with signed saturation.",17,[[["value"]],["value"]]],[11,"ineg","","Integer negation: `a := -x \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",17,[[["value"]],["value"]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",17,[[["value"]],["value"]]],[11,"udiv","","Unsigned integer division: `a := \\lfloor {x \\over y}…",17,[[["value"]],["value"]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",17,[[["value"]],["value"]]],[11,"urem","","Unsigned integer remainder.",17,[[["value"]],["value"]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",17,[[["value"]],["value"]]],[11,"iadd_imm","","Add immediate integer.",17,[[["value"],["t1"]],["value"]]],[11,"imul_imm","","Integer multiplication by immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",17,[[["value"],["t1"]],["value"]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",17,[[["value"],["t1"]],["value"]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",17,[[["value"],["t1"]],["value"]]],[11,"iadd_cin","","Add integers with carry in.",17,[[["value"]],["value"]]],[11,"iadd_ifcin","","Add integers with carry in.",17,[[["value"]],["value"]]],[11,"iadd_cout","","Add integers with carry out.",17,[[["value"]]]],[11,"iadd_ifcout","","Add integers with carry out.",17,[[["value"]]]],[11,"iadd_carry","","Add integers with carry in and out.",17,[[["value"]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",17,[[["value"]]]],[11,"isub_bin","","Subtract integers with borrow in.",17,[[["value"]],["value"]]],[11,"isub_ifbin","","Subtract integers with borrow in.",17,[[["value"]],["value"]]],[11,"isub_bout","","Subtract integers with borrow out.",17,[[["value"]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",17,[[["value"]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",17,[[["value"]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",17,[[["value"]]]],[11,"band","","Bitwise and.",17,[[["value"]],["value"]]],[11,"bor","","Bitwise or.",17,[[["value"]],["value"]]],[11,"bxor","","Bitwise xor.",17,[[["value"]],["value"]]],[11,"bnot","","Bitwise not.",17,[[["value"]],["value"]]],[11,"band_not","","Bitwise and not.",17,[[["value"]],["value"]]],[11,"bor_not","","Bitwise or not.",17,[[["value"]],["value"]]],[11,"bxor_not","","Bitwise xor not.",17,[[["value"]],["value"]]],[11,"band_imm","","Bitwise and with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bor_imm","","Bitwise or with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bxor_imm","","Bitwise xor with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"rotl","","Rotate left.",17,[[["value"]],["value"]]],[11,"rotr","","Rotate right.",17,[[["value"]],["value"]]],[11,"rotl_imm","","Rotate left by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"rotr_imm","","Rotate right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",17,[[["value"]],["value"]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",17,[[["value"]],["value"]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",17,[[["value"]],["value"]]],[11,"ishl_imm","","Integer shift left by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"ushr_imm","","Unsigned shift right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"sshr_imm","","Signed shift right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bitrev","","Reverse the bits of a integer.",17,[[["value"]],["value"]]],[11,"clz","","Count leading zero bits.",17,[[["value"]],["value"]]],[11,"cls","","Count leading sign bits.",17,[[["value"]],["value"]]],[11,"ctz","","Count trailing zeros.",17,[[["value"]],["value"]]],[11,"popcnt","","Population count",17,[[["value"]],["value"]]],[11,"fcmp","","Floating point comparison.",17,[[["value"],["t1"]],["value"]]],[11,"ffcmp","","Floating point comparison returning flags.",17,[[["value"]],["value"]]],[11,"fadd","","Floating point addition.",17,[[["value"]],["value"]]],[11,"fsub","","Floating point subtraction.",17,[[["value"]],["value"]]],[11,"fmul","","Floating point multiplication.",17,[[["value"]],["value"]]],[11,"fdiv","","Floating point division.",17,[[["value"]],["value"]]],[11,"sqrt","","Floating point square root.",17,[[["value"]],["value"]]],[11,"fma","","Floating point fused multiply-and-add.",17,[[["value"]],["value"]]],[11,"fneg","","Floating point negation.",17,[[["value"]],["value"]]],[11,"fabs","","Floating point absolute value.",17,[[["value"]],["value"]]],[11,"fcopysign","","Floating point copy sign.",17,[[["value"]],["value"]]],[11,"fmin","","Floating point minimum, propagating NaNs.",17,[[["value"]],["value"]]],[11,"fmax","","Floating point maximum, propagating NaNs.",17,[[["value"]],["value"]]],[11,"ceil","","Round floating point round to integral, towards positive…",17,[[["value"]],["value"]]],[11,"floor","","Round floating point round to integral, towards negative…",17,[[["value"]],["value"]]],[11,"trunc","","Round floating point round to integral, towards zero.",17,[[["value"]],["value"]]],[11,"nearest","","Round floating point round to integral, towards nearest…",17,[[["value"]],["value"]]],[11,"is_null","","Reference verification.",17,[[["value"]],["value"]]],[11,"trueif","","Test integer CPU flags for a specific condition.",17,[[["value"],["t1"]],["value"]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",17,[[["value"],["t1"]],["value"]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",17,[[["value"],["type"]],["value"]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",17,[[["value"],["type"]],["value"]]],[11,"scalar_to_vector","","Scalar To Vector -- move a value out of a scalar register…",17,[[["value"],["type"]],["value"]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",17,[[["value"],["type"]],["value"]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",17,[[["value"],["type"]],["value"]]],[11,"bint","","Convert `x` to an integer.",17,[[["value"],["type"]],["value"]]],[11,"bmask","","Convert `x` to an integer mask.",17,[[["value"],["type"]],["value"]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",17,[[["value"],["type"]],["value"]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",17,[[["value"],["type"]],["value"]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",17,[[["value"],["type"]],["value"]]],[11,"fpromote","","Convert `x` to a larger floating point format.",17,[[["value"],["type"]],["value"]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",17,[[["value"],["type"]],["value"]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",17,[[["value"],["type"]],["value"]]],[11,"isplit","","Split an integer into low and high parts.",17,[[["value"]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",17,[[["value"]],["value"]]],[11,"x86_udivmodx","","Extended unsigned division.",17,[[["value"]]]],[11,"x86_sdivmodx","","Extended signed division.",17,[[["value"]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",17,[[["value"]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",17,[[["value"]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",17,[[["value"],["type"]],["value"]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",17,[[["value"]],["value"]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",17,[[["value"]],["value"]]],[11,"x86_push","","Pushes a value onto the stack.",17,[[["value"]],["inst"]]],[11,"x86_pop","","Pops a value from the stack.",17,[[["type"]],["value"]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",17,[[["value"]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",17,[[["value"]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",17,[[["value"],["t1"]],["value"]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",17,[[["value"]],["value"]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",17,[[["value"],["t1"]],["value"]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",17,[[["value"],["t1"]],["value"]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",17,[[["value"],["t1"]],["value"]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",17,[[["value"]],["value"]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",17,[[["value"]],["value"]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",17,[[["value"]],["value"]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",17,[[["value"]],["value"]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",17,[[["value"]],["value"]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",17,[[["value"]],["value"]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",17,[[["value"]],["value"]]],[11,"Binary","","Binary(imms=(), vals=2)",17,[[["opcode"],["type"],["value"]]]],[11,"BinaryImm","","BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)",17,[[["imm64"],["opcode"],["type"],["value"]]]],[11,"Branch","","Branch(imms=(destination: ir::Ebb), vals=1)",17,[[["ebb"],["opcode"],["type"],["value"],["entitylist",["value"]]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",17,[[["floatcc"],["ebb"],["opcode"],["type"],["value"],["entitylist",["value"]]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",17,[[["entitylist",["value"]],["ebb"],["opcode"],["type"],["intcc"],["value"]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",17,[[["entitylist",["value"]],["ebb"],["opcode"],["type"],["intcc"],["value"]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Ebb, table:…",17,[[["jumptable"],["ebb"],["opcode"],["type"],["value"]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",17,[[["opcode"],["type"],["jumptable"]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",17,[[["jumptable"],["opcode"],["type"],["value"],["u8"]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",17,[[["funcref"],["entitylist",["value"]],["opcode"],["type"],["value"]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",17,[[["sigref"],["entitylist",["value"]],["opcode"],["type"],["value"]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",17,[[["trapcode"],["opcode"],["type"],["value"]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",17,[[["opcode"],["type"],["u16"]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",17,[[["opcode"],["type"],["u16"]]]],[11,"ExtractLane","","ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)",17,[[["opcode"],["type"],["value"],["u8"]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",17,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",17,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",17,[[["floatcc"],["trapcode"],["opcode"],["type"],["value"]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",17,[[["opcode"],["type"],["funcref"]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",17,[[["uimm32"],["opcode"],["type"],["value"],["heap"]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",17,[[["jumptable"],["opcode"],["type"],["value"]]]],[11,"InsertLane","","InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)",17,[[["opcode"],["type"],["value"],["u8"]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",17,[[["opcode"],["type"],["intcc"],["value"]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",17,[[["imm64"],["opcode"],["type"],["intcc"],["value"]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",17,[[["opcode"],["type"],["intcc"],["value"]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",17,[[["trapcode"],["opcode"],["type"],["intcc"],["value"]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",17,[[["opcode"],["type"],["intcc"],["value"]]]],[11,"Jump","","Jump(imms=(destination: ir::Ebb), vals=0)",17,[[["ebb"],["opcode"],["type"],["value"],["entitylist",["value"]]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",17,[[["offset32"],["memflags"],["opcode"],["type"],["value"]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",17,[[["offset32"],["memflags"],["entitylist",["value"]],["opcode"],["type"],["value"]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",17,[[["entitylist",["value"]],["opcode"],["type"],["value"]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",17,[[["opcode"],["type"]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",17,[[["value"],["opcode"],["type"],["stackslot"],["u16"]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",17,[[["opcode"],["type"],["u16"],["value"]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",17,[[["value"],["opcode"],["type"],["u16"],["stackslot"]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",17,[[["opcode"],["type"],["immediate"],["value"]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",17,[[["offset32"],["opcode"],["type"],["stackslot"]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",17,[[["offset32"],["opcode"],["type"],["stackslot"],["value"]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",17,[[["offset32"],["memflags"],["opcode"],["type"],["value"]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",17,[[["offset32"],["memflags"],["entitylist",["value"]],["opcode"],["type"],["value"]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",17,[[["table"],["offset32"],["opcode"],["type"],["value"]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",17,[[["opcode"],["type"],["value"]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",17,[[["opcode"],["type"],["trapcode"]]]],[11,"Unary","","Unary(imms=(), vals=1)",17,[[["opcode"],["type"],["value"]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",17,[[["opcode"],["type"],["bool"]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",17,[[["opcode"],["type"],["constant"]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",17,[[["opcode"],["type"],["globalvalue"]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",17,[[["opcode"],["type"],["ieee32"]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",17,[[["opcode"],["type"],["ieee64"]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",17,[[["opcode"],["type"],["imm64"]]]],[3,"MemFlags","","Flags for memory operations like load/store.",null,null],[3,"StackSlotData","","Contents of a stack slot.",null,null],[12,"kind","","The kind of stack slot.",18,null],[12,"size","","Size of stack slot in bytes.",18,null],[12,"offset","","Offset of stack slot relative to the stack pointer in the…",18,null],[4,"StackSlotKind","","The kind of a stack slot.",null,null],[13,"SpillSlot","","A spill slot. This is a stack slot created by the register…",19,null],[13,"ExplicitSlot","","An explicit stack slot. This is a chunk of stack memory…",19,null],[13,"IncomingArg","","An incoming function argument.",19,null],[13,"OutgoingArg","","An outgoing function argument.",19,null],[13,"StructReturnSlot","","Space allocated in the caller's frame for the callee's…",19,null],[13,"EmergencySlot","","An emergency spill slot.",19,null],[0,"binemit","wasmtime_jit::trampoline","",null,null],[6,"CodeOffset","wasmtime_jit::trampoline::binemit","Offset in bytes from the beginning of the function.",null,null],[3,"NullStackmapSink","","Placeholder StackmapSink that does nothing.",null,null],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",20,[[["u32"],["sourceloc"],["trapcode"],["self"]]]],[3,"TrampolineRelocSink","","We don't expect trampoline compilation to produce any…",null,null],[17,"VERSION","wasmtime_jit","Version number of this crate.",null,null],[8,"Resolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve","","Resolve the given module/field combo.",21,[[["str"],["self"]],[["export"],["option",["export"]]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","wasmtime_jit::trampoline","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","wasmtime_jit::trampoline::ir","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"equivalent","","",15,[[["k"],["self"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["k"],["self"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","wasmtime_jit::trampoline::binemit","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"fmt","wasmtime_jit::trampoline::ir","",19,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"eq","","",15,[[["externalname"],["self"]],["bool"]]],[11,"ne","","",15,[[["externalname"],["self"]],["bool"]]],[11,"eq","","",26,[[["memflags"],["self"]],["bool"]]],[11,"ne","","",26,[[["memflags"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["stackslotdata"]],["bool"]]],[11,"ne","","",18,[[["self"],["stackslotdata"]],["bool"]]],[11,"eq","","",19,[[["self"],["stackslotkind"]],["bool"]]],[11,"default","","",15,[[],["externalname"]]],[11,"deserialize","","",19,[[["__d"]],[["stackslotkind"],["result",["stackslotkind"]]]]],[11,"deserialize","","",18,[[["__d"]],[["result",["stackslotdata"]],["stackslotdata"]]]],[11,"from_str","","",15,[[["str"]],[["externalname"],["result",["externalname"]]]]],[11,"from_str","","",19,[[["str"]],[["result",["stackslotkind"]],["stackslotkind"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"clone","","",19,[[["self"]],["stackslotkind"]]],[11,"clone","","",16,[[["self"]],["function"]]],[11,"clone","","",18,[[["self"]],["stackslotdata"]]],[11,"clone","","",26,[[["self"]],["memflags"]]],[11,"clone","","",15,[[["self"]],["externalname"]]],[11,"add_stackmap","wasmtime_jit::trampoline::binemit","",27,[[["self"],["u32"],["stackmap"]]]],[11,"fmt","wasmtime_jit::trampoline::ir","",15,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"source","wasmtime_jit","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"drop","","",22,[[["self"]]]],[11,"clone","","",22,[[["self"]],["instancehandle"]]],[11,"eq","","",22,[[["instancehandle"],["self"]],["bool"]]],[11,"ne","","",22,[[["instancehandle"],["self"]],["bool"]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"from","","",0,[[["linkerror"]],["instantiationerror"]]],[11,"resolve","","",12,[[["str"],["self"]],[["export"],["option",["export"]]]]],[11,"resolve","","",24,[[["str"],["self"]],[["export"],["option",["export"]]]]],[11,"drop","","",9,[[["self"]]]],[11,"from","","",2,[[["setuperror"]],["self"]]],[11,"from","","",6,[[["unknowninstance"]],["self"]]],[11,"from","","",6,[[["actionerror"]],["self"]]],[11,"from","","",7,[[["compileerror"]],["self"]]],[11,"from","","",7,[[["instantiationerror"]],["self"]]],[11,"from","","",7,[[["error"]],["self"]]],[11,"into","","",1,[[],["validatingparserconfig"]]],[11,"clone","","",4,[[["self"]],["runtimevalue"]]],[11,"clone","","",5,[[["self"]],["compilationstrategy"]]],[11,"clone","","",1,[[["self"]],["features"]]],[11,"default","","",1,[[],["features"]]],[11,"eq","","",4,[[["self"],["runtimevalue"]],["bool"]]],[11,"ne","","",4,[[["self"],["runtimevalue"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"source","","",2,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",7,[[["self"]],[["option",["error"]],["error"]]]],[11,"reloc_ebb","wasmtime_jit::trampoline::binemit","",28,[[["reloc"],["self"],["codeoffset"]]]],[11,"reloc_external","","",28,[[["reloc"],["addend"],["self"],["codeoffset"],["externalname"]]]],[11,"reloc_constant","","",28,[[["reloc"],["self"],["codeoffset"],["constantoffset"]]]],[11,"reloc_jt","","",28,[[["reloc"],["jumptable"],["self"],["codeoffset"]]]],[11,"new","wasmtime_jit","Create a new `InstanceHandle` pointing at a new `Instance`.",22,[[["module"],["box",["any"]],["boxedslice",["definedfuncindex"]],["signatureindex"],["option",["rc"]],["rc",["refcell"]],["boxedslice",["signatureindex","vmsharedsignatureindex"]],["vmsharedsignatureindex"],["rc",["gdbjitimageregistration"]],["imports"],["rc",["module"]],["any"],["definedfuncindex"],["refcell",["hashmap"]]],[["result",["instancehandle","instantiationerror"]],["instancehandle"],["instantiationerror"]]]],[11,"from_vmctx","","Create a new `InstanceHandle` pointing at the instance…",22,[[],["instancehandle"]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm code.",22,[[["self"]],["vmcontext"]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm…",22,[[["self"]]]],[11,"module","","Return a reference-counting pointer to a module.",22,[[["self"]],[["module"],["rc",["module"]]]]],[11,"module_ref","","Return a reference to a module.",22,[[["self"]],["module"]]],[11,"vmctx_mut","","Return a mutable reference to the vmctx used by compiled…",22,[[["self"]],["vmcontext"]]],[11,"vmctx_mut_ptr","","Return a mutable raw pointer to the vmctx used by compiled…",22,[[["self"]]]],[11,"lookup","","Lookup an export with the given name.",22,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"lookup_immutable","","Lookup an export with the given name.",22,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"lookup_by_declaration","","Lookup an export with the given export declaration.",22,[[["self"],["export"]],["export"]]],[11,"lookup_immutable_by_declaration","","Lookup an export with the given export declaration.",22,[[["self"],["export"]],["export"]]],[11,"exports","","Return an iterator over the exports of this instance.",22,[[["self"]],[["export"],["iter",["string","export"]],["string"]]]],[11,"host_state","","Return a reference to the custom state attached to this…",22,[[["self"]],["any"]]],[11,"memory_index","","Return the memory index for the given `VMMemoryDefinition`…",22,[[["vmmemorydefinition"],["self"]],["definedmemoryindex"]]],[11,"memory_grow","","Grow memory in this instance by the specified amount of…",22,[[["definedmemoryindex"],["self"],["u32"]],[["u32"],["option",["u32"]]]]],[11,"table_index","","Return the table index for the given `VMTableDefinition`…",22,[[["vmtabledefinition"],["self"]],["definedtableindex"]]],[11,"table_grow","","Grow table in this instance by the specified amount of…",22,[[["self"],["u32"],["definedtableindex"]],[["u32"],["option",["u32"]]]]],[11,"table_get","","Get table element reference.",22,[[["u32"],["self"],["definedtableindex"]],[["option",["vmcallercheckedanyfunc"]],["vmcallercheckedanyfunc"]]]],[11,"table_get_mut","","Get mutable table element reference.",22,[[["self"],["u32"],["definedtableindex"]],[["option",["vmcallercheckedanyfunc"]],["vmcallercheckedanyfunc"]]]],[11,"new","wasmtime_jit::trampoline","Allocate a new compilation context.",13,[[],["context"]]],[11,"for_function","","Allocate a new compilation context with an existing…",13,[[["function"]],["context"]]],[11,"clear","","Clear all data structures in this context.",13,[[["self"]]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a…",13,[[["trapsink"],["targetisa"],["vec"],["relocsink"],["stackmapsink"],["self"]],[["codeinfo"],["codegenerror"],["result",["codeinfo","codegenerror"]]]]],[11,"compile","","Compile the function.",13,[[["self"],["targetisa"]],[["codeinfo"],["codegenerror"],["result",["codeinfo","codegenerror"]]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",13,[[["trapsink"],["targetisa"],["relocsink"],["stackmapsink"],["self"]],["codeinfo"]]],[11,"emit_unwind_info","","Emit unwind information.",13,[[["targetisa"],["self"],["vec"]]]],[11,"verify","","Run the verifier on the function.",13,[[["foi"],["self"]],[["result",["verifiererrors"]],["verifiererrors"]]]],[11,"verify_if","","Run the verifier only if the `enable_verifier` setting is…",13,[[["foi"],["self"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"verify_locations","","Run the locations verifier on the function.",13,[[["targetisa"],["self"]],[["result",["verifiererrors"]],["verifiererrors"]]]],[11,"verify_locations_if","","Run the locations verifier only if the `enable_verifier`…",13,[[["targetisa"],["self"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"dce","","Perform dead-code elimination on the function.",13,[[["foi"],["self"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"legalize","","Run the legalizer for `isa` on the function.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"postopt","","Perform post-legalization rewrites on the function.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"compute_cfg","","Compute the control flow graph.",13,[[["self"]]]],[11,"compute_domtree","","Compute dominator tree.",13,[[["self"]]]],[11,"compute_loop_analysis","","Compute the loop analysis.",13,[[["self"]]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",13,[[["self"]]]],[11,"simple_gvn","","Perform simple GVN on the function.",13,[[["foi"],["self"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"licm","","Perform LICM on the function.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",13,[[["foi"],["self"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"regalloc","","Run the register allocator.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack…",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both…",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",13,[[["self"],["targetisa"]],[["result",["codegenerror"]],["codegenerror"]]]],[11,"relax_branches","","Run the branch relaxation pass and return information…",13,[[["self"],["targetisa"]],[["codeinfo"],["codegenerror"],["result",["codeinfo","codegenerror"]]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",13,[[["targetisa"],["self"]],[["hashmap",["valuelabel","vec","randomstate"]],["codegenerror"],["result",["hashmap","codegenerror"]]]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",14,[[["function"],["functionbuildercontext"]],["functionbuilder"]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",14,[[["self"],["sourceloc"]]]],[11,"create_ebb","","Creates a new `Ebb` and returns its reference.",14,[[["self"]],["ebb"]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",14,[[["self"],["ebb"]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",14,[[["self"],["ebb"]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all blocks in the function.",14,[[["self"]]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",14,[[["variable"],["self"],["type"]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",14,[[["variable"],["self"]],["value"]]],[11,"def_var","","Register a new definition of a user variable. The type of…",14,[[["variable"],["self"],["value"]]]],[11,"set_val_label","","Set label for Value",14,[[["value"],["self"],["valuelabel"]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",14,[[["jumptabledata"],["self"]],["jumptable"]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",14,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",14,[[["self"],["signature"]],["sigref"]]],[11,"import_function","","Declare an external function import.",14,[[["extfuncdata"],["self"]],["funcref"]]],[11,"create_global_value","","Declares a global value accessible to the function.",14,[[["self"],["globalvaluedata"]],["globalvalue"]]],[11,"create_heap","","Declares a heap accessible to the function.",14,[[["self"],["heapdata"]],["heap"]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",14,[[["self"]],["funcinstbuilder"]]],[11,"ensure_inserted_ebb","","Make sure that the current EBB is inserted in the layout.",14,[[["self"]]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",14,[[["self"]],["funccursor"]]],[11,"append_ebb_params_for_function_params","","Append parameters to the given `Ebb` corresponding to the…",14,[[["self"],["ebb"]]]],[11,"append_ebb_params_for_function_returns","","Append parameters to the given `Ebb` corresponding to the…",14,[[["self"],["ebb"]]]],[11,"finalize","","Declare that translation of the current function is…",14,[[["self"]]]],[11,"ebb_params","","Retrieves all the parameters for an `Ebb` currently…",14,[[["self"],["ebb"]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",14,[[["sigref"],["self"]],[["option",["signature"]],["signature"]]]],[11,"append_ebb_param","","Creates a parameter for a specific `Ebb` by appending it…",14,[[["self"],["type"],["ebb"]],["value"]]],[11,"inst_results","","Returns the result values of an instruction.",14,[[["inst"],["self"]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",14,[[["inst"],["self"],["ebb"]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Ebb` is sealed…",14,[[["self"]],["bool"]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",14,[[["self"]],["bool"]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",14,[[["self"]],["bool"]]],[11,"display","","Returns a displayable object for the function as it is.",14,[[["self"],["i"]],["displayfunction"]]],[11,"call_memcpy","","Calls libc.memcpy",14,[[["targetfrontendconfig"],["value"],["self"]]]],[11,"emit_small_memcpy","","Optimised memcpy for small copies.",14,[[["targetfrontendconfig"],["value"],["self"],["u64"],["u8"]]]],[11,"call_memset","","Calls libc.memset",14,[[["targetfrontendconfig"],["value"],["self"]]]],[11,"emit_small_memset","","Calls libc.memset",14,[[["targetfrontendconfig"],["value"],["self"],["u64"],["u8"]]]],[11,"call_memmove","","Calls libc.memmove",14,[[["targetfrontendconfig"],["value"],["self"]]]],[11,"emit_small_memmove","","Optimised memmove for small moves.",14,[[["targetfrontendconfig"],["value"],["self"],["u64"],["u8"]]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",25,[[],["functionbuildercontext"]]],[11,"testcase","wasmtime_jit::trampoline::ir","Creates a new external name from a sequence of bytes.…",15,[[["t"]],["externalname"]]],[11,"user","","Create a new external name from user-provided integer…",15,[[["u32"]],["externalname"]]],[11,"with_name_signature","","Create a function with the given name and signature.",16,[[["externalname"],["signature"]],["function"]]],[11,"clear","","Clear all data structures in this function.",16,[[["self"]]]],[11,"new","","Create a new empty, anonymous function with a Fast calling…",16,[[],["function"]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",16,[[["jumptabledata"],["self"]],["jumptable"]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",16,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",16,[[["self"],["signature"]],["sigref"]]],[11,"import_function","","Declare an external function import.",16,[[["extfuncdata"],["self"]],["funcref"]]],[11,"create_global_value","","Declares a global value accessible to the function.",16,[[["self"],["globalvaluedata"]],["globalvalue"]]],[11,"create_heap","","Declares a heap accessible to the function.",16,[[["self"],["heapdata"]],["heap"]]],[11,"create_table","","Declares a table accessible to the function.",16,[[["self"],["tabledata"]],["table"]]],[11,"display","","Return an object that can display this function with…",16,[[["i"],["self"]],["displayfunction"]]],[11,"display_with","","Return an object that can display this function with…",16,[[["self"],["displayfunctionannotations"]],["displayfunction"]]],[11,"special_param","","Find a presumed unique special-purpose function parameter…",16,[[["argumentpurpose"],["self"]],[["value"],["option",["value"]]]]],[11,"inst_offsets","","Get an iterator over the instructions in `ebb`, including…",16,[[["encinfo"],["self"],["ebb"]],["instoffsetiter"]]],[11,"update_encoding","","Wrapper around `encode` which assigns `inst` the resulting…",16,[[["inst"],["self"],["targetisa"]],["result"]]],[11,"encode","","Wrapper around `TargetIsa::encode` for encoding an…",16,[[["inst"],["targetisa"],["self"]],[["result",["encoding"]],["encoding"]]]],[11,"collect_debug_info","","Starts collection of debug information.",16,[[["self"]]]],[11,"change_branch_destination","","Changes the destination of a jump or branch instruction.…",16,[[["inst"],["self"],["ebb"]]]],[11,"is_ebb_basic","","Checks that the specified EBB can be encoded as a basic…",16,[[["self"],["ebb"]],["result"]]],[11,"is_leaf","","Returns true if the function is function that doesn't call…",16,[[["self"]],["bool"]]],[11,"new","","Create a new empty set of flags.",26,[[],["memflags"]]],[11,"trusted","","Create a set of flags representing an access from a…",26,[[],["memflags"]]],[11,"set_by_name","","Set a flag bit by name.",26,[[["str"],["self"]],["bool"]]],[11,"notrap","","Test if the `notrap` flag is set.",26,[[],["bool"]]],[11,"set_notrap","","Set the `notrap` flag.",26,[[["self"]]]],[11,"aligned","","Test if the `aligned` flag is set.",26,[[],["bool"]]],[11,"set_aligned","","Set the `aligned` flag.",26,[[["self"]]]],[11,"readonly","","Test if the `readonly` flag is set.",26,[[],["bool"]]],[11,"set_readonly","","Set the `readonly` flag.",26,[[["self"]]]],[11,"new","","Create a stack slot with the specified byte size.",18,[[["u32"],["stackslotkind"]],["stackslotdata"]]],[11,"alignment","","Get the alignment in bytes of this stack slot given the…",18,[[["u32"],["self"]],["u32"]]]],"p":[[4,"InstantiationError"],[3,"Features"],[4,"ActionError"],[4,"ActionOutcome"],[4,"RuntimeValue"],[4,"CompilationStrategy"],[4,"ContextError"],[4,"SetupError"],[3,"CodeMemory"],[3,"Compiler"],[3,"Context"],[3,"CompiledModule"],[3,"Namespace"],[3,"Context"],[3,"FunctionBuilder"],[4,"ExternalName"],[3,"Function"],[8,"InstBuilder"],[3,"StackSlotData"],[4,"StackSlotKind"],[8,"TrapSink"],[8,"Resolver"],[3,"InstanceHandle"],[3,"UnknownInstance"],[3,"NullResolver"],[3,"FunctionBuilderContext"],[3,"MemFlags"],[3,"NullStackmapSink"],[3,"TrampolineRelocSink"]]};
searchIndex["wasmtime_obj"] = {"doc":"Object-file writing library using the wasmtime environment.","i":[[5,"emit_module","wasmtime_obj","Emits a module that has been emitted with the…",null,[[["relocations"],["compilation"],["artifact"],["module"],["targetfrontendconfig"]],["result"]]],[17,"VERSION","","Version number of this crate.",null,null]],"p":[]};
searchIndex["wasmtime_runtime"] = {"doc":"Runtime library support for Wasmtime.","i":[[3,"Imports","wasmtime_runtime","Resolved import pointers.",null,null],[12,"dependencies","","The set of instances that the imports depend on.",0,null],[12,"functions","","Resolved addresses for imported functions.",0,null],[12,"tables","","Resolved addresses for imported tables.",0,null],[12,"memories","","Resolved addresses for imported memories.",0,null],[12,"globals","","Resolved addresses for imported globals.",0,null],[3,"InstanceHandle","","A handle holding an `Instance` of a WebAssembly module.",null,null],[3,"LinkError","","An link error while instantiating a module.",null,null],[12,"0","","",1,null],[3,"GdbJitImageRegistration","","Registeration for JIT image",null,null],[3,"Mmap","","A simple struct consisting of a page-aligned pointer to…",null,null],[3,"SignatureRegistry","","WebAssembly requires that the caller and callee signatures…",null,null],[3,"TrapRegistrationGuard","","RAII guard for deregistering traps",null,null],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \"anyfunc\" record, for caller-side…",null,null],[12,"func_ptr","","Function body.",2,null],[12,"type_index","","Function signature id.",2,null],[12,"vmctx","","Function `VMContext`.",2,null],[3,"VMContext","","The VM \"context\", which is pointed to by the `vmctx` arg…",null,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to…",null,null],[3,"VMFunctionImport","","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",3,null],[12,"vmctx","","A pointer to the `VMContext` that owns the function.",3,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the…",null,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported global variable description.",4,null],[3,"VMInvokeArgument","","The storage for a WebAssembly invocation argument",null,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","The start address.",5,null],[12,"current_length","","The current logical size of this linear memory in bytes.",5,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported memory description.",6,null],[12,"vmctx","","A pointer to the `VMContext` that owns the memory…",6,null],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for…",null,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","Pointer to the table data.",7,null],[12,"current_elements","","The current number of elements in the table.",7,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported table description.",8,null],[12,"vmctx","","A pointer to the `VMContext` that owns the table…",8,null],[4,"Export","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",9,null],[12,"address","wasmtime_runtime::Export","The address of the native-code function.",9,null],[12,"vmctx","","Pointer to the containing `VMContext`.",9,null],[12,"signature","","The function signature declaration, used for compatibilty…",9,null],[13,"Table","wasmtime_runtime","A table export value.",9,null],[12,"definition","wasmtime_runtime::Export","The address of the table descriptor.",9,null],[12,"vmctx","","Pointer to the containing `VMContext`.",9,null],[12,"table","","The table declaration, used for compatibilty checking.",9,null],[13,"Memory","wasmtime_runtime","A memory export value.",9,null],[12,"definition","wasmtime_runtime::Export","The address of the memory descriptor.",9,null],[12,"vmctx","","Pointer to the containing `VMContext`.",9,null],[12,"memory","","The memory declaration, used for compatibilty checking.",9,null],[13,"Global","wasmtime_runtime","A global export value.",9,null],[12,"definition","wasmtime_runtime::Export","The address of the global storage.",9,null],[12,"vmctx","","Pointer to the containing `VMContext`.",9,null],[12,"global","","The global declaration, used for compatibilty checking.",9,null],[4,"InstantiationError","wasmtime_runtime","An error while instantiating a module.",null,null],[13,"Resource","","Insufficient resources available for execution.",10,null],[13,"Link","","A wasm link error occured.",10,null],[13,"StartTrap","","A compilation error occured.",10,null],[5,"wasmtime_init_eager","","This function performs the low-overhead signal handler…",null,[[]]],[5,"wasmtime_init_finish","","Assuming `EnsureEagerProcessSignalHandlers` has already…",null,[[["vmcontext"]]]],[5,"get_mut_trap_registry","","Gets guarded writable reference to traps registry",null,[[],[["rwlockwriteguard",["trapregistry"]],["trapregistry"]]]],[5,"get_trap_registry","","Gets guarded readable reference to traps registry",null,[[],[["rwlockreadguard",["trapregistry"]],["trapregistry"]]]],[5,"wasmtime_call","","Call the wasm function pointed to by `callee`, which has…",null,[[],[["string"],["result",["string"]]]]],[5,"wasmtime_call_trampoline","","Call the wasm function pointed to by `callee`.…",null,[[],[["string"],["result",["string"]]]]],[11,"function","","Construct a function export value.",9,[[["signature"]],["self"]]],[11,"table","","Construct a table export value.",9,[[["tableplan"]],["self"]]],[11,"memory","","Construct a memory export value.",9,[[["memoryplan"]],["self"]]],[11,"global","","Construct a global export value.",9,[[["global"]],["self"]]],[11,"new","","Construct a new `Imports` instance.",0,[[["primarymap",["tableindex","vmtableimport"]],["globalindex"],["tableindex"],["vmglobalimport"],["vmmemoryimport"],["funcindex"],["primarymap",["globalindex","vmglobalimport"]],["instancehandle"],["memoryindex"],["primarymap",["funcindex","vmfunctionimport"]],["vmfunctionimport"],["vmtableimport"],["primarymap",["memoryindex","vmmemoryimport"]],["hashset",["instancehandle"]]],["self"]]],[11,"none","","Construct a new `Imports` instance with no imports.",0,[[],["self"]]],[11,"new","","Create a new `InstanceHandle` pointing at a new `Instance`.",11,[[["rc",["module"]],["definedfuncindex"],["signatureindex"],["boxedslice",["definedfuncindex"]],["imports"],["any"],["vmsharedsignatureindex"],["option",["rc"]],["rc",["gdbjitimageregistration"]],["box",["any"]],["module"],["rc",["refcell"]],["refcell",["hashmap"]],["boxedslice",["signatureindex","vmsharedsignatureindex"]]],[["result",["instantiationerror"]],["instantiationerror"]]]],[11,"from_vmctx","","Create a new `InstanceHandle` pointing at the instance…",11,[[],["self"]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm code.",11,[[["self"]],["vmcontext"]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm…",11,[[["self"]]]],[11,"module","","Return a reference-counting pointer to a module.",11,[[["self"]],[["rc",["module"]],["module"]]]],[11,"module_ref","","Return a reference to a module.",11,[[["self"]],["module"]]],[11,"vmctx_mut","","Return a mutable reference to the vmctx used by compiled…",11,[[["self"]],["vmcontext"]]],[11,"vmctx_mut_ptr","","Return a mutable raw pointer to the vmctx used by compiled…",11,[[["self"]]]],[11,"lookup","","Lookup an export with the given name.",11,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"lookup_immutable","","Lookup an export with the given name.",11,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"lookup_by_declaration","","Lookup an export with the given export declaration.",11,[[["export"],["self"]],["export"]]],[11,"lookup_immutable_by_declaration","","Lookup an export with the given export declaration.",11,[[["export"],["self"]],["export"]]],[11,"exports","","Return an iterator over the exports of this instance.",11,[[["self"]],[["string"],["export"],["iter",["string","export"]]]]],[11,"host_state","","Return a reference to the custom state attached to this…",11,[[["self"]],["any"]]],[11,"memory_index","","Return the memory index for the given `VMMemoryDefinition`…",11,[[["vmmemorydefinition"],["self"]],["definedmemoryindex"]]],[11,"memory_grow","","Grow memory in this instance by the specified amount of…",11,[[["self"],["definedmemoryindex"],["u32"]],[["option",["u32"]],["u32"]]]],[11,"table_index","","Return the table index for the given `VMTableDefinition`…",11,[[["self"],["vmtabledefinition"]],["definedtableindex"]]],[11,"table_grow","","Grow table in this instance by the specified amount of…",11,[[["definedtableindex"],["self"],["u32"]],[["option",["u32"]],["u32"]]]],[11,"table_get","","Get table element reference.",11,[[["definedtableindex"],["u32"],["self"]],[["option",["vmcallercheckedanyfunc"]],["vmcallercheckedanyfunc"]]]],[11,"table_get_mut","","Get mutable table element reference.",11,[[["definedtableindex"],["self"],["u32"]],[["option",["vmcallercheckedanyfunc"]],["vmcallercheckedanyfunc"]]]],[11,"register","","Registers JIT image using __jit_debug_register_code",12,[[["vec",["u8"]],["u8"]],["self"]]],[11,"file","","JIT image used in registration",12,[[["self"]]]],[11,"new","","Construct a new empty instance of `Mmap`.",13,[[],["self"]]],[11,"with_at_least","","Create a new `Mmap` pointing to at least `size` bytes of…",13,[[["usize"]],[["string"],["result",["string"]]]]],[11,"accessible_reserved","","Create a new `Mmap` pointing to `accessible_size` bytes of…",13,[[["usize"]],[["string"],["result",["string"]]]]],[11,"make_accessible","","Make the memory starting at `start` and extending for…",13,[[["self"],["usize"]],[["string"],["result",["string"]]]]],[11,"as_slice","","Return the allocated memory as a slice of u8.",13,[[["self"]]]],[11,"as_mut_slice","","Return the allocated memory as a mutable slice of u8.",13,[[["self"]]]],[11,"as_ptr","","Return the allocated memory as a pointer to u8.",13,[[["self"]]]],[11,"as_mut_ptr","","Return the allocated memory as a mutable pointer to u8.",13,[[["self"]]]],[11,"len","","Return the length of the allocated memory.",13,[[["self"]],["usize"]]],[11,"is_empty","","Return whether any memory has been allocated.",13,[[["self"]],["bool"]]],[11,"new","","Create a new `SignatureRegistry`.",14,[[],["self"]]],[11,"register","","Register a signature and return its unique index.",14,[[["self"],["signature"]],["vmsharedsignatureindex"]]],[11,"new","","Construct a `VMGlobalDefinition`.",15,[[],["self"]]],[11,"as_i32","","Return a reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_i32_mut","","Return a mutable reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_u32","","Return a reference to the value as a u32.",15,[[["self"]],["u32"]]],[11,"as_u32_mut","","Return a mutable reference to the value as an u32.",15,[[["self"]],["u32"]]],[11,"as_i64","","Return a reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_i64_mut","","Return a mutable reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_u64","","Return a reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_u64_mut","","Return a mutable reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_f32","","Return a reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_mut","","Return a mutable reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_bits","","Return a reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f32_bits_mut","","Return a mutable reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f64","","Return a reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_mut","","Return a mutable reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_bits","","Return a reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_f64_bits_mut","","Return a mutable reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_u128","","Return a reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_mut","","Return a mutable reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_bits","","Return a reference to the value as u128 bits.",15,[[["self"]]]],[11,"as_u128_bits_mut","","Return a mutable reference to the value as u128 bits.",15,[[["self"]]]],[11,"new","","Create a new `VMSharedSignatureIndex`.",16,[[["u32"]],["self"]]],[11,"new","","Create a new invocation argument filled with zeroes",17,[[],["self"]]],[11,"host_state","","Return a mutable reference to the host state associated…",18,[[["self"]],["any"]]],[11,"lookup_global_export","","Lookup an export in the global exports namespace. # Safety…",18,[[["str"],["self"]],[["export"],["option",["export"]]]]],[0,"libcalls","","Runtime library calls. Note that wasm compilers may…",null,null],[5,"wasmtime_f32_ceil","wasmtime_runtime::libcalls","Implementation of f32.ceil",null,[[["f32"]],["f32"]]],[5,"wasmtime_f32_floor","","Implementation of f32.floor",null,[[["f32"]],["f32"]]],[5,"wasmtime_f32_trunc","","Implementation of f32.trunc",null,[[["f32"]],["f32"]]],[5,"wasmtime_f32_nearest","","Implementation of f32.nearest",null,[[["f32"]],["f32"]]],[5,"wasmtime_f64_ceil","","Implementation of f64.ceil",null,[[["f64"]],["f64"]]],[5,"wasmtime_f64_floor","","Implementation of f64.floor",null,[[["f64"]],["f64"]]],[5,"wasmtime_f64_trunc","","Implementation of f64.trunc",null,[[["f64"]],["f64"]]],[5,"wasmtime_f64_nearest","","Implementation of f64.nearest",null,[[["f64"]],["f64"]]],[5,"wasmtime_memory32_grow","","Implementation of memory.grow for locally-defined 32-bit…",null,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_grow","","Implementation of memory.grow for imported 32-bit memories.",null,[[["u32"]],["u32"]]],[5,"wasmtime_memory32_size","","Implementation of memory.size for locally-defined 32-bit…",null,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_size","","Implementation of memory.size for imported 32-bit memories.",null,[[["u32"]],["u32"]]],[17,"VERSION","wasmtime_runtime","Version number of this crate.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","","",11,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","","",13,[[["self"]]]],[11,"drop","","",19,[[["self"]]]],[11,"from","","",10,[[["linkerror"]],["self"]]],[11,"clone","","",9,[[["self"]],["export"]]],[11,"clone","","",0,[[["self"]],["imports"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["vmfunctionimport"]]],[11,"clone","","",8,[[["self"]],["vmtableimport"]]],[11,"clone","","",6,[[["self"]],["vmmemoryimport"]]],[11,"clone","","",4,[[["self"]],["vmglobalimport"]]],[11,"clone","","",5,[[["self"]],["vmmemorydefinition"]]],[11,"clone","","",7,[[["self"]],["vmtabledefinition"]]],[11,"clone","","",15,[[["self"]],["vmglobaldefinition"]]],[11,"clone","","",16,[[["self"]],["vmsharedsignatureindex"]]],[11,"clone","","",2,[[["self"]],["vmcallercheckedanyfunc"]]],[11,"clone","","",17,[[["self"]],["vminvokeargument"]]],[11,"default","","",16,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"eq","","",11,[[["self"],["instancehandle"]],["bool"]]],[11,"ne","","",11,[[["self"],["instancehandle"]],["bool"]]],[11,"eq","","",16,[[["self"],["vmsharedsignatureindex"]],["bool"]]],[11,"ne","","",16,[[["self"],["vmsharedsignatureindex"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"source","","",10,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[3,"Imports"],[3,"LinkError"],[3,"VMCallerCheckedAnyfunc"],[3,"VMFunctionImport"],[3,"VMGlobalImport"],[3,"VMMemoryDefinition"],[3,"VMMemoryImport"],[3,"VMTableDefinition"],[3,"VMTableImport"],[4,"Export"],[4,"InstantiationError"],[3,"InstanceHandle"],[3,"GdbJitImageRegistration"],[3,"Mmap"],[3,"SignatureRegistry"],[3,"VMGlobalDefinition"],[3,"VMSharedSignatureIndex"],[3,"VMInvokeArgument"],[3,"VMContext"],[3,"TrapRegistrationGuard"],[3,"VMFunctionBody"]]};
searchIndex["wasmtime_rust"] = {"doc":"","i":[[23,"wasmtime","wasmtime_rust","",null,null]],"p":[]};
searchIndex["wasmtime_rust_macro"] = {"doc":"","i":[[23,"wasmtime","wasmtime_rust_macro","",null,null]],"p":[]};
searchIndex["wasmtime_wasi"] = {"doc":"","i":[[5,"create_wasi_instance","wasmtime_wasi","Creates `wasmtime::Instance` object implementing the…",null,[[["store"]],[["result",["instance","instantiationerror"]],["instance"],["instantiationerror"]]]],[5,"instantiate_wasi","","Return an instance implementing the \"wasi\" interface.",null,[[["refcell",["hashmap"]],["rc",["refcell"]]],[["instantiationerror"],["result",["instancehandle","instantiationerror"]],["instancehandle"]]]],[5,"instantiate_wasi_with_context","","Return an instance implementing the \"wasi\" interface.",null,[[["refcell",["hashmap"]],["rc",["refcell"]],["wasictx"]],[["instantiationerror"],["result",["instancehandle","instantiationerror"]],["instancehandle"]]]],[5,"is_wasi_module","","",null,[[["str"]],["bool"]]],[0,"old","","",null,null],[0,"snapshot_0","wasmtime_wasi::old","",null,null],[5,"create_wasi_instance","wasmtime_wasi::old::snapshot_0","Creates `wasmtime::Instance` object implementing the…",null,[[["store"]],[["result",["instance","instantiationerror"]],["instance"],["instantiationerror"]]]],[5,"instantiate_wasi","","Return an instance implementing the \"wasi\" interface.",null,[[["refcell",["hashmap"]],["rc",["refcell"]]],[["instantiationerror"],["result",["instancehandle","instantiationerror"]],["instancehandle"]]]],[5,"instantiate_wasi_with_context","","Return an instance implementing the \"wasi\" interface.",null,[[["wasictx"],["refcell",["hashmap"]],["rc",["refcell"]]],[["instantiationerror"],["result",["instancehandle","instantiationerror"]],["instancehandle"]]]],[5,"is_wasi_module","","",null,[[["str"]],["bool"]]]],"p":[]};
searchIndex["wasmtime_wast"] = {"doc":"Implementation of the WAST text format for wasmtime.","i":[[3,"WastContext","wasmtime_wast","The wast test script language allows modules to be defined…",null,null],[5,"instantiate_spectest","","Return an instance implementing the \"spectest\" interface…",null,[[["store"]],[["str"],["extern"],["hashmap",["str","extern"]]]]],[11,"new","","Construct a new instance of `WastContext`.",0,[[["store"]],["self"]]],[11,"register_spectest","","Register \"spectest\" which is used by the spec testsuite.",0,[[["self"]],["result"]]],[11,"run_buffer","","Run a wast script from a byte buffer.",0,[[["str"],["self"]],["result"]]],[11,"run_file","","Run a wast script from a file.",0,[[["self"],["path"]],["result"]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"WastContext"]]};
searchIndex["wig"] = {"doc":"","i":[[14,"witx_host_types","wig","",null,null],[14,"witx_wasi_types","","",null,null],[14,"witx_wasi32_types","","",null,null],[14,"define_add_wrappers_to_module","","A single-use macro in the `wasmtime-wasi` crate.",null,null]],"p":[]};
searchIndex["winx"] = {"doc":"","i":[],"p":[]};
searchIndex["witx"] = {"doc":"","i":[[3,"Document","witx","",null,null],[3,"EnumDatatype","","",null,null],[12,"repr","","",0,null],[12,"variants","","",0,null],[3,"EnumVariant","","",null,null],[12,"name","","",1,null],[12,"docs","","",1,null],[3,"FlagsDatatype","","",null,null],[12,"repr","","",2,null],[12,"flags","","",2,null],[3,"FlagsMember","","",null,null],[12,"name","","",3,null],[12,"docs","","",3,null],[3,"HandleDatatype","","",null,null],[12,"supertypes","","",4,null],[3,"Id","","",null,null],[3,"InterfaceFunc","","",null,null],[12,"name","","",5,null],[12,"params","","",5,null],[12,"results","","",5,null],[12,"docs","","",5,null],[3,"InterfaceFuncParam","","",null,null],[12,"name","","",6,null],[12,"tref","","",6,null],[12,"position","","",6,null],[12,"docs","","",6,null],[3,"Module","","",null,null],[12,"name","","",7,null],[12,"docs","","",7,null],[3,"ModuleImport","","",null,null],[12,"name","","",8,null],[12,"variant","","",8,null],[12,"docs","","",8,null],[3,"NamedType","","",null,null],[12,"name","","",9,null],[12,"dt","","",9,null],[12,"docs","","",9,null],[3,"StructDatatype","","",null,null],[12,"members","","",10,null],[3,"StructMember","","",null,null],[12,"name","","",11,null],[12,"tref","","",11,null],[12,"docs","","",11,null],[3,"UnionDatatype","","",null,null],[12,"variants","","",12,null],[3,"UnionVariant","","",null,null],[12,"name","","",13,null],[12,"tref","","",13,null],[12,"docs","","",13,null],[3,"CoreFuncType","","Describes the WebAssembly signature of a function",null,null],[12,"args","","",14,null],[12,"ret","","",14,null],[3,"CoreParamType","","A parameter in the WebAssembly type of a function.",null,null],[12,"param","","The interface function parameter to which this",15,null],[12,"signifies","","The relationship of the WebAssembly parameter to the…",15,null],[3,"Filesystem","","",null,null],[3,"MockFs","","",null,null],[3,"Location","","Location in the source text",null,null],[12,"path","","",16,null],[12,"line","","",16,null],[12,"column","","",16,null],[4,"BuiltinType","","",null,null],[13,"String","","",17,null],[13,"U8","","",17,null],[13,"U16","","",17,null],[13,"U32","","",17,null],[13,"U64","","",17,null],[13,"S8","","",17,null],[13,"S16","","",17,null],[13,"S32","","",17,null],[13,"S64","","",17,null],[13,"F32","","",17,null],[13,"F64","","",17,null],[4,"Definition","","",null,null],[13,"Typename","","",18,null],[13,"Module","","",18,null],[4,"Entry","","",null,null],[13,"Typename","","",19,null],[13,"Module","","",19,null],[4,"IntRepr","","",null,null],[13,"U8","","",20,null],[13,"U16","","",20,null],[13,"U32","","",20,null],[13,"U64","","",20,null],[4,"InterfaceFuncParamPosition","","",null,null],[13,"Param","","",21,null],[13,"Result","","",21,null],[4,"ModuleDefinition","","",null,null],[13,"Import","","",22,null],[13,"Func","","",22,null],[4,"ModuleEntry","","",null,null],[13,"Import","","",23,null],[13,"Func","","",23,null],[4,"ModuleImportVariant","","",null,null],[13,"Memory","","",24,null],[4,"Type","","",null,null],[13,"Enum","","",25,null],[13,"Flags","","",25,null],[13,"Struct","","",25,null],[13,"Union","","",25,null],[13,"Handle","","",25,null],[13,"Array","","",25,null],[13,"Pointer","","",25,null],[13,"ConstPointer","","",25,null],[13,"Builtin","","",25,null],[4,"TypeRef","","",null,null],[13,"Name","","",26,null],[13,"Value","","",26,null],[4,"AtomType","","Enumerates the types permitted for function arguments in…",null,null],[13,"I32","","",27,null],[13,"I64","","",27,null],[13,"F32","","",27,null],[13,"F64","","",27,null],[4,"CoreParamSignifies","","Enumerates the sort of relationship an WebAssembly…",null,null],[13,"Value","","Core type represents the value using an AtomType",28,null],[13,"PointerTo","","Core type represents a pointer into linear memory",28,null],[13,"LengthOf","","Core type represents a length of a region of linear memory",28,null],[4,"TypePassedBy","","Enumerates the strategies which may be used to pass a…",null,null],[13,"Value","","Pass by value specifies the AtomType used to represent…",29,null],[13,"Pointer","","Pass by a pointer into linear memory",29,null],[13,"PointerLengthPair","","Pass by a pointer and length pair, into linear memory",29,null],[4,"DeclSyntax","","",null,null],[13,"Typename","","",30,null],[13,"Module","","",30,null],[4,"SExpr","","",null,null],[13,"Vec","","",31,null],[13,"Word","","",31,null],[13,"Ident","","",31,null],[13,"Quote","","",31,null],[13,"Annot","","Short for Annotation",31,null],[13,"Docs","","Doc comment",31,null],[4,"ValidationError","","",null,null],[13,"UnknownName","","",32,null],[12,"name","witx::ValidationError","",32,null],[12,"location","","",32,null],[13,"NameAlreadyExists","witx","",32,null],[12,"name","witx::ValidationError","",32,null],[12,"at_location","","",32,null],[12,"previous_location","","",32,null],[13,"WrongKindName","witx","",32,null],[12,"name","witx::ValidationError","",32,null],[12,"location","","",32,null],[12,"expected","","",32,null],[12,"got","","",32,null],[13,"Recursive","witx","",32,null],[12,"name","witx::ValidationError","",32,null],[12,"location","","",32,null],[13,"InvalidRepr","witx","",32,null],[12,"repr","witx::ValidationError","",32,null],[12,"location","","",32,null],[13,"InvalidFirstResultType","witx","",32,null],[12,"location","witx::ValidationError","",32,null],[4,"WitxError","witx","",null,null],[13,"Io","","",33,null],[13,"Parse","","",33,null],[13,"Validation","","",33,null],[5,"load","","Load a witx document from the filesystem",null,[[],[["witxerror"],["result",["document","witxerror"]],["document"]]]],[5,"parse","","Parse a witx document from a str. `(use ...)` directives…",null,[[["str"]],[["witxerror"],["result",["document","witxerror"]],["document"]]]],[11,"new","","",34,[[["str"],["asref",["str"]]],["self"]]],[11,"as_str","","",34,[[["self"]],["str"]]],[11,"typename","","",35,[[["self"],["id"]],[["rc",["namedtype"]],["option",["rc"]]]]],[11,"typenames","","",35,[[["self"]]]],[11,"module","","",35,[[["self"],["id"]],[["rc",["module"]],["option",["rc"]]]]],[11,"modules","","",35,[[["self"]]]],[11,"kind","","",19,[[["self"]],["str"]]],[11,"type_","","",26,[[["self"]],[["rc",["type"]],["type"]]]],[11,"type_","","",9,[[["self"]],[["rc",["type"]],["type"]]]],[11,"kind","","",25,[[["self"]],["str"]]],[11,"import","","",7,[[["self"],["id"]],[["option",["rc"]],["rc",["moduleimport"]]]]],[11,"imports","","",7,[[["self"]]]],[11,"func","","",7,[[["self"],["id"]],[["rc",["interfacefunc"]],["option",["rc"]]]]],[11,"funcs","","",7,[[["self"]]]],[11,"passed_by","","Determine the simplest strategy by which a type may be…",25,[[["self"]],["typepassedby"]]],[11,"repr","","Representation of the WebAssembly parameter. This is the…",15,[[["self"]],["atomtype"]]],[11,"repr","","Representation of the WebAssembly parameter.",28,[[["self"]],["atomtype"]]],[11,"pass_by_value","","Gives the WebAssembly type that corresponds to passing…",6,[[["self"]],[["option",["coreparamtype"]],["coreparamtype"]]]],[11,"pass_by_reference","","Gives the WebAssembly types that correspond to passing…",6,[[["self"]],[["vec",["coreparamtype"]],["coreparamtype"]]]],[11,"core_type","","Get the WebAssembly type signature for this interface…",5,[[["self"]],["corefunctype"]]],[11,"new","","",36,[[],["self"]]],[11,"report_with","","",32,[[["witxio"],["self"]],["string"]]],[11,"report","","",32,[[["self"]],["string"]]],[8,"Documentation","","",null,null],[10,"to_md","","",37,[[["self"]],["string"]]],[8,"WitxIo","","",null,null],[10,"fgets","","Read the entire file into a String. Used to resolve `use`…",38,[[["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[10,"fget_line","","Read a line of a file into a String. Used for error…",38,[[["usize"],["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[10,"canonicalize","","Return the canonical (non-symlinked) path of a file. Used…",38,[[["self"],["path"]],[["pathbuf"],["result",["pathbuf","witxerror"]],["witxerror"]]]],[11,"report_with","","",33,[[["witxio"],["self"]],["string"]]],[11,"report","","",33,[[["self"]],["string"]]],[11,"highlight_source_with","","",16,[[["witxio"],["self"]],["string"]]],[11,"highlight_source","","",16,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_md","","",35,[[["self"]],["string"]]],[11,"to_md","","",9,[[["self"]],["string"]]],[11,"to_md","","",0,[[["self"]],["string"]]],[11,"to_md","","",2,[[["self"]],["string"]]],[11,"to_md","","",10,[[["self"]],["string"]]],[11,"to_md","","",12,[[["self"]],["string"]]],[11,"to_md","","",4,[[["self"]],["string"]]],[11,"to_md","","",7,[[["self"]],["string"]]],[11,"to_md","","",8,[[["self"]],["string"]]],[11,"to_md","","",5,[[["self"]],["string"]]],[11,"fgets","","",39,[[["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[11,"fget_line","","",39,[[["usize"],["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[11,"canonicalize","","",39,[[["self"],["path"]],[["pathbuf"],["result",["pathbuf","witxerror"]],["witxerror"]]]],[11,"fgets","","",36,[[["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[11,"fget_line","","",36,[[["usize"],["self"],["path"]],[["string"],["result",["string","witxerror"]],["witxerror"]]]],[11,"canonicalize","","",36,[[["self"],["path"]],[["pathbuf"],["result",["pathbuf","witxerror"]],["witxerror"]]]],[11,"from","","",27,[[["intrepr"]],["atomtype"]]],[11,"from","","",33,[[["error"]],["self"]]],[11,"from","","",33,[[["validationerror"]],["self"]]],[11,"clone","","",34,[[["self"]],["id"]]],[11,"clone","","",35,[[["self"]],["document"]]],[11,"clone","","",18,[[["self"]],["definition"]]],[11,"clone","","",19,[[["self"]],["entry"]]],[11,"clone","","",26,[[["self"]],["typeref"]]],[11,"clone","","",9,[[["self"]],["namedtype"]]],[11,"clone","","",25,[[["self"]],["type"]]],[11,"clone","","",20,[[["self"]],["intrepr"]]],[11,"clone","","",0,[[["self"]],["enumdatatype"]]],[11,"clone","","",1,[[["self"]],["enumvariant"]]],[11,"clone","","",2,[[["self"]],["flagsdatatype"]]],[11,"clone","","",3,[[["self"]],["flagsmember"]]],[11,"clone","","",10,[[["self"]],["structdatatype"]]],[11,"clone","","",11,[[["self"]],["structmember"]]],[11,"clone","","",12,[[["self"]],["uniondatatype"]]],[11,"clone","","",13,[[["self"]],["unionvariant"]]],[11,"clone","","",4,[[["self"]],["handledatatype"]]],[11,"clone","","",7,[[["self"]],["module"]]],[11,"clone","","",22,[[["self"]],["moduledefinition"]]],[11,"clone","","",23,[[["self"]],["moduleentry"]]],[11,"clone","","",8,[[["self"]],["moduleimport"]]],[11,"clone","","",24,[[["self"]],["moduleimportvariant"]]],[11,"clone","","",5,[[["self"]],["interfacefunc"]]],[11,"clone","","",6,[[["self"]],["interfacefuncparam"]]],[11,"clone","","",21,[[["self"]],["interfacefuncparamposition"]]],[11,"clone","","",27,[[["self"]],["atomtype"]]],[11,"clone","","",29,[[["self"]],["typepassedby"]]],[11,"clone","","",15,[[["self"]],["coreparamtype"]]],[11,"clone","","",28,[[["self"]],["coreparamsignifies"]]],[11,"clone","","",14,[[["self"]],["corefunctype"]]],[11,"clone","","",17,[[["self"]],["builtintype"]]],[11,"clone","","",30,[[["self"]],["declsyntax"]]],[11,"clone","","",31,[[["self"]],["sexpr"]]],[11,"clone","","",16,[[["self"]],["location"]]],[11,"eq","","",34,[[["self"],["id"]],["bool"]]],[11,"ne","","",34,[[["self"],["id"]],["bool"]]],[11,"eq","","",35,[[["document"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["entry"]],["bool"]]],[11,"eq","","",26,[[["typeref"],["self"]],["bool"]]],[11,"ne","","",26,[[["typeref"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["namedtype"]],["bool"]]],[11,"ne","","",9,[[["self"],["namedtype"]],["bool"]]],[11,"eq","","",25,[[["type"],["self"]],["bool"]]],[11,"ne","","",25,[[["type"],["self"]],["bool"]]],[11,"eq","","",20,[[["intrepr"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["enumdatatype"]],["bool"]]],[11,"ne","","",0,[[["self"],["enumdatatype"]],["bool"]]],[11,"eq","","",1,[[["self"],["enumvariant"]],["bool"]]],[11,"ne","","",1,[[["self"],["enumvariant"]],["bool"]]],[11,"eq","","",2,[[["self"],["flagsdatatype"]],["bool"]]],[11,"ne","","",2,[[["self"],["flagsdatatype"]],["bool"]]],[11,"eq","","",3,[[["flagsmember"],["self"]],["bool"]]],[11,"ne","","",3,[[["flagsmember"],["self"]],["bool"]]],[11,"eq","","",10,[[["structdatatype"],["self"]],["bool"]]],[11,"ne","","",10,[[["structdatatype"],["self"]],["bool"]]],[11,"eq","","",11,[[["structmember"],["self"]],["bool"]]],[11,"ne","","",11,[[["structmember"],["self"]],["bool"]]],[11,"eq","","",12,[[["uniondatatype"],["self"]],["bool"]]],[11,"ne","","",12,[[["uniondatatype"],["self"]],["bool"]]],[11,"eq","","",13,[[["unionvariant"],["self"]],["bool"]]],[11,"ne","","",13,[[["unionvariant"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["handledatatype"]],["bool"]]],[11,"ne","","",4,[[["self"],["handledatatype"]],["bool"]]],[11,"eq","","",7,[[["self"],["module"]],["bool"]]],[11,"eq","","",23,[[["moduleentry"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["moduleimport"]],["bool"]]],[11,"ne","","",8,[[["self"],["moduleimport"]],["bool"]]],[11,"eq","","",24,[[["moduleimportvariant"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["interfacefunc"]],["bool"]]],[11,"ne","","",5,[[["self"],["interfacefunc"]],["bool"]]],[11,"eq","","",6,[[["interfacefuncparam"],["self"]],["bool"]]],[11,"ne","","",6,[[["interfacefuncparam"],["self"]],["bool"]]],[11,"eq","","",21,[[["interfacefuncparamposition"],["self"]],["bool"]]],[11,"ne","","",21,[[["interfacefuncparamposition"],["self"]],["bool"]]],[11,"eq","","",27,[[["atomtype"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["typepassedby"]],["bool"]]],[11,"ne","","",29,[[["self"],["typepassedby"]],["bool"]]],[11,"eq","","",15,[[["self"],["coreparamtype"]],["bool"]]],[11,"ne","","",15,[[["self"],["coreparamtype"]],["bool"]]],[11,"eq","","",28,[[["self"],["coreparamsignifies"]],["bool"]]],[11,"ne","","",28,[[["self"],["coreparamsignifies"]],["bool"]]],[11,"eq","","",14,[[["self"],["corefunctype"]],["bool"]]],[11,"ne","","",14,[[["self"],["corefunctype"]],["bool"]]],[11,"eq","","",17,[[["self"],["builtintype"]],["bool"]]],[11,"eq","","",30,[[["declsyntax"],["self"]],["bool"]]],[11,"ne","","",30,[[["declsyntax"],["self"]],["bool"]]],[11,"eq","","",31,[[["sexpr"],["self"]],["bool"]]],[11,"ne","","",31,[[["sexpr"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["location"]],["bool"]]],[11,"ne","","",16,[[["self"],["location"]],["bool"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"source","","",33,[[["self"]],[["option",["error"]],["error"]]]],[11,"parse","","",17,[[["parser"]],["result"]]],[11,"parse","","",30,[[["parser"]],["result"]]],[11,"peek","","",17,[[["cursor"]],["bool"]]],[11,"display","","",17,[[],["str"]]]],"p":[[3,"EnumDatatype"],[3,"EnumVariant"],[3,"FlagsDatatype"],[3,"FlagsMember"],[3,"HandleDatatype"],[3,"InterfaceFunc"],[3,"InterfaceFuncParam"],[3,"Module"],[3,"ModuleImport"],[3,"NamedType"],[3,"StructDatatype"],[3,"StructMember"],[3,"UnionDatatype"],[3,"UnionVariant"],[3,"CoreFuncType"],[3,"CoreParamType"],[3,"Location"],[4,"BuiltinType"],[4,"Definition"],[4,"Entry"],[4,"IntRepr"],[4,"InterfaceFuncParamPosition"],[4,"ModuleDefinition"],[4,"ModuleEntry"],[4,"ModuleImportVariant"],[4,"Type"],[4,"TypeRef"],[4,"AtomType"],[4,"CoreParamSignifies"],[4,"TypePassedBy"],[4,"DeclSyntax"],[4,"SExpr"],[4,"ValidationError"],[4,"WitxError"],[3,"Id"],[3,"Document"],[3,"MockFs"],[8,"Documentation"],[8,"WitxIo"],[3,"Filesystem"]]};
searchIndex["yanix"] = {"doc":"`yanix` stands for Yet Another Nix crate, and, well, it is…","i":[[4,"Errno","yanix","",null,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ENOLINK","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"EILSEQ","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EDQUOT","","",0,null],[13,"ECANCELED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[4,"YanixError","","",null,null],[13,"Errno","","",1,null],[13,"NulError","","",1,null],[13,"TryFromIntError","","",1,null],[0,"clock","","",null,null],[4,"ClockId","yanix::clock","",null,null],[13,"Realtime","","",2,null],[13,"Monotonic","","",2,null],[13,"ProcessCPUTime","","",2,null],[13,"ThreadCPUTime","","",2,null],[5,"clock_getres","","",null,[[["clockid"]],[["result",["timespec"]],["timespec"]]]],[5,"clock_gettime","","",null,[[["clockid"]],[["result",["timespec"]],["timespec"]]]],[11,"as_raw","","",2,[[["self"]],["clockid_t"]]],[0,"dir","yanix","",null,null],[3,"Dir","yanix::dir","",null,null],[3,"Entry","","",null,null],[3,"SeekLoc","","",null,null],[3,"DirIter","","",null,null],[4,"FileType","","",null,null],[13,"CharacterDevice","","",3,null],[13,"Directory","","",3,null],[13,"BlockDevice","","",3,null],[13,"RegularFile","","",3,null],[13,"Symlink","","",3,null],[13,"Fifo","","",3,null],[13,"Socket","","",3,null],[13,"Unknown","","",3,null],[8,"EntryExt","","",null,null],[10,"ino","","",4,[[["self"]],["u64"]]],[10,"seek_loc","","",4,[[["self"]],[["result",["seekloc"]],["seekloc"]]]],[11,"from","","Takes the ownership of the passed-in descriptor-based…",5,[[["intorawfd"]],["result"]]],[11,"seek","","Set the position of the directory stream, see `seekdir(3)`.",5,[[["self"],["seekloc"]]]],[11,"rewind","","Reset directory stream, see `rewinddir(3)`.",5,[[["self"]]]],[11,"tell","","Get the current position in the directory stream.",5,[[["self"]],["seekloc"]]],[11,"file_name","","Returns the file name of this directory entry.",6,[[["self"]],["cstr"]]],[11,"file_type","","Returns the type of this directory entry.",6,[[["self"]],["filetype"]]],[11,"to_raw","","",7,[[["self"]],["i64"]]],[11,"from_raw","","",3,[[["u8"]],["self"]]],[11,"to_raw","","",3,[[["self"]],["u8"]]],[11,"new","","",8,[[["t"]],["self"]]],[0,"fcntl","yanix","",null,null],[5,"dup_fd","yanix::fcntl","",null,[[["rawfd"],["bool"]],[["rawfd"],["result",["rawfd"]]]]],[5,"get_fd_flags","","",null,[[["rawfd"]],[["fdflag"],["result",["fdflag"]]]]],[5,"set_fd_flags","","",null,[[["rawfd"],["fdflag"]],["result"]]],[5,"get_status_flags","","",null,[[["rawfd"]],[["result",["oflag"]],["oflag"]]]],[5,"set_status_flags","","",null,[[["rawfd"],["oflag"]],["result"]]],[0,"file","yanix","",null,null],[3,"FdFlag","yanix::file","",null,null],[3,"AtFlag","","",null,null],[3,"Mode","","",null,null],[3,"OFlag","","",null,null],[3,"SFlag","","",null,null],[5,"isatty","","",null,[[["rawfd"]],[["result",["bool"]],["bool"]]]],[5,"openat","","",null,[[["rawfd"],["mode"],["oflag"],["asref",["osstr"]],["osstr"]],[["rawfd"],["result",["rawfd"]]]]],[5,"readlinkat","","",null,[[["rawfd"],["asref",["osstr"]],["osstr"]],[["osstring"],["result",["osstring"]]]]],[5,"mkdirat","","",null,[[["rawfd"],["mode"],["asref",["osstr"]],["osstr"]],["result"]]],[5,"linkat","","",null,[[["rawfd"],["atflag"],["asref",["osstr"]],["osstr"]],["result"]]],[5,"unlinkat","","",null,[[["rawfd"],["atflag"],["asref",["osstr"]],["osstr"]],["result"]]],[5,"renameat","","",null,[[["rawfd"],["asref",["osstr"]],["osstr"]],["result"]]],[5,"symlinkat","","",null,[[["rawfd"],["asref",["osstr"]],["osstr"]],["result"]]],[5,"fstatat","","",null,[[["rawfd"],["atflag"],["asref",["osstr"]],["osstr"]],[["stat"],["result",["stat"]]]]],[5,"fionread","","`fionread()` function, equivalent to `ioctl(fd, FIONREAD,…",null,[[["rawfd"]],[["usize"],["result",["usize"]]]]],[18,"CLOEXEC","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",9,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int"]],[["option",["fdflag"]],["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int"]],["fdflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["fdflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["fdflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["self"],["fdflag"],["bool"]]]],[18,"REMOVEDIR","","",10,null],[18,"SYMLINK_FOLLOW","","",10,null],[18,"SYMLINK_NOFOLLOW","","",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["atflag"]]],[11,"all","","Returns the set containing all flags.",10,[[],["atflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[["c_int"]],[["option",["atflag"]],["atflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[["c_int"]],["atflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["c_int"]],["atflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["self"],["atflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["self"],["atflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["atflag"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["atflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["atflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["bool"],["self"],["atflag"]]]],[18,"IRWXU","","",11,null],[18,"IRUSR","","",11,null],[18,"IWUSR","","",11,null],[18,"IXUSR","","",11,null],[18,"IRWXG","","",11,null],[18,"IRGRP","","",11,null],[18,"IWGRP","","",11,null],[18,"IXGRP","","",11,null],[18,"IRWXO","","",11,null],[18,"IROTH","","",11,null],[18,"IWOTH","","",11,null],[18,"IXOTH","","",11,null],[18,"ISUID","","",11,null],[18,"ISGID","","",11,null],[18,"ISVTX","","",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",11,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[["mode_t"]],[["mode"],["option",["mode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[["mode_t"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["mode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["mode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["mode"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["mode"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["mode"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["mode"],["self"],["bool"]]]],[18,"ACCMODE","","",12,null],[18,"APPEND","","",12,null],[18,"CREAT","","",12,null],[18,"DIRECTORY","","",12,null],[18,"DSYNC","","",12,null],[18,"EXCL","","",12,null],[18,"FSYNC","","",12,null],[18,"NOFOLLOW","","",12,null],[18,"NONBLOCK","","",12,null],[18,"RDONLY","","",12,null],[18,"WRONLY","","",12,null],[18,"RDWR","","",12,null],[18,"RSYNC","","",12,null],[18,"SYNC","","",12,null],[18,"TRUNC","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",12,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_int"]],[["option",["oflag"]],["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_int"]],["oflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["oflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["oflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["self"],["oflag"],["bool"]]]],[18,"IFIFO","","",13,null],[18,"IFCHR","","",13,null],[18,"IFDIR","","",13,null],[18,"IFBLK","","",13,null],[18,"IFREG","","",13,null],[18,"IFLNK","","",13,null],[18,"IFSOCK","","",13,null],[18,"IFMT","","",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",13,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["mode_t"]],[["option",["sflag"]],["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["mode_t"]],["sflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["sflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["sflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["sflag"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["sflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["sflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["self"],["sflag"],["bool"]]]],[0,"poll","yanix","",null,null],[3,"PollFlags","yanix::poll","",null,null],[3,"PollFd","","",null,null],[5,"poll","","",null,[[["c_int"]],[["usize"],["result",["usize"]]]]],[18,"POLLIN","","",14,null],[18,"POLLPRI","","",14,null],[18,"POLLOUT","","",14,null],[18,"POLLRDNORM","","",14,null],[18,"POLLWRNORM","","",14,null],[18,"POLLRDBAND","","",14,null],[18,"POLLWRBAND","","",14,null],[18,"POLLERR","","",14,null],[18,"POLLHUP","","",14,null],[18,"POLLNVAL","","",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["pollflags"]]],[11,"all","","Returns the set containing all flags.",14,[[],["pollflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[["c_short"]],[["option",["pollflags"]],["pollflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[["c_short"]],["pollflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[["c_short"]],["pollflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["pollflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["pollflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["self"],["pollflags"],["bool"]]]],[11,"new","","",15,[[["rawfd"],["pollflags"]],["self"]]],[11,"revents","","",15,[[],[["option",["pollflags"]],["pollflags"]]]],[0,"socket","yanix","",null,null],[4,"SockType","yanix::socket","",null,null],[13,"Stream","","",16,null],[13,"Datagram","","",16,null],[13,"SeqPacket","","",16,null],[13,"Raw","","",16,null],[13,"Rdm","","",16,null],[5,"get_socket_type","","",null,[[["rawfd"]],[["socktype"],["result",["socktype"]]]]],[11,"from_i32","yanix","",0,[[["i32"]],["self"]]],[11,"last","","",0,[[],["self"]]],[11,"from_success_code","","",0,[[["iszero"]],["result"]]],[11,"from_result","","",0,[[["isminusone"]],[["result"],["isminusone"]]]],[11,"from_raw","yanix::dir","",7,[[["i64"]],["result"]]],[0,"fadvise","yanix","",null,null],[4,"PosixFadviseAdvice","yanix::fadvise","",null,null],[13,"Normal","","",17,null],[13,"Sequential","","",17,null],[13,"Random","","",17,null],[13,"NoReuse","","",17,null],[13,"WillNeed","","",17,null],[13,"DontNeed","","",17,null],[5,"posix_fadvise","","",null,[[["rawfd"],["posixfadviseadvice"],["off_t"]],["result"]]],[6,"Result","yanix","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","yanix::clock","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","yanix::dir","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","yanix::file","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","yanix::poll","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","yanix::socket","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","yanix::fadvise","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"ino","yanix::dir","",6,[[["self"]],["u64"]]],[11,"seek_loc","","",6,[[["self"]],[["result",["seekloc"]],["seekloc"]]]],[11,"drop","","",5,[[["self"]]]],[11,"from","yanix","",1,[[["errno"]],["self"]]],[11,"from","","",1,[[["nulerror"]],["self"]]],[11,"from","","",1,[[["tryfrominterror"]],["self"]]],[11,"extend","yanix::file","",9,[[["self"],["intoiterator"]]]],[11,"extend","","",10,[[["self"],["intoiterator"]]]],[11,"extend","","",11,[[["self"],["intoiterator"]]]],[11,"extend","","",12,[[["self"],["intoiterator"]]]],[11,"extend","","",13,[[["self"],["intoiterator"]]]],[11,"extend","yanix::poll","",14,[[["self"],["intoiterator"]]]],[11,"next","yanix::dir","",8,[[["self"]],["option"]]],[11,"clone","yanix::clock","",2,[[["self"]],["clockid"]]],[11,"clone","yanix::dir","",5,[[["self"]],["dir"]]],[11,"clone","","",6,[[["self"]],["entry"]]],[11,"clone","","",7,[[["self"]],["seekloc"]]],[11,"clone","","",3,[[["self"]],["filetype"]]],[11,"clone","yanix::file","",9,[[["self"]],["fdflag"]]],[11,"clone","","",10,[[["self"]],["atflag"]]],[11,"clone","","",11,[[["self"]],["mode"]]],[11,"clone","","",12,[[["self"]],["oflag"]]],[11,"clone","","",13,[[["self"]],["sflag"]]],[11,"clone","yanix::poll","",14,[[["self"]],["pollflags"]]],[11,"clone","","",15,[[["self"]],["pollfd"]]],[11,"clone","yanix::socket","",16,[[["self"]],["socktype"]]],[11,"clone","yanix","",0,[[["self"]],["errno"]]],[11,"clone","yanix::fadvise","",17,[[["self"]],["posixfadviseadvice"]]],[11,"cmp","yanix::file","",9,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","","",10,[[["atflag"],["self"]],["ordering"]]],[11,"cmp","","",11,[[["mode"],["self"]],["ordering"]]],[11,"cmp","","",12,[[["oflag"],["self"]],["ordering"]]],[11,"cmp","","",13,[[["sflag"],["self"]],["ordering"]]],[11,"cmp","yanix::poll","",14,[[["self"],["pollflags"]],["ordering"]]],[11,"eq","yanix::dir","",5,[[["dir"],["self"]],["bool"]]],[11,"ne","","",5,[[["dir"],["self"]],["bool"]]],[11,"eq","yanix::file","",9,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",9,[[["self"],["fdflag"]],["bool"]]],[11,"eq","","",10,[[["atflag"],["self"]],["bool"]]],[11,"ne","","",10,[[["atflag"],["self"]],["bool"]]],[11,"eq","","",11,[[["mode"],["self"]],["bool"]]],[11,"ne","","",11,[[["mode"],["self"]],["bool"]]],[11,"eq","","",12,[[["oflag"],["self"]],["bool"]]],[11,"ne","","",12,[[["oflag"],["self"]],["bool"]]],[11,"eq","","",13,[[["sflag"],["self"]],["bool"]]],[11,"ne","","",13,[[["sflag"],["self"]],["bool"]]],[11,"eq","yanix::poll","",14,[[["self"],["pollflags"]],["bool"]]],[11,"ne","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"eq","","",15,[[["pollfd"],["self"]],["bool"]]],[11,"ne","","",15,[[["pollfd"],["self"]],["bool"]]],[11,"eq","yanix","",0,[[["self"],["errno"]],["bool"]]],[11,"partial_cmp","yanix::file","",9,[[["self"],["fdflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",9,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",9,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",9,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","","",10,[[["atflag"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["atflag"],["self"]],["bool"]]],[11,"le","","",10,[[["atflag"],["self"]],["bool"]]],[11,"gt","","",10,[[["atflag"],["self"]],["bool"]]],[11,"ge","","",10,[[["atflag"],["self"]],["bool"]]],[11,"partial_cmp","","",11,[[["mode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",11,[[["mode"],["self"]],["bool"]]],[11,"le","","",11,[[["mode"],["self"]],["bool"]]],[11,"gt","","",11,[[["mode"],["self"]],["bool"]]],[11,"ge","","",11,[[["mode"],["self"]],["bool"]]],[11,"partial_cmp","","",12,[[["oflag"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",12,[[["oflag"],["self"]],["bool"]]],[11,"le","","",12,[[["oflag"],["self"]],["bool"]]],[11,"gt","","",12,[[["oflag"],["self"]],["bool"]]],[11,"ge","","",12,[[["oflag"],["self"]],["bool"]]],[11,"partial_cmp","","",13,[[["sflag"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",13,[[["sflag"],["self"]],["bool"]]],[11,"le","","",13,[[["sflag"],["self"]],["bool"]]],[11,"gt","","",13,[[["sflag"],["self"]],["bool"]]],[11,"ge","","",13,[[["sflag"],["self"]],["bool"]]],[11,"partial_cmp","yanix::poll","",14,[[["self"],["pollflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"le","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"gt","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"ge","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"fmt","yanix::clock","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::dir","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::file","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::socket","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::fadvise","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"sub","yanix::file","Returns the set difference of the two sets of flags.",9,[[["fdflag"]],["fdflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["atflag"]],["atflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["mode"]],["mode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["oflag"]],["oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["sflag"]],["sflag"]]],[11,"sub","yanix::poll","Returns the set difference of the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"sub_assign","yanix::file","Disables all flags enabled in the set.",9,[[["self"],["fdflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["atflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["mode"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["self"],["oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["self"],["sflag"]]]],[11,"sub_assign","yanix::poll","Disables all flags enabled in the set.",14,[[["self"],["pollflags"]]]],[11,"not","yanix::file","Returns the complement of this set of flags.",9,[[],["fdflag"]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["atflag"]]],[11,"not","","Returns the complement of this set of flags.",11,[[],["mode"]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["oflag"]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["sflag"]]],[11,"not","yanix::poll","Returns the complement of this set of flags.",14,[[],["pollflags"]]],[11,"bitand","yanix::file","Returns the intersection between the two sets of flags.",9,[[["fdflag"]],["fdflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["atflag"]],["atflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["mode"]],["mode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["oflag"]],["oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["sflag"]],["sflag"]]],[11,"bitand","yanix::poll","Returns the intersection between the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"bitor","yanix::file","Returns the union of the two sets of flags.",9,[[["fdflag"]],["fdflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["atflag"]],["atflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["mode"]],["mode"]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["oflag"]],["oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["sflag"]],["sflag"]]],[11,"bitor","yanix::poll","Returns the union of the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"bitxor","yanix::file","Returns the left flags, but with all the right flags…",9,[[["fdflag"]],["fdflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["atflag"]],["atflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",11,[[["mode"]],["mode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["oflag"]],["oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["sflag"]],["sflag"]]],[11,"bitxor","yanix::poll","Returns the left flags, but with all the right flags…",14,[[["pollflags"]],["pollflags"]]],[11,"bitand_assign","yanix::file","Disables all flags disabled in the set.",9,[[["self"],["fdflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["atflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["mode"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["self"],["oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["self"],["sflag"]]]],[11,"bitand_assign","yanix::poll","Disables all flags disabled in the set.",14,[[["self"],["pollflags"]]]],[11,"bitor_assign","yanix::file","Adds the set of flags.",9,[[["self"],["fdflag"]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["atflag"]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["mode"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["self"],["oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["self"],["sflag"]]]],[11,"bitor_assign","yanix::poll","Adds the set of flags.",14,[[["self"],["pollflags"]]]],[11,"bitxor_assign","yanix::file","Toggles the set of flags.",9,[[["self"],["fdflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["atflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["mode"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["self"],["oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["self"],["sflag"]]]],[11,"bitxor_assign","yanix::poll","Toggles the set of flags.",14,[[["self"],["pollflags"]]]],[11,"hash","yanix::dir","",5,[[["self"],["__h"]]]],[11,"hash","yanix::file","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","yanix::poll","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","yanix","",0,[[["self"],["__h"]]]],[11,"from_iter","yanix::file","",9,[[["intoiterator"]],["fdflag"]]],[11,"from_iter","","",10,[[["intoiterator"]],["atflag"]]],[11,"from_iter","","",11,[[["intoiterator"]],["mode"]]],[11,"from_iter","","",12,[[["intoiterator"]],["oflag"]]],[11,"from_iter","","",13,[[["intoiterator"]],["sflag"]]],[11,"from_iter","yanix::poll","",14,[[["intoiterator"]],["pollflags"]]],[11,"fmt","yanix::file","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::file","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::file","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::file","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","yanix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"source","yanix","",1,[[["self"]],[["option",["error"]],["error"]]]],[11,"as_raw_fd","yanix::dir","",5,[[["self"]],["rawfd"]]]],"p":[[4,"Errno"],[4,"YanixError"],[4,"ClockId"],[4,"FileType"],[8,"EntryExt"],[3,"Dir"],[3,"Entry"],[3,"SeekLoc"],[3,"DirIter"],[3,"FdFlag"],[3,"AtFlag"],[3,"Mode"],[3,"OFlag"],[3,"SFlag"],[3,"PollFlags"],[3,"PollFd"],[4,"SockType"],[4,"PosixFadviseAdvice"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);